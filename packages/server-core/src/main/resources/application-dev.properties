spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.hibernate.ddl-auto=validate
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.datasource.hikari.connection-init-sql=SET TIME ZONE '${app.timezone}'
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

#spring.sql.init.mode=always
#spring.sql.init.platform=postgres
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

spring.datasource.username=postgres
spring.datasource.password=admin
spring.datasource.url=jdbc:postgresql://localhost:5432/feedless

logging.level.org.springframework.security.web.csrf=off
logging.level.ch.qos.logback=off
#spring.jpa.properties.hibernate.use_sql_comments=true
#logging.file.name=./database.log
#logging.pattern.file=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n

logging.level.root=INFO
#logging.level.WebToFeedTransformer=DEBUG
logging.level.org.springframework.security=DEBUG
#logging.level.org.springframework.web=DEBUG

logging.config=classpath:logback.xml

##spring.security.oauth2.client.provider.rich.issuer-uri=http://localhost:8080/api/oauth/issuer
#spring.security.oauth2.client.provider.rich.authorization-uri=http://localhost:8080/api/oauth2/authorization
#spring.security.oauth2.client.provider.rich.token-uri=http://localhost:8080/api/oauth2/token
##spring.security.oauth2.client.provider.rich.user-info-authentication-method=CLIENT_SECRET_BASIC
#spring.security.oauth2.client.provider.rich.user-info-authentication-method=client_secret_jwt
#
#spring.security.oauth2.client.registration.rich.clientId=rich-client-id
#spring.security.oauth2.client.registration.rich.clientSecret=rich-client-secret
#spring.security.oauth2.client.registration.rich.client-authentication-method=basic
#spring.security.oauth2.client.registration.rich.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.rich.redirect-uri=http://localhost:8080/api/oauth2/code

# https://developers.google.com/identity/protocols/oauth2/web-server
spring.security.oauth2.client.registration.google.clientId=343423943511-t83rkoi6ul369b2e2p2it8dt5554i9cu.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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

# https://github.com/settings/apps/
spring.security.oauth2.client.registration.github.clientId=Iv1.3fc36e6644b030c3
spring.security.oauth2.client.registration.github.clientSecret=b49d33465c75bcbc78fa7e3b313266f8c41f4e63



app.rootEmail=admin@localhost
app.jwtSecret=60ae393744191ee58869f700c1d27647b0b64d42
app.rootSecretKey=QDWSM3OYBPGTEVSPB5FKVDM3CSNCWHVK
app.actuatorPassword=password
app.whitelistedHosts=127.0.0.1
app.apiGatewayUrl=http://localhost:8080
app.appHost=https://localhost:4200

spring.mail.host=localhost
spring.mail.port=25
#spring.mail.username=${mailUsername}
#spring.mail.password=${mailPassword}
spring.mail.properties.mail.smtp.auth=false
spring.mail.test-connection=true
spring.mail.properties.mail.smtp.starttls.enable=false
