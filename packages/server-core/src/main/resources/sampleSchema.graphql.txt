type Query {
  article(where: ArticleWhereUniqueInput!): Article
  findFirstArticle(
    where: ArticleWhereInput
    orderBy: [ArticleOrderByWithRelationInput!]
    cursor: ArticleWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ArticleScalarFieldEnum!]
  ): Article
  articles(
    where: ArticleWhereInput
    orderBy: [ArticleOrderByWithRelationInput!]
    cursor: ArticleWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ArticleScalarFieldEnum!]
  ): [Article!]!
  aggregateArticle(
    where: ArticleWhereInput
    orderBy: [ArticleOrderByWithRelationInput!]
    cursor: ArticleWhereUniqueInput
    take: Int
    skip: Int
  ): AggregateArticle!
  groupByArticle(
    where: ArticleWhereInput
    orderBy: [ArticleOrderByWithAggregationInput!]
    by: [ArticleScalarFieldEnum!]!
    having: ArticleScalarWhereWithAggregatesInput
    take: Int
    skip: Int
  ): [ArticleGroupBy!]!
  articleExporter(where: ArticleExporterWhereUniqueInput!): ArticleExporter
  findFirstArticleExporter(
    where: ArticleExporterWhereInput
    orderBy: [ArticleExporterOrderByWithRelationInput!]
    cursor: ArticleExporterWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ArticleExporterScalarFieldEnum!]
  ): ArticleExporter
  articleExporters(
    where: ArticleExporterWhereInput
    orderBy: [ArticleExporterOrderByWithRelationInput!]
    cursor: ArticleExporterWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ArticleExporterScalarFieldEnum!]
  ): [ArticleExporter!]!
  aggregateArticleExporter(
    where: ArticleExporterWhereInput
    orderBy: [ArticleExporterOrderByWithRelationInput!]
    cursor: ArticleExporterWhereUniqueInput
    take: Int
    skip: Int
  ): AggregateArticleExporter!
  groupByArticleExporter(
    where: ArticleExporterWhereInput
    orderBy: [ArticleExporterOrderByWithAggregationInput!]
    by: [ArticleExporterScalarFieldEnum!]!
    having: ArticleExporterScalarWhereWithAggregatesInput
    take: Int
    skip: Int
  ): [ArticleExporterGroupBy!]!
  articleExporterTarget(
    where: ArticleExporterTargetWhereUniqueInput!
  ): ArticleExporterTarget
  findFirstArticleExporterTarget(
    where: ArticleExporterTargetWhereInput
    orderBy: [ArticleExporterTargetOrderByWithRelationInput!]
    cursor: ArticleExporterTargetWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ArticleExporterTargetScalarFieldEnum!]
  ): ArticleExporterTarget
  articleExporterTargets(
    where: ArticleExporterTargetWhereInput
    orderBy: [ArticleExporterTargetOrderByWithRelationInput!]
    cursor: ArticleExporterTargetWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ArticleExporterTargetScalarFieldEnum!]
  ): [ArticleExporterTarget!]!
  aggregateArticleExporterTarget(
    where: ArticleExporterTargetWhereInput
    orderBy: [ArticleExporterTargetOrderByWithRelationInput!]
    cursor: ArticleExporterTargetWhereUniqueInput
    take: Int
    skip: Int
  ): AggregateArticleExporterTarget!
  groupByArticleExporterTarget(
    where: ArticleExporterTargetWhereInput
    orderBy: [ArticleExporterTargetOrderByWithAggregationInput!]
    by: [ArticleExporterTargetScalarFieldEnum!]!
    having: ArticleExporterTargetScalarWhereWithAggregatesInput
    take: Int
    skip: Int
  ): [ArticleExporterTargetGroupBy!]!
  articlePostProcessor(
    where: ArticlePostProcessorWhereUniqueInput!
  ): ArticlePostProcessor
  findFirstArticlePostProcessor(
    where: ArticlePostProcessorWhereInput
    orderBy: [ArticlePostProcessorOrderByWithRelationInput!]
    cursor: ArticlePostProcessorWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ArticlePostProcessorScalarFieldEnum!]
  ): ArticlePostProcessor
  articlePostProcessors(
    where: ArticlePostProcessorWhereInput
    orderBy: [ArticlePostProcessorOrderByWithRelationInput!]
    cursor: ArticlePostProcessorWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ArticlePostProcessorScalarFieldEnum!]
  ): [ArticlePostProcessor!]!
  aggregateArticlePostProcessor(
    where: ArticlePostProcessorWhereInput
    orderBy: [ArticlePostProcessorOrderByWithRelationInput!]
    cursor: ArticlePostProcessorWhereUniqueInput
    take: Int
    skip: Int
  ): AggregateArticlePostProcessor!
  groupByArticlePostProcessor(
    where: ArticlePostProcessorWhereInput
    orderBy: [ArticlePostProcessorOrderByWithAggregationInput!]
    by: [ArticlePostProcessorScalarFieldEnum!]!
    having: ArticlePostProcessorScalarWhereWithAggregatesInput
    take: Int
    skip: Int
  ): [ArticlePostProcessorGroupBy!]!
  articleRef(where: ArticleRefWhereUniqueInput!): ArticleRef
  findFirstArticleRef(
    where: ArticleRefWhereInput
    orderBy: [ArticleRefOrderByWithRelationInput!]
    cursor: ArticleRefWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ArticleRefScalarFieldEnum!]
  ): ArticleRef
  articleRefs(
    where: ArticleRefWhereInput
    orderBy: [ArticleRefOrderByWithRelationInput!]
    cursor: ArticleRefWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ArticleRefScalarFieldEnum!]
  ): [ArticleRef!]!
  aggregateArticleRef(
    where: ArticleRefWhereInput
    orderBy: [ArticleRefOrderByWithRelationInput!]
    cursor: ArticleRefWhereUniqueInput
    take: Int
    skip: Int
  ): AggregateArticleRef!
  groupByArticleRef(
    where: ArticleRefWhereInput
    orderBy: [ArticleRefOrderByWithAggregationInput!]
    by: [ArticleRefScalarFieldEnum!]!
    having: ArticleRefScalarWhereWithAggregatesInput
    take: Int
    skip: Int
  ): [ArticleRefGroupBy!]!
  bucket(where: BucketWhereUniqueInput!): Bucket
  findFirstBucket(
    where: BucketWhereInput
    orderBy: [BucketOrderByWithRelationInput!]
    cursor: BucketWhereUniqueInput
    take: Int
    skip: Int
    distinct: [BucketScalarFieldEnum!]
  ): Bucket
  buckets(
    where: BucketWhereInput
    orderBy: [BucketOrderByWithRelationInput!]
    cursor: BucketWhereUniqueInput
    take: Int
    skip: Int
    distinct: [BucketScalarFieldEnum!]
  ): [Bucket!]!
  aggregateBucket(
    where: BucketWhereInput
    orderBy: [BucketOrderByWithRelationInput!]
    cursor: BucketWhereUniqueInput
    take: Int
    skip: Int
  ): AggregateBucket!
  groupByBucket(
    where: BucketWhereInput
    orderBy: [BucketOrderByWithAggregationInput!]
    by: [BucketScalarFieldEnum!]!
    having: BucketScalarWhereWithAggregatesInput
    take: Int
    skip: Int
  ): [BucketGroupBy!]!
  eventHook(where: EventHookWhereUniqueInput!): EventHook
  findFirstEventHook(
    where: EventHookWhereInput
    orderBy: [EventHookOrderByWithRelationInput!]
    cursor: EventHookWhereUniqueInput
    take: Int
    skip: Int
    distinct: [EventHookScalarFieldEnum!]
  ): EventHook
  eventHooks(
    where: EventHookWhereInput
    orderBy: [EventHookOrderByWithRelationInput!]
    cursor: EventHookWhereUniqueInput
    take: Int
    skip: Int
    distinct: [EventHookScalarFieldEnum!]
  ): [EventHook!]!
  aggregateEventHook(
    where: EventHookWhereInput
    orderBy: [EventHookOrderByWithRelationInput!]
    cursor: EventHookWhereUniqueInput
    take: Int
    skip: Int
  ): AggregateEventHook!
  groupByEventHook(
    where: EventHookWhereInput
    orderBy: [EventHookOrderByWithAggregationInput!]
    by: [EventHookScalarFieldEnum!]!
    having: EventHookScalarWhereWithAggregatesInput
    take: Int
    skip: Int
  ): [EventHookGroupBy!]!
  feed(where: FeedWhereUniqueInput!): Feed
  findFirstFeed(
    where: FeedWhereInput
    orderBy: [FeedOrderByWithRelationInput!]
    cursor: FeedWhereUniqueInput
    take: Int
    skip: Int
    distinct: [FeedScalarFieldEnum!]
  ): Feed
  feeds(
    where: FeedWhereInput
    orderBy: [FeedOrderByWithRelationInput!]
    cursor: FeedWhereUniqueInput
    take: Int
    skip: Int
    distinct: [FeedScalarFieldEnum!]
  ): [Feed!]!
  aggregateFeed(
    where: FeedWhereInput
    orderBy: [FeedOrderByWithRelationInput!]
    cursor: FeedWhereUniqueInput
    take: Int
    skip: Int
  ): AggregateFeed!
  groupByFeed(
    where: FeedWhereInput
    orderBy: [FeedOrderByWithAggregationInput!]
    by: [FeedScalarFieldEnum!]!
    having: FeedScalarWhereWithAggregatesInput
    take: Int
    skip: Int
  ): [FeedGroupBy!]!
  noFollowUrl(where: NoFollowUrlWhereUniqueInput!): NoFollowUrl
  findFirstNoFollowUrl(
    where: NoFollowUrlWhereInput
    orderBy: [NoFollowUrlOrderByWithRelationInput!]
    cursor: NoFollowUrlWhereUniqueInput
    take: Int
    skip: Int
    distinct: [NoFollowUrlScalarFieldEnum!]
  ): NoFollowUrl
  noFollowUrls(
    where: NoFollowUrlWhereInput
    orderBy: [NoFollowUrlOrderByWithRelationInput!]
    cursor: NoFollowUrlWhereUniqueInput
    take: Int
    skip: Int
    distinct: [NoFollowUrlScalarFieldEnum!]
  ): [NoFollowUrl!]!
  aggregateNoFollowUrl(
    where: NoFollowUrlWhereInput
    orderBy: [NoFollowUrlOrderByWithRelationInput!]
    cursor: NoFollowUrlWhereUniqueInput
    take: Int
    skip: Int
  ): AggregateNoFollowUrl!
  groupByNoFollowUrl(
    where: NoFollowUrlWhereInput
    orderBy: [NoFollowUrlOrderByWithAggregationInput!]
    by: [NoFollowUrlScalarFieldEnum!]!
    having: NoFollowUrlScalarWhereWithAggregatesInput
    take: Int
    skip: Int
  ): [NoFollowUrlGroupBy!]!
  notebook(where: NotebookWhereUniqueInput!): Notebook
  findFirstNotebook(
    where: NotebookWhereInput
    orderBy: [NotebookOrderByWithRelationInput!]
    cursor: NotebookWhereUniqueInput
    take: Int
    skip: Int
    distinct: [NotebookScalarFieldEnum!]
  ): Notebook
  notebooks(
    where: NotebookWhereInput
    orderBy: [NotebookOrderByWithRelationInput!]
    cursor: NotebookWhereUniqueInput
    take: Int
    skip: Int
    distinct: [NotebookScalarFieldEnum!]
  ): [Notebook!]!
  aggregateNotebook(
    where: NotebookWhereInput
    orderBy: [NotebookOrderByWithRelationInput!]
    cursor: NotebookWhereUniqueInput
    take: Int
    skip: Int
  ): AggregateNotebook!
  groupByNotebook(
    where: NotebookWhereInput
    orderBy: [NotebookOrderByWithAggregationInput!]
    by: [NotebookScalarFieldEnum!]!
    having: NotebookScalarWhereWithAggregatesInput
    take: Int
    skip: Int
  ): [NotebookGroupBy!]!
  plugin(where: PluginWhereUniqueInput!): Plugin
  findFirstPlugin(
    where: PluginWhereInput
    orderBy: [PluginOrderByWithRelationInput!]
    cursor: PluginWhereUniqueInput
    take: Int
    skip: Int
    distinct: [PluginScalarFieldEnum!]
  ): Plugin
  plugins(
    where: PluginWhereInput
    orderBy: [PluginOrderByWithRelationInput!]
    cursor: PluginWhereUniqueInput
    take: Int
    skip: Int
    distinct: [PluginScalarFieldEnum!]
  ): [Plugin!]!
  aggregatePlugin(
    where: PluginWhereInput
    orderBy: [PluginOrderByWithRelationInput!]
    cursor: PluginWhereUniqueInput
    take: Int
    skip: Int
  ): AggregatePlugin!
  groupByPlugin(
    where: PluginWhereInput
    orderBy: [PluginOrderByWithAggregationInput!]
    by: [PluginScalarFieldEnum!]!
    having: PluginScalarWhereWithAggregatesInput
    take: Int
    skip: Int
  ): [PluginGroupBy!]!
  stream(where: StreamWhereUniqueInput!): Stream
  findFirstStream(
    where: StreamWhereInput
    orderBy: [StreamOrderByWithRelationInput!]
    cursor: StreamWhereUniqueInput
    take: Int
    skip: Int
    distinct: [StreamScalarFieldEnum!]
  ): Stream
  streams(
    where: StreamWhereInput
    orderBy: [StreamOrderByWithRelationInput!]
    cursor: StreamWhereUniqueInput
    take: Int
    skip: Int
    distinct: [StreamScalarFieldEnum!]
  ): [Stream!]!
  aggregateStream(
    where: StreamWhereInput
    orderBy: [StreamOrderByWithRelationInput!]
    cursor: StreamWhereUniqueInput
    take: Int
    skip: Int
  ): AggregateStream!
  groupByStream(
    where: StreamWhereInput
    orderBy: [StreamOrderByWithAggregationInput!]
    by: [StreamScalarFieldEnum!]!
    having: StreamScalarWhereWithAggregatesInput
    take: Int
    skip: Int
  ): [StreamGroupBy!]!
  subscription(where: SubscriptionWhereUniqueInput!): Subscription
  findFirstSubscription(
    where: SubscriptionWhereInput
    orderBy: [SubscriptionOrderByWithRelationInput!]
    cursor: SubscriptionWhereUniqueInput
    take: Int
    skip: Int
    distinct: [SubscriptionScalarFieldEnum!]
  ): Subscription
  subscriptions(
    where: SubscriptionWhereInput
    orderBy: [SubscriptionOrderByWithRelationInput!]
    cursor: SubscriptionWhereUniqueInput
    take: Int
    skip: Int
    distinct: [SubscriptionScalarFieldEnum!]
  ): [Subscription!]!
  aggregateSubscription(
    where: SubscriptionWhereInput
    orderBy: [SubscriptionOrderByWithRelationInput!]
    cursor: SubscriptionWhereUniqueInput
    take: Int
    skip: Int
  ): AggregateSubscription!
  groupBySubscription(
    where: SubscriptionWhereInput
    orderBy: [SubscriptionOrderByWithAggregationInput!]
    by: [SubscriptionScalarFieldEnum!]!
    having: SubscriptionScalarWhereWithAggregatesInput
    take: Int
    skip: Int
  ): [SubscriptionGroupBy!]!
  user(where: UserWhereUniqueInput!): User
  findFirstUser(
    where: UserWhereInput
    orderBy: [UserOrderByWithRelationInput!]
    cursor: UserWhereUniqueInput
    take: Int
    skip: Int
    distinct: [UserScalarFieldEnum!]
  ): User
  users(
    where: UserWhereInput
    orderBy: [UserOrderByWithRelationInput!]
    cursor: UserWhereUniqueInput
    take: Int
    skip: Int
    distinct: [UserScalarFieldEnum!]
  ): [User!]!
  aggregateUser(
    where: UserWhereInput
    orderBy: [UserOrderByWithRelationInput!]
    cursor: UserWhereUniqueInput
    take: Int
    skip: Int
  ): AggregateUser!
  groupByUser(
    where: UserWhereInput
    orderBy: [UserOrderByWithAggregationInput!]
    by: [UserScalarFieldEnum!]!
    having: UserScalarWhereWithAggregatesInput
    take: Int
    skip: Int
  ): [UserGroupBy!]!
  discoverFeedsByUrl(prerender: Boolean = false, url: String!): DiscoveredFeeds!
  articlesForFeedUrl(feedUrl: String!): [Article!]!
  metadataForNativeFeedByUrl(feedUrl: String!): Feed!
}

type Article {
  id: String!
  updatedAt: DateTime!
  released: Boolean!
  date_published: DateTime!
  date_modified: DateTime
  comment_feed_url: String
  url: String
  author: String
  title: String!
  tags: JSON
  content_raw_mime: String
  content_raw: String
  content_text: String
  main_image_url: String
  source_used: String
  has_harvest: Boolean
  has_readability: Boolean
  has_video: Boolean!
  has_audio: Boolean!
  length_video: Int
  length_audio: Int
  word_count_text: Int
  score: Float
  lastScoredAt: DateTime!
  enclosure: JSON
  data_json_map: JSON
  _count: ArticleCount
  articleRef(
    where: ArticleRefWhereInput
    orderBy: [ArticleRefOrderByWithRelationInput!]
    cursor: ArticleRefWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ArticleRefScalarFieldEnum!]
  ): [ArticleRef!]!
}

# The javascript `Date` as string. Type represents date and time as the ISO Date string.
scalar DateTime

# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSON

type ArticleCount {
  articleRef: Int!
}

type ArticleRef {
  id: String!
  createdAt: DateTime!
  date_released: DateTime!
  ownerId: String!
  favored: Boolean!
  has_seen: Boolean!
  tags: JSON
  data: JSON
  articleId: String!
  type: String!
  streamId: String!
  owner: User!
  article: Article!
  stream: Stream!
}

type User {
  id: String!
  email: String!
  name: String!
  date_format: String
  time_format: String
  createdAt: DateTime!
  _count: UserCount
  buckets(
    where: BucketWhereInput
    orderBy: [BucketOrderByWithRelationInput!]
    cursor: BucketWhereUniqueInput
    take: Int
    skip: Int
    distinct: [BucketScalarFieldEnum!]
  ): [Bucket!]!
  articleRefs(
    where: ArticleRefWhereInput
    orderBy: [ArticleRefOrderByWithRelationInput!]
    cursor: ArticleRefWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ArticleRefScalarFieldEnum!]
  ): [ArticleRef!]!
  notebooks(
    where: NotebookWhereInput
    orderBy: [NotebookOrderByWithRelationInput!]
    cursor: NotebookWhereUniqueInput
    take: Int
    skip: Int
    distinct: [NotebookScalarFieldEnum!]
  ): [Notebook!]!
  subscription(
    where: SubscriptionWhereInput
    orderBy: [SubscriptionOrderByWithRelationInput!]
    cursor: SubscriptionWhereUniqueInput
    take: Int
    skip: Int
    distinct: [SubscriptionScalarFieldEnum!]
  ): [Subscription!]!
  feeds(
    where: FeedWhereInput
    orderBy: [FeedOrderByWithRelationInput!]
    cursor: FeedWhereUniqueInput
    take: Int
    skip: Int
    distinct: [FeedScalarFieldEnum!]
  ): [Feed!]!
  eventHooks(
    where: EventHookWhereInput
    orderBy: [EventHookOrderByWithRelationInput!]
    cursor: EventHookWhereUniqueInput
    take: Int
    skip: Int
    distinct: [EventHookScalarFieldEnum!]
  ): [EventHook!]!
  plugins(
    where: PluginWhereInput
    orderBy: [PluginOrderByWithRelationInput!]
    cursor: PluginWhereUniqueInput
    take: Int
    skip: Int
    distinct: [PluginScalarFieldEnum!]
  ): [Plugin!]!
}

type UserCount {
  buckets: Int!
  articleRefs: Int!
  notebooks: Int!
  subscription: Int!
  feeds: Int!
  eventHooks: Int!
  plugins: Int!
}

type Bucket {
  id: String!
  title: String!
  description: String
  is_public: Boolean!
  tags: JSON
  in_focus: Boolean!
  type: Int!
  ownerId: String!
  lastUpdatedAt: DateTime
  createdAt: DateTime!
  streamId: String!
  _count: BucketCount
  owner: User!
  subscriptions(
    where: SubscriptionWhereInput
    orderBy: [SubscriptionOrderByWithRelationInput!]
    cursor: SubscriptionWhereUniqueInput
    take: Int
    skip: Int
    distinct: [SubscriptionScalarFieldEnum!]
  ): [Subscription!]!
  postProcessors(
    where: ArticlePostProcessorWhereInput
    orderBy: [ArticlePostProcessorOrderByWithRelationInput!]
    cursor: ArticlePostProcessorWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ArticlePostProcessorScalarFieldEnum!]
  ): [ArticlePostProcessor!]!
  exporters(
    where: ArticleExporterWhereInput
    orderBy: [ArticleExporterOrderByWithRelationInput!]
    cursor: ArticleExporterWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ArticleExporterScalarFieldEnum!]
  ): [ArticleExporter!]!
  stream: Stream!
}

type BucketCount {
  subscriptions: Int!
  postProcessors: Int!
  exporters: Int!
}

type Subscription {
  id: String!
  inactive: Boolean!
  createdAt: DateTime!
  lastUpdatedAt: DateTime
  title: String!
  tags: JSON
  feedId: String!
  ownerId: String!
  bucketId: String!
  feed: Feed!
  owner: User!
  bucket: Bucket!
}

type Feed {
  id: String!
  feed_url: String!
  home_page_url: String
  domain: String!
  title: String
  tags: JSON
  author: String
  ownerId: String!
  failed_attempt_count: Int!
  is_private: Boolean!
  expired: Boolean!
  broken: Boolean!
  inactive: Boolean!
  managed: Boolean!
  filter: String
  description: String
  status: String!
  lastStatusChangeAt: DateTime
  retention_size: Int
  harvest_site: Boolean!
  allowHarvestFailure: Boolean!
  harvest_prerender: Boolean!
  streamId: String!
  lastUpdatedAt: DateTime
  _count: FeedCount
  owner: User!
  managed_by_plugin: Plugin
  stream: Stream!
}

type FeedCount {
  subscriptions: Int!
}

type Plugin {
  id: String!
  source_url: String!
  type: String!
  user_params: JSON!
  ownerId: String!
  source: JSON
  source_sha1: String
  lastUpdatedAt: DateTime!
  createdAt: DateTime!
  _count: PluginCount
  owner: User!
  feeds(
    where: FeedWhereInput
    orderBy: [FeedOrderByWithRelationInput!]
    cursor: FeedWhereUniqueInput
    take: Int
    skip: Int
    distinct: [FeedScalarFieldEnum!]
  ): [Feed!]!
}

type PluginCount {
  feeds: Int!
}

input FeedWhereInput {
  AND: [FeedWhereInput!]
  OR: [FeedWhereInput!]
  NOT: [FeedWhereInput!]
  id: StringFilter
  feed_url: StringFilter
  feed_url_auth_header: StringNullableFilter
  home_page_url: StringNullableFilter
  domain: StringFilter
  op_secret: StringFilter
  title: StringNullableFilter
  tags: JsonNullableFilter
  author: StringNullableFilter
  owner: UserRelationFilter
  ownerId: StringFilter
  failed_attempt_count: IntFilter
  is_private: BoolFilter
  expired: BoolFilter
  broken: BoolFilter
  inactive: BoolFilter
  managed: BoolFilter
  managed_by_plugin: PluginRelationFilter
  managed_by_plugin_id: StringNullableFilter
  filter: StringNullableFilter
  description: StringNullableFilter
  status: StringFilter
  lastStatusChangeAt: DateTimeNullableFilter
  harvestIntervalMinutes: IntNullableFilter
  nextHarvestAt: DateTimeNullableFilter
  retention_size: IntNullableFilter
  harvest_site: BoolFilter
  allowHarvestFailure: BoolFilter
  harvest_prerender: BoolFilter
  stream: StreamRelationFilter
  streamId: StringFilter
  subscriptions: SubscriptionListRelationFilter
  createdAt: DateTimeFilter
  lastUpdatedAt: DateTimeNullableFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringNullableFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input JsonNullableFilter {
  equals: JSON
  not: JSON
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: StringFilter
  email: StringFilter
  name: StringFilter
  buckets: BucketListRelationFilter
  articleRefs: ArticleRefListRelationFilter
  notebooks: NotebookListRelationFilter
  subscription: SubscriptionListRelationFilter
  feeds: FeedListRelationFilter
  eventHooks: EventHookListRelationFilter
  plugins: PluginListRelationFilter
  date_format: StringNullableFilter
  time_format: StringNullableFilter
  createdAt: DateTimeFilter
}

input BucketListRelationFilter {
  every: BucketWhereInput
  some: BucketWhereInput
  none: BucketWhereInput
}

input BucketWhereInput {
  AND: [BucketWhereInput!]
  OR: [BucketWhereInput!]
  NOT: [BucketWhereInput!]
  id: StringFilter
  title: StringFilter
  description: StringNullableFilter
  is_public: BoolFilter
  tags: JsonNullableFilter
  in_focus: BoolFilter
  type: IntFilter
  owner: UserRelationFilter
  ownerId: StringFilter
  subscriptions: SubscriptionListRelationFilter
  postProcessors: ArticlePostProcessorListRelationFilter
  exporters: ArticleExporterListRelationFilter
  lastUpdatedAt: DateTimeNullableFilter
  createdAt: DateTimeFilter
  stream: StreamRelationFilter
  streamId: StringFilter
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input NestedIntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input SubscriptionListRelationFilter {
  every: SubscriptionWhereInput
  some: SubscriptionWhereInput
  none: SubscriptionWhereInput
}

input SubscriptionWhereInput {
  AND: [SubscriptionWhereInput!]
  OR: [SubscriptionWhereInput!]
  NOT: [SubscriptionWhereInput!]
  id: StringFilter
  inactive: BoolFilter
  createdAt: DateTimeFilter
  lastUpdatedAt: DateTimeNullableFilter
  title: StringFilter
  tags: JsonNullableFilter
  feed: FeedRelationFilter
  feedId: StringFilter
  owner: UserRelationFilter
  ownerId: StringFilter
  bucket: BucketRelationFilter
  bucketId: StringFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableFilter
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableFilter
}

input FeedRelationFilter {
  is: FeedWhereInput
  isNot: FeedWhereInput
}

input BucketRelationFilter {
  is: BucketWhereInput
  isNot: BucketWhereInput
}

input ArticlePostProcessorListRelationFilter {
  every: ArticlePostProcessorWhereInput
  some: ArticlePostProcessorWhereInput
  none: ArticlePostProcessorWhereInput
}

input ArticlePostProcessorWhereInput {
  AND: [ArticlePostProcessorWhereInput!]
  OR: [ArticlePostProcessorWhereInput!]
  NOT: [ArticlePostProcessorWhereInput!]
  id: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  type: StringFilter
  context: StringNullableFilter
  buckets: BucketListRelationFilter
}

input ArticleExporterListRelationFilter {
  every: ArticleExporterWhereInput
  some: ArticleExporterWhereInput
  none: ArticleExporterWhereInput
}

input ArticleExporterWhereInput {
  AND: [ArticleExporterWhereInput!]
  OR: [ArticleExporterWhereInput!]
  NOT: [ArticleExporterWhereInput!]
  id: StringFilter
  segment: BoolFilter
  segment_sort_field: StringNullableFilter
  segment_sort_asc: BoolFilter
  segment_size: IntNullableFilter
  segment_digest: BoolFilter
  segment_look_ahead_min: IntNullableFilter
  lastUpdatedAt: DateTimeNullableFilter
  trigger_refresh_on: StringFilter
  trigger_scheduled_last_at: DateTimeNullableFilter
  trigger_scheduled_next_at: DateTimeNullableFilter
  trigger_scheduled: StringNullableFilter
  targets: ArticleExporterTargetListRelationFilter
  bucket: BucketRelationFilter
  bucketId: StringFilter
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input NestedIntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input ArticleExporterTargetListRelationFilter {
  every: ArticleExporterTargetWhereInput
  some: ArticleExporterTargetWhereInput
  none: ArticleExporterTargetWhereInput
}

input ArticleExporterTargetWhereInput {
  AND: [ArticleExporterTargetWhereInput!]
  OR: [ArticleExporterTargetWhereInput!]
  NOT: [ArticleExporterTargetWhereInput!]
  id: StringFilter
  type: StringFilter
  context: StringNullableFilter
  exporter: ArticleExporterRelationFilter
  exporterId: StringFilter
}

input ArticleExporterRelationFilter {
  is: ArticleExporterWhereInput
  isNot: ArticleExporterWhereInput
}

input StreamRelationFilter {
  is: StreamWhereInput
  isNot: StreamWhereInput
}

input StreamWhereInput {
  AND: [StreamWhereInput!]
  OR: [StreamWhereInput!]
  NOT: [StreamWhereInput!]
  id: StringFilter
  articleRefs: ArticleRefListRelationFilter
  feeds: FeedListRelationFilter
  buckets: BucketListRelationFilter
  notebooks: NotebookListRelationFilter
}

input ArticleRefListRelationFilter {
  every: ArticleRefWhereInput
  some: ArticleRefWhereInput
  none: ArticleRefWhereInput
}

input ArticleRefWhereInput {
  AND: [ArticleRefWhereInput!]
  OR: [ArticleRefWhereInput!]
  NOT: [ArticleRefWhereInput!]
  id: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  date_released: DateTimeFilter
  owner: UserRelationFilter
  ownerId: StringFilter
  favored: BoolFilter
  has_seen: BoolFilter
  tags: JsonNullableFilter
  data: JsonNullableFilter
  article: ArticleRelationFilter
  articleId: StringFilter
  type: StringFilter
  stream: StreamRelationFilter
  streamId: StringFilter
}

input ArticleRelationFilter {
  is: ArticleWhereInput
  isNot: ArticleWhereInput
}

input ArticleWhereInput {
  AND: [ArticleWhereInput!]
  OR: [ArticleWhereInput!]
  NOT: [ArticleWhereInput!]
  id: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  released: BoolFilter
  date_published: DateTimeFilter
  date_modified: DateTimeNullableFilter
  comment_feed_url: StringNullableFilter
  url: StringNullableFilter
  author: StringNullableFilter
  title: StringFilter
  tags: JsonNullableFilter
  content_raw_mime: StringNullableFilter
  content_raw: StringNullableFilter
  content_text: StringNullableFilter
  main_image_url: StringNullableFilter
  source_used: StringNullableFilter
  has_harvest: BoolNullableFilter
  has_readability: BoolNullableFilter
  has_video: BoolFilter
  has_audio: BoolFilter
  length_video: IntNullableFilter
  length_audio: IntNullableFilter
  word_count_text: IntNullableFilter
  score: FloatNullableFilter
  lastScoredAt: DateTimeFilter
  enclosure: JsonNullableFilter
  articleRef: ArticleRefListRelationFilter
  data_json_map: JsonNullableFilter
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input FloatNullableFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatNullableFilter
}

input NestedFloatNullableFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatNullableFilter
}

input FeedListRelationFilter {
  every: FeedWhereInput
  some: FeedWhereInput
  none: FeedWhereInput
}

input NotebookListRelationFilter {
  every: NotebookWhereInput
  some: NotebookWhereInput
  none: NotebookWhereInput
}

input NotebookWhereInput {
  AND: [NotebookWhereInput!]
  OR: [NotebookWhereInput!]
  NOT: [NotebookWhereInput!]
  id: StringFilter
  name: StringFilter
  description: StringFilter
  readonly: BoolFilter
  listed: BoolFilter
  stream: StreamRelationFilter
  streamId: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  owner: UserRelationFilter
  ownerId: StringFilter
}

input EventHookListRelationFilter {
  every: EventHookWhereInput
  some: EventHookWhereInput
  none: EventHookWhereInput
}

input EventHookWhereInput {
  AND: [EventHookWhereInput!]
  OR: [EventHookWhereInput!]
  NOT: [EventHookWhereInput!]
  id: StringFilter
  owner: UserRelationFilter
  ownerId: StringFilter
  event: StringFilter
  type: StringFilter
  script_or_url: StringFilter
  script_source_url: StringNullableFilter
}

input PluginListRelationFilter {
  every: PluginWhereInput
  some: PluginWhereInput
  none: PluginWhereInput
}

input PluginWhereInput {
  AND: [PluginWhereInput!]
  OR: [PluginWhereInput!]
  NOT: [PluginWhereInput!]
  id: StringFilter
  source_url: StringFilter
  type: StringFilter
  user_params: JsonFilter
  owner: UserRelationFilter
  ownerId: StringFilter
  source: JsonNullableFilter
  source_sha1: StringNullableFilter
  feeds: FeedListRelationFilter
  lastUpdatedAt: DateTimeFilter
  createdAt: DateTimeFilter
}

input JsonFilter {
  equals: JSON
  not: JSON
}

input PluginRelationFilter {
  is: PluginWhereInput
  isNot: PluginWhereInput
}

input FeedOrderByWithRelationInput {
  id: SortOrder
  feed_url: SortOrder
  feed_url_auth_header: SortOrder
  home_page_url: SortOrder
  domain: SortOrder
  op_secret: SortOrder
  title: SortOrder
  tags: SortOrder
  author: SortOrder
  owner: UserOrderByWithRelationInput
  ownerId: SortOrder
  failed_attempt_count: SortOrder
  is_private: SortOrder
  expired: SortOrder
  broken: SortOrder
  inactive: SortOrder
  managed: SortOrder
  managed_by_plugin: PluginOrderByWithRelationInput
  managed_by_plugin_id: SortOrder
  filter: SortOrder
  description: SortOrder
  status: SortOrder
  lastStatusChangeAt: SortOrder
  harvestIntervalMinutes: SortOrder
  nextHarvestAt: SortOrder
  retention_size: SortOrder
  harvest_site: SortOrder
  allowHarvestFailure: SortOrder
  harvest_prerender: SortOrder
  stream: StreamOrderByWithRelationInput
  streamId: SortOrder
  subscriptions: SubscriptionOrderByRelationAggregateInput
  createdAt: SortOrder
  lastUpdatedAt: SortOrder
}

enum SortOrder {
  asc
  desc
}

input UserOrderByWithRelationInput {
  id: SortOrder
  email: SortOrder
  name: SortOrder
  buckets: BucketOrderByRelationAggregateInput
  articleRefs: ArticleRefOrderByRelationAggregateInput
  notebooks: NotebookOrderByRelationAggregateInput
  subscription: SubscriptionOrderByRelationAggregateInput
  feeds: FeedOrderByRelationAggregateInput
  eventHooks: EventHookOrderByRelationAggregateInput
  plugins: PluginOrderByRelationAggregateInput
  date_format: SortOrder
  time_format: SortOrder
  createdAt: SortOrder
}

input BucketOrderByRelationAggregateInput {
  _count: SortOrder
}

input ArticleRefOrderByRelationAggregateInput {
  _count: SortOrder
}

input NotebookOrderByRelationAggregateInput {
  _count: SortOrder
}

input SubscriptionOrderByRelationAggregateInput {
  _count: SortOrder
}

input FeedOrderByRelationAggregateInput {
  _count: SortOrder
}

input EventHookOrderByRelationAggregateInput {
  _count: SortOrder
}

input PluginOrderByRelationAggregateInput {
  _count: SortOrder
}

input PluginOrderByWithRelationInput {
  id: SortOrder
  source_url: SortOrder
  type: SortOrder
  user_params: SortOrder
  owner: UserOrderByWithRelationInput
  ownerId: SortOrder
  source: SortOrder
  source_sha1: SortOrder
  feeds: FeedOrderByRelationAggregateInput
  lastUpdatedAt: SortOrder
  createdAt: SortOrder
}

input StreamOrderByWithRelationInput {
  id: SortOrder
  articleRefs: ArticleRefOrderByRelationAggregateInput
  feeds: FeedOrderByRelationAggregateInput
  buckets: BucketOrderByRelationAggregateInput
  notebooks: NotebookOrderByRelationAggregateInput
}

input FeedWhereUniqueInput {
  id: String
}

enum FeedScalarFieldEnum {
  id
  feed_url
  feed_url_auth_header
  home_page_url
  domain
  op_secret
  title
  tags
  author
  ownerId
  failed_attempt_count
  is_private
  expired
  broken
  inactive
  managed
  managed_by_plugin_id
  filter
  description
  status
  lastStatusChangeAt
  harvestIntervalMinutes
  nextHarvestAt
  retention_size
  harvest_site
  allowHarvestFailure
  harvest_prerender
  streamId
  createdAt
  lastUpdatedAt
}

type Stream {
  id: String!
  _count: StreamCount
  articleRefs(
    where: ArticleRefWhereInput
    orderBy: [ArticleRefOrderByWithRelationInput!]
    cursor: ArticleRefWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ArticleRefScalarFieldEnum!]
  ): [ArticleRef!]!
  feeds(
    where: FeedWhereInput
    orderBy: [FeedOrderByWithRelationInput!]
    cursor: FeedWhereUniqueInput
    take: Int
    skip: Int
    distinct: [FeedScalarFieldEnum!]
  ): [Feed!]!
  buckets(
    where: BucketWhereInput
    orderBy: [BucketOrderByWithRelationInput!]
    cursor: BucketWhereUniqueInput
    take: Int
    skip: Int
    distinct: [BucketScalarFieldEnum!]
  ): [Bucket!]!
  notebooks(
    where: NotebookWhereInput
    orderBy: [NotebookOrderByWithRelationInput!]
    cursor: NotebookWhereUniqueInput
    take: Int
    skip: Int
    distinct: [NotebookScalarFieldEnum!]
  ): [Notebook!]!
}

type StreamCount {
  articleRefs: Int!
  feeds: Int!
  buckets: Int!
  notebooks: Int!
}

input ArticleRefOrderByWithRelationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  date_released: SortOrder
  owner: UserOrderByWithRelationInput
  ownerId: SortOrder
  favored: SortOrder
  has_seen: SortOrder
  tags: SortOrder
  data: SortOrder
  article: ArticleOrderByWithRelationInput
  articleId: SortOrder
  type: SortOrder
  stream: StreamOrderByWithRelationInput
  streamId: SortOrder
}

input ArticleOrderByWithRelationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  released: SortOrder
  date_published: SortOrder
  date_modified: SortOrder
  comment_feed_url: SortOrder
  url: SortOrder
  author: SortOrder
  title: SortOrder
  tags: SortOrder
  content_raw_mime: SortOrder
  content_raw: SortOrder
  content_text: SortOrder
  main_image_url: SortOrder
  source_used: SortOrder
  has_harvest: SortOrder
  has_readability: SortOrder
  has_video: SortOrder
  has_audio: SortOrder
  length_video: SortOrder
  length_audio: SortOrder
  word_count_text: SortOrder
  score: SortOrder
  lastScoredAt: SortOrder
  enclosure: SortOrder
  articleRef: ArticleRefOrderByRelationAggregateInput
  data_json_map: SortOrder
}

input ArticleRefWhereUniqueInput {
  id: String
}

enum ArticleRefScalarFieldEnum {
  id
  createdAt
  updatedAt
  date_released
  ownerId
  favored
  has_seen
  tags
  data
  articleId
  type
  streamId
}

input BucketOrderByWithRelationInput {
  id: SortOrder
  title: SortOrder
  description: SortOrder
  is_public: SortOrder
  tags: SortOrder
  in_focus: SortOrder
  type: SortOrder
  owner: UserOrderByWithRelationInput
  ownerId: SortOrder
  subscriptions: SubscriptionOrderByRelationAggregateInput
  postProcessors: ArticlePostProcessorOrderByRelationAggregateInput
  exporters: ArticleExporterOrderByRelationAggregateInput
  lastUpdatedAt: SortOrder
  createdAt: SortOrder
  stream: StreamOrderByWithRelationInput
  streamId: SortOrder
}

input ArticlePostProcessorOrderByRelationAggregateInput {
  _count: SortOrder
}

input ArticleExporterOrderByRelationAggregateInput {
  _count: SortOrder
}

input BucketWhereUniqueInput {
  id: String
}

enum BucketScalarFieldEnum {
  id
  title
  description
  is_public
  tags
  in_focus
  type
  ownerId
  lastUpdatedAt
  createdAt
  streamId
}

type Notebook {
  id: String!
  name: String!
  description: String!
  readonly: Boolean!
  listed: Boolean!
  streamId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  ownerId: String!
  stream: Stream!
  owner: User!
}

input NotebookOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  description: SortOrder
  readonly: SortOrder
  listed: SortOrder
  stream: StreamOrderByWithRelationInput
  streamId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  owner: UserOrderByWithRelationInput
  ownerId: SortOrder
}

input NotebookWhereUniqueInput {
  id: String
  name_ownerId: NotebookNameOwnerIdCompoundUniqueInput
}

input NotebookNameOwnerIdCompoundUniqueInput {
  name: String!
  ownerId: String!
}

enum NotebookScalarFieldEnum {
  id
  name
  description
  readonly
  listed
  streamId
  createdAt
  updatedAt
  ownerId
}

input SubscriptionOrderByWithRelationInput {
  id: SortOrder
  inactive: SortOrder
  createdAt: SortOrder
  lastUpdatedAt: SortOrder
  title: SortOrder
  tags: SortOrder
  feed: FeedOrderByWithRelationInput
  feedId: SortOrder
  owner: UserOrderByWithRelationInput
  ownerId: SortOrder
  bucket: BucketOrderByWithRelationInput
  bucketId: SortOrder
}

input SubscriptionWhereUniqueInput {
  id: String
}

enum SubscriptionScalarFieldEnum {
  id
  inactive
  createdAt
  lastUpdatedAt
  title
  tags
  feedId
  ownerId
  bucketId
}

type ArticlePostProcessor {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  type: String!
  context: String
  _count: ArticlePostProcessorCount
  buckets(
    where: BucketWhereInput
    orderBy: [BucketOrderByWithRelationInput!]
    cursor: BucketWhereUniqueInput
    take: Int
    skip: Int
    distinct: [BucketScalarFieldEnum!]
  ): [Bucket!]!
}

type ArticlePostProcessorCount {
  buckets: Int!
}

input ArticlePostProcessorOrderByWithRelationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  type: SortOrder
  context: SortOrder
  buckets: BucketOrderByRelationAggregateInput
}

input ArticlePostProcessorWhereUniqueInput {
  id: String
  type: String
}

enum ArticlePostProcessorScalarFieldEnum {
  id
  createdAt
  updatedAt
  type
  context
}

type ArticleExporter {
  id: String!
  segment: Boolean!
  segment_sort_field: String
  segment_sort_asc: Boolean!
  segment_size: Int
  segment_digest: Boolean!
  segment_look_ahead_min: Int
  lastUpdatedAt: DateTime
  trigger_refresh_on: String!
  trigger_scheduled_last_at: DateTime
  trigger_scheduled_next_at: DateTime
  trigger_scheduled: String
  bucketId: String!
  _count: ArticleExporterCount
  targets(
    where: ArticleExporterTargetWhereInput
    orderBy: [ArticleExporterTargetOrderByWithRelationInput!]
    cursor: ArticleExporterTargetWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ArticleExporterTargetScalarFieldEnum!]
  ): [ArticleExporterTarget!]!
  bucket: Bucket!
}

type ArticleExporterCount {
  targets: Int!
}

type ArticleExporterTarget {
  id: String!
  type: String!
  context: String
  exporterId: String!
  exporter: ArticleExporter!
}

input ArticleExporterTargetOrderByWithRelationInput {
  id: SortOrder
  type: SortOrder
  context: SortOrder
  exporter: ArticleExporterOrderByWithRelationInput
  exporterId: SortOrder
}

input ArticleExporterOrderByWithRelationInput {
  id: SortOrder
  segment: SortOrder
  segment_sort_field: SortOrder
  segment_sort_asc: SortOrder
  segment_size: SortOrder
  segment_digest: SortOrder
  segment_look_ahead_min: SortOrder
  lastUpdatedAt: SortOrder
  trigger_refresh_on: SortOrder
  trigger_scheduled_last_at: SortOrder
  trigger_scheduled_next_at: SortOrder
  trigger_scheduled: SortOrder
  targets: ArticleExporterTargetOrderByRelationAggregateInput
  bucket: BucketOrderByWithRelationInput
  bucketId: SortOrder
}

input ArticleExporterTargetOrderByRelationAggregateInput {
  _count: SortOrder
}

input ArticleExporterTargetWhereUniqueInput {
  id: String
}

enum ArticleExporterTargetScalarFieldEnum {
  id
  type
  context
  exporterId
}

input ArticleExporterWhereUniqueInput {
  id: String
}

enum ArticleExporterScalarFieldEnum {
  id
  segment
  segment_sort_field
  segment_sort_asc
  segment_size
  segment_digest
  segment_look_ahead_min
  lastUpdatedAt
  trigger_refresh_on
  trigger_scheduled_last_at
  trigger_scheduled_next_at
  trigger_scheduled
  bucketId
}

type EventHook {
  id: String!
  ownerId: String!
  event: String!
  type: String!
  script_or_url: String!
  script_source_url: String
  owner: User!
}

input EventHookOrderByWithRelationInput {
  id: SortOrder
  owner: UserOrderByWithRelationInput
  ownerId: SortOrder
  event: SortOrder
  type: SortOrder
  script_or_url: SortOrder
  script_source_url: SortOrder
}

input EventHookWhereUniqueInput {
  id: String
  script_source_url: String
}

enum EventHookScalarFieldEnum {
  id
  ownerId
  event
  type
  script_or_url
  script_source_url
}

input PluginWhereUniqueInput {
  id: String
}

enum PluginScalarFieldEnum {
  id
  source_url
  type
  user_params
  ownerId
  source
  source_sha1
  lastUpdatedAt
  createdAt
}

input ArticleWhereUniqueInput {
  id: String
  url: String
}

enum ArticleScalarFieldEnum {
  id
  createdAt
  updatedAt
  released
  date_published
  date_modified
  comment_feed_url
  url
  author
  title
  tags
  content_raw_mime
  content_raw
  content_text
  main_image_url
  source_used
  has_harvest
  has_readability
  has_video
  has_audio
  length_video
  length_audio
  word_count_text
  score
  lastScoredAt
  enclosure
  data_json_map
}

type AggregateArticle {
  _count: ArticleCountAggregate
  _avg: ArticleAvgAggregate
  _sum: ArticleSumAggregate
  _min: ArticleMinAggregate
  _max: ArticleMaxAggregate
}

type ArticleCountAggregate {
  id: Int!
  createdAt: Int!
  updatedAt: Int!
  released: Int!
  date_published: Int!
  date_modified: Int!
  comment_feed_url: Int!
  url: Int!
  author: Int!
  title: Int!
  tags: Int!
  content_raw_mime: Int!
  content_raw: Int!
  content_text: Int!
  main_image_url: Int!
  source_used: Int!
  has_harvest: Int!
  has_readability: Int!
  has_video: Int!
  has_audio: Int!
  length_video: Int!
  length_audio: Int!
  word_count_text: Int!
  score: Int!
  lastScoredAt: Int!
  enclosure: Int!
  data_json_map: Int!
  _all: Int!
}

type ArticleAvgAggregate {
  length_video: Float
  length_audio: Float
  word_count_text: Float
  score: Float
}

type ArticleSumAggregate {
  length_video: Int
  length_audio: Int
  word_count_text: Int
  score: Float
}

type ArticleMinAggregate {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  released: Boolean
  date_published: DateTime
  date_modified: DateTime
  comment_feed_url: String
  url: String
  author: String
  title: String
  content_raw_mime: String
  content_raw: String
  content_text: String
  main_image_url: String
  source_used: String
  has_harvest: Boolean
  has_readability: Boolean
  has_video: Boolean
  has_audio: Boolean
  length_video: Int
  length_audio: Int
  word_count_text: Int
  score: Float
  lastScoredAt: DateTime
}

type ArticleMaxAggregate {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  released: Boolean
  date_published: DateTime
  date_modified: DateTime
  comment_feed_url: String
  url: String
  author: String
  title: String
  content_raw_mime: String
  content_raw: String
  content_text: String
  main_image_url: String
  source_used: String
  has_harvest: Boolean
  has_readability: Boolean
  has_video: Boolean
  has_audio: Boolean
  length_video: Int
  length_audio: Int
  word_count_text: Int
  score: Float
  lastScoredAt: DateTime
}

type ArticleGroupBy {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  released: Boolean!
  date_published: DateTime!
  date_modified: DateTime
  comment_feed_url: String
  url: String
  author: String
  title: String!
  tags: JSON
  content_raw_mime: String
  content_raw: String
  content_text: String
  main_image_url: String
  source_used: String
  has_harvest: Boolean
  has_readability: Boolean
  has_video: Boolean!
  has_audio: Boolean!
  length_video: Int
  length_audio: Int
  word_count_text: Int
  score: Float
  lastScoredAt: DateTime!
  enclosure: JSON
  data_json_map: JSON
  _count: ArticleCountAggregate
  _avg: ArticleAvgAggregate
  _sum: ArticleSumAggregate
  _min: ArticleMinAggregate
  _max: ArticleMaxAggregate
}

input ArticleOrderByWithAggregationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  released: SortOrder
  date_published: SortOrder
  date_modified: SortOrder
  comment_feed_url: SortOrder
  url: SortOrder
  author: SortOrder
  title: SortOrder
  tags: SortOrder
  content_raw_mime: SortOrder
  content_raw: SortOrder
  content_text: SortOrder
  main_image_url: SortOrder
  source_used: SortOrder
  has_harvest: SortOrder
  has_readability: SortOrder
  has_video: SortOrder
  has_audio: SortOrder
  length_video: SortOrder
  length_audio: SortOrder
  word_count_text: SortOrder
  score: SortOrder
  lastScoredAt: SortOrder
  enclosure: SortOrder
  data_json_map: SortOrder
  _count: ArticleCountOrderByAggregateInput
  _avg: ArticleAvgOrderByAggregateInput
  _max: ArticleMaxOrderByAggregateInput
  _min: ArticleMinOrderByAggregateInput
  _sum: ArticleSumOrderByAggregateInput
}

input ArticleCountOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  released: SortOrder
  date_published: SortOrder
  date_modified: SortOrder
  comment_feed_url: SortOrder
  url: SortOrder
  author: SortOrder
  title: SortOrder
  tags: SortOrder
  content_raw_mime: SortOrder
  content_raw: SortOrder
  content_text: SortOrder
  main_image_url: SortOrder
  source_used: SortOrder
  has_harvest: SortOrder
  has_readability: SortOrder
  has_video: SortOrder
  has_audio: SortOrder
  length_video: SortOrder
  length_audio: SortOrder
  word_count_text: SortOrder
  score: SortOrder
  lastScoredAt: SortOrder
  enclosure: SortOrder
  data_json_map: SortOrder
}

input ArticleAvgOrderByAggregateInput {
  length_video: SortOrder
  length_audio: SortOrder
  word_count_text: SortOrder
  score: SortOrder
}

input ArticleMaxOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  released: SortOrder
  date_published: SortOrder
  date_modified: SortOrder
  comment_feed_url: SortOrder
  url: SortOrder
  author: SortOrder
  title: SortOrder
  content_raw_mime: SortOrder
  content_raw: SortOrder
  content_text: SortOrder
  main_image_url: SortOrder
  source_used: SortOrder
  has_harvest: SortOrder
  has_readability: SortOrder
  has_video: SortOrder
  has_audio: SortOrder
  length_video: SortOrder
  length_audio: SortOrder
  word_count_text: SortOrder
  score: SortOrder
  lastScoredAt: SortOrder
}

input ArticleMinOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  released: SortOrder
  date_published: SortOrder
  date_modified: SortOrder
  comment_feed_url: SortOrder
  url: SortOrder
  author: SortOrder
  title: SortOrder
  content_raw_mime: SortOrder
  content_raw: SortOrder
  content_text: SortOrder
  main_image_url: SortOrder
  source_used: SortOrder
  has_harvest: SortOrder
  has_readability: SortOrder
  has_video: SortOrder
  has_audio: SortOrder
  length_video: SortOrder
  length_audio: SortOrder
  word_count_text: SortOrder
  score: SortOrder
  lastScoredAt: SortOrder
}

input ArticleSumOrderByAggregateInput {
  length_video: SortOrder
  length_audio: SortOrder
  word_count_text: SortOrder
  score: SortOrder
}

input ArticleScalarWhereWithAggregatesInput {
  AND: [ArticleScalarWhereWithAggregatesInput!]
  OR: [ArticleScalarWhereWithAggregatesInput!]
  NOT: [ArticleScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  released: BoolWithAggregatesFilter
  date_published: DateTimeWithAggregatesFilter
  date_modified: DateTimeNullableWithAggregatesFilter
  comment_feed_url: StringNullableWithAggregatesFilter
  url: StringNullableWithAggregatesFilter
  author: StringNullableWithAggregatesFilter
  title: StringWithAggregatesFilter
  tags: JsonNullableWithAggregatesFilter
  content_raw_mime: StringNullableWithAggregatesFilter
  content_raw: StringNullableWithAggregatesFilter
  content_text: StringNullableWithAggregatesFilter
  main_image_url: StringNullableWithAggregatesFilter
  source_used: StringNullableWithAggregatesFilter
  has_harvest: BoolNullableWithAggregatesFilter
  has_readability: BoolNullableWithAggregatesFilter
  has_video: BoolWithAggregatesFilter
  has_audio: BoolWithAggregatesFilter
  length_video: IntNullableWithAggregatesFilter
  length_audio: IntNullableWithAggregatesFilter
  word_count_text: IntNullableWithAggregatesFilter
  score: FloatNullableWithAggregatesFilter
  lastScoredAt: DateTimeWithAggregatesFilter
  enclosure: JsonNullableWithAggregatesFilter
  data_json_map: JsonNullableWithAggregatesFilter
}

input StringWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedStringFilter
  _max: NestedStringFilter
}

input NestedStringWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedStringFilter
  _max: NestedStringFilter
}

input DateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedDateTimeFilter
  _max: NestedDateTimeFilter
}

input NestedDateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedDateTimeFilter
  _max: NestedDateTimeFilter
}

input BoolWithAggregatesFilter {
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedBoolFilter
  _max: NestedBoolFilter
}

input NestedBoolWithAggregatesFilter {
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedBoolFilter
  _max: NestedBoolFilter
}

input DateTimeNullableWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedDateTimeNullableFilter
  _max: NestedDateTimeNullableFilter
}

input NestedDateTimeNullableWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedDateTimeNullableFilter
  _max: NestedDateTimeNullableFilter
}

input StringNullableWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedStringNullableFilter
  _max: NestedStringNullableFilter
}

input NestedStringNullableWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedStringNullableFilter
  _max: NestedStringNullableFilter
}

input JsonNullableWithAggregatesFilter {
  equals: JSON
  not: JSON
  _count: NestedIntNullableFilter
  _min: NestedJsonNullableFilter
  _max: NestedJsonNullableFilter
}

input NestedJsonNullableFilter {
  equals: JSON
  not: JSON
}

input BoolNullableWithAggregatesFilter {
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedBoolNullableFilter
  _max: NestedBoolNullableFilter
}

input NestedBoolNullableWithAggregatesFilter {
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedBoolNullableFilter
  _max: NestedBoolNullableFilter
}

input IntNullableWithAggregatesFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _avg: NestedFloatNullableFilter
  _sum: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _max: NestedIntNullableFilter
}

input NestedIntNullableWithAggregatesFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _avg: NestedFloatNullableFilter
  _sum: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _max: NestedIntNullableFilter
}

input FloatNullableWithAggregatesFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _avg: NestedFloatNullableFilter
  _sum: NestedFloatNullableFilter
  _min: NestedFloatNullableFilter
  _max: NestedFloatNullableFilter
}

input NestedFloatNullableWithAggregatesFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _avg: NestedFloatNullableFilter
  _sum: NestedFloatNullableFilter
  _min: NestedFloatNullableFilter
  _max: NestedFloatNullableFilter
}

type AggregateArticleExporter {
  _count: ArticleExporterCountAggregate
  _avg: ArticleExporterAvgAggregate
  _sum: ArticleExporterSumAggregate
  _min: ArticleExporterMinAggregate
  _max: ArticleExporterMaxAggregate
}

type ArticleExporterCountAggregate {
  id: Int!
  segment: Int!
  segment_sort_field: Int!
  segment_sort_asc: Int!
  segment_size: Int!
  segment_digest: Int!
  segment_look_ahead_min: Int!
  lastUpdatedAt: Int!
  trigger_refresh_on: Int!
  trigger_scheduled_last_at: Int!
  trigger_scheduled_next_at: Int!
  trigger_scheduled: Int!
  bucketId: Int!
  _all: Int!
}

type ArticleExporterAvgAggregate {
  segment_size: Float
  segment_look_ahead_min: Float
}

type ArticleExporterSumAggregate {
  segment_size: Int
  segment_look_ahead_min: Int
}

type ArticleExporterMinAggregate {
  id: String
  segment: Boolean
  segment_sort_field: String
  segment_sort_asc: Boolean
  segment_size: Int
  segment_digest: Boolean
  segment_look_ahead_min: Int
  lastUpdatedAt: DateTime
  trigger_refresh_on: String
  trigger_scheduled_last_at: DateTime
  trigger_scheduled_next_at: DateTime
  trigger_scheduled: String
  bucketId: String
}

type ArticleExporterMaxAggregate {
  id: String
  segment: Boolean
  segment_sort_field: String
  segment_sort_asc: Boolean
  segment_size: Int
  segment_digest: Boolean
  segment_look_ahead_min: Int
  lastUpdatedAt: DateTime
  trigger_refresh_on: String
  trigger_scheduled_last_at: DateTime
  trigger_scheduled_next_at: DateTime
  trigger_scheduled: String
  bucketId: String
}

type ArticleExporterGroupBy {
  id: String!
  segment: Boolean!
  segment_sort_field: String
  segment_sort_asc: Boolean!
  segment_size: Int
  segment_digest: Boolean!
  segment_look_ahead_min: Int
  lastUpdatedAt: DateTime
  trigger_refresh_on: String!
  trigger_scheduled_last_at: DateTime
  trigger_scheduled_next_at: DateTime
  trigger_scheduled: String
  bucketId: String!
  _count: ArticleExporterCountAggregate
  _avg: ArticleExporterAvgAggregate
  _sum: ArticleExporterSumAggregate
  _min: ArticleExporterMinAggregate
  _max: ArticleExporterMaxAggregate
}

input ArticleExporterOrderByWithAggregationInput {
  id: SortOrder
  segment: SortOrder
  segment_sort_field: SortOrder
  segment_sort_asc: SortOrder
  segment_size: SortOrder
  segment_digest: SortOrder
  segment_look_ahead_min: SortOrder
  lastUpdatedAt: SortOrder
  trigger_refresh_on: SortOrder
  trigger_scheduled_last_at: SortOrder
  trigger_scheduled_next_at: SortOrder
  trigger_scheduled: SortOrder
  bucketId: SortOrder
  _count: ArticleExporterCountOrderByAggregateInput
  _avg: ArticleExporterAvgOrderByAggregateInput
  _max: ArticleExporterMaxOrderByAggregateInput
  _min: ArticleExporterMinOrderByAggregateInput
  _sum: ArticleExporterSumOrderByAggregateInput
}

input ArticleExporterCountOrderByAggregateInput {
  id: SortOrder
  segment: SortOrder
  segment_sort_field: SortOrder
  segment_sort_asc: SortOrder
  segment_size: SortOrder
  segment_digest: SortOrder
  segment_look_ahead_min: SortOrder
  lastUpdatedAt: SortOrder
  trigger_refresh_on: SortOrder
  trigger_scheduled_last_at: SortOrder
  trigger_scheduled_next_at: SortOrder
  trigger_scheduled: SortOrder
  bucketId: SortOrder
}

input ArticleExporterAvgOrderByAggregateInput {
  segment_size: SortOrder
  segment_look_ahead_min: SortOrder
}

input ArticleExporterMaxOrderByAggregateInput {
  id: SortOrder
  segment: SortOrder
  segment_sort_field: SortOrder
  segment_sort_asc: SortOrder
  segment_size: SortOrder
  segment_digest: SortOrder
  segment_look_ahead_min: SortOrder
  lastUpdatedAt: SortOrder
  trigger_refresh_on: SortOrder
  trigger_scheduled_last_at: SortOrder
  trigger_scheduled_next_at: SortOrder
  trigger_scheduled: SortOrder
  bucketId: SortOrder
}

input ArticleExporterMinOrderByAggregateInput {
  id: SortOrder
  segment: SortOrder
  segment_sort_field: SortOrder
  segment_sort_asc: SortOrder
  segment_size: SortOrder
  segment_digest: SortOrder
  segment_look_ahead_min: SortOrder
  lastUpdatedAt: SortOrder
  trigger_refresh_on: SortOrder
  trigger_scheduled_last_at: SortOrder
  trigger_scheduled_next_at: SortOrder
  trigger_scheduled: SortOrder
  bucketId: SortOrder
}

input ArticleExporterSumOrderByAggregateInput {
  segment_size: SortOrder
  segment_look_ahead_min: SortOrder
}

input ArticleExporterScalarWhereWithAggregatesInput {
  AND: [ArticleExporterScalarWhereWithAggregatesInput!]
  OR: [ArticleExporterScalarWhereWithAggregatesInput!]
  NOT: [ArticleExporterScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  segment: BoolWithAggregatesFilter
  segment_sort_field: StringNullableWithAggregatesFilter
  segment_sort_asc: BoolWithAggregatesFilter
  segment_size: IntNullableWithAggregatesFilter
  segment_digest: BoolWithAggregatesFilter
  segment_look_ahead_min: IntNullableWithAggregatesFilter
  lastUpdatedAt: DateTimeNullableWithAggregatesFilter
  trigger_refresh_on: StringWithAggregatesFilter
  trigger_scheduled_last_at: DateTimeNullableWithAggregatesFilter
  trigger_scheduled_next_at: DateTimeNullableWithAggregatesFilter
  trigger_scheduled: StringNullableWithAggregatesFilter
  bucketId: StringWithAggregatesFilter
}

type AggregateArticleExporterTarget {
  _count: ArticleExporterTargetCountAggregate
  _min: ArticleExporterTargetMinAggregate
  _max: ArticleExporterTargetMaxAggregate
}

type ArticleExporterTargetCountAggregate {
  id: Int!
  type: Int!
  context: Int!
  exporterId: Int!
  _all: Int!
}

type ArticleExporterTargetMinAggregate {
  id: String
  type: String
  context: String
  exporterId: String
}

type ArticleExporterTargetMaxAggregate {
  id: String
  type: String
  context: String
  exporterId: String
}

type ArticleExporterTargetGroupBy {
  id: String!
  type: String!
  context: String
  exporterId: String!
  _count: ArticleExporterTargetCountAggregate
  _min: ArticleExporterTargetMinAggregate
  _max: ArticleExporterTargetMaxAggregate
}

input ArticleExporterTargetOrderByWithAggregationInput {
  id: SortOrder
  type: SortOrder
  context: SortOrder
  exporterId: SortOrder
  _count: ArticleExporterTargetCountOrderByAggregateInput
  _max: ArticleExporterTargetMaxOrderByAggregateInput
  _min: ArticleExporterTargetMinOrderByAggregateInput
}

input ArticleExporterTargetCountOrderByAggregateInput {
  id: SortOrder
  type: SortOrder
  context: SortOrder
  exporterId: SortOrder
}

input ArticleExporterTargetMaxOrderByAggregateInput {
  id: SortOrder
  type: SortOrder
  context: SortOrder
  exporterId: SortOrder
}

input ArticleExporterTargetMinOrderByAggregateInput {
  id: SortOrder
  type: SortOrder
  context: SortOrder
  exporterId: SortOrder
}

input ArticleExporterTargetScalarWhereWithAggregatesInput {
  AND: [ArticleExporterTargetScalarWhereWithAggregatesInput!]
  OR: [ArticleExporterTargetScalarWhereWithAggregatesInput!]
  NOT: [ArticleExporterTargetScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  type: StringWithAggregatesFilter
  context: StringNullableWithAggregatesFilter
  exporterId: StringWithAggregatesFilter
}

type AggregateArticlePostProcessor {
  _count: ArticlePostProcessorCountAggregate
  _min: ArticlePostProcessorMinAggregate
  _max: ArticlePostProcessorMaxAggregate
}

type ArticlePostProcessorCountAggregate {
  id: Int!
  createdAt: Int!
  updatedAt: Int!
  type: Int!
  context: Int!
  _all: Int!
}

type ArticlePostProcessorMinAggregate {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  type: String
  context: String
}

type ArticlePostProcessorMaxAggregate {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  type: String
  context: String
}

type ArticlePostProcessorGroupBy {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  type: String!
  context: String
  _count: ArticlePostProcessorCountAggregate
  _min: ArticlePostProcessorMinAggregate
  _max: ArticlePostProcessorMaxAggregate
}

input ArticlePostProcessorOrderByWithAggregationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  type: SortOrder
  context: SortOrder
  _count: ArticlePostProcessorCountOrderByAggregateInput
  _max: ArticlePostProcessorMaxOrderByAggregateInput
  _min: ArticlePostProcessorMinOrderByAggregateInput
}

input ArticlePostProcessorCountOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  type: SortOrder
  context: SortOrder
}

input ArticlePostProcessorMaxOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  type: SortOrder
  context: SortOrder
}

input ArticlePostProcessorMinOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  type: SortOrder
  context: SortOrder
}

input ArticlePostProcessorScalarWhereWithAggregatesInput {
  AND: [ArticlePostProcessorScalarWhereWithAggregatesInput!]
  OR: [ArticlePostProcessorScalarWhereWithAggregatesInput!]
  NOT: [ArticlePostProcessorScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  type: StringWithAggregatesFilter
  context: StringNullableWithAggregatesFilter
}

type AggregateArticleRef {
  _count: ArticleRefCountAggregate
  _min: ArticleRefMinAggregate
  _max: ArticleRefMaxAggregate
}

type ArticleRefCountAggregate {
  id: Int!
  createdAt: Int!
  updatedAt: Int!
  date_released: Int!
  ownerId: Int!
  favored: Int!
  has_seen: Int!
  tags: Int!
  data: Int!
  articleId: Int!
  type: Int!
  streamId: Int!
  _all: Int!
}

type ArticleRefMinAggregate {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  date_released: DateTime
  ownerId: String
  favored: Boolean
  has_seen: Boolean
  articleId: String
  type: String
  streamId: String
}

type ArticleRefMaxAggregate {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  date_released: DateTime
  ownerId: String
  favored: Boolean
  has_seen: Boolean
  articleId: String
  type: String
  streamId: String
}

type ArticleRefGroupBy {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  date_released: DateTime!
  ownerId: String!
  favored: Boolean!
  has_seen: Boolean!
  tags: JSON
  data: JSON
  articleId: String!
  type: String!
  streamId: String!
  _count: ArticleRefCountAggregate
  _min: ArticleRefMinAggregate
  _max: ArticleRefMaxAggregate
}

input ArticleRefOrderByWithAggregationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  date_released: SortOrder
  ownerId: SortOrder
  favored: SortOrder
  has_seen: SortOrder
  tags: SortOrder
  data: SortOrder
  articleId: SortOrder
  type: SortOrder
  streamId: SortOrder
  _count: ArticleRefCountOrderByAggregateInput
  _max: ArticleRefMaxOrderByAggregateInput
  _min: ArticleRefMinOrderByAggregateInput
}

input ArticleRefCountOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  date_released: SortOrder
  ownerId: SortOrder
  favored: SortOrder
  has_seen: SortOrder
  tags: SortOrder
  data: SortOrder
  articleId: SortOrder
  type: SortOrder
  streamId: SortOrder
}

input ArticleRefMaxOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  date_released: SortOrder
  ownerId: SortOrder
  favored: SortOrder
  has_seen: SortOrder
  articleId: SortOrder
  type: SortOrder
  streamId: SortOrder
}

input ArticleRefMinOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  date_released: SortOrder
  ownerId: SortOrder
  favored: SortOrder
  has_seen: SortOrder
  articleId: SortOrder
  type: SortOrder
  streamId: SortOrder
}

input ArticleRefScalarWhereWithAggregatesInput {
  AND: [ArticleRefScalarWhereWithAggregatesInput!]
  OR: [ArticleRefScalarWhereWithAggregatesInput!]
  NOT: [ArticleRefScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  date_released: DateTimeWithAggregatesFilter
  ownerId: StringWithAggregatesFilter
  favored: BoolWithAggregatesFilter
  has_seen: BoolWithAggregatesFilter
  tags: JsonNullableWithAggregatesFilter
  data: JsonNullableWithAggregatesFilter
  articleId: StringWithAggregatesFilter
  type: StringWithAggregatesFilter
  streamId: StringWithAggregatesFilter
}

type AggregateBucket {
  _count: BucketCountAggregate
  _avg: BucketAvgAggregate
  _sum: BucketSumAggregate
  _min: BucketMinAggregate
  _max: BucketMaxAggregate
}

type BucketCountAggregate {
  id: Int!
  title: Int!
  description: Int!
  is_public: Int!
  tags: Int!
  in_focus: Int!
  type: Int!
  ownerId: Int!
  lastUpdatedAt: Int!
  createdAt: Int!
  streamId: Int!
  _all: Int!
}

type BucketAvgAggregate {
  type: Float
}

type BucketSumAggregate {
  type: Int
}

type BucketMinAggregate {
  id: String
  title: String
  description: String
  is_public: Boolean
  in_focus: Boolean
  type: Int
  ownerId: String
  lastUpdatedAt: DateTime
  createdAt: DateTime
  streamId: String
}

type BucketMaxAggregate {
  id: String
  title: String
  description: String
  is_public: Boolean
  in_focus: Boolean
  type: Int
  ownerId: String
  lastUpdatedAt: DateTime
  createdAt: DateTime
  streamId: String
}

type BucketGroupBy {
  id: String!
  title: String!
  description: String
  is_public: Boolean!
  tags: JSON
  in_focus: Boolean!
  type: Int!
  ownerId: String!
  lastUpdatedAt: DateTime
  createdAt: DateTime!
  streamId: String!
  _count: BucketCountAggregate
  _avg: BucketAvgAggregate
  _sum: BucketSumAggregate
  _min: BucketMinAggregate
  _max: BucketMaxAggregate
}

input BucketOrderByWithAggregationInput {
  id: SortOrder
  title: SortOrder
  description: SortOrder
  is_public: SortOrder
  tags: SortOrder
  in_focus: SortOrder
  type: SortOrder
  ownerId: SortOrder
  lastUpdatedAt: SortOrder
  createdAt: SortOrder
  streamId: SortOrder
  _count: BucketCountOrderByAggregateInput
  _avg: BucketAvgOrderByAggregateInput
  _max: BucketMaxOrderByAggregateInput
  _min: BucketMinOrderByAggregateInput
  _sum: BucketSumOrderByAggregateInput
}

input BucketCountOrderByAggregateInput {
  id: SortOrder
  title: SortOrder
  description: SortOrder
  is_public: SortOrder
  tags: SortOrder
  in_focus: SortOrder
  type: SortOrder
  ownerId: SortOrder
  lastUpdatedAt: SortOrder
  createdAt: SortOrder
  streamId: SortOrder
}

input BucketAvgOrderByAggregateInput {
  type: SortOrder
}

input BucketMaxOrderByAggregateInput {
  id: SortOrder
  title: SortOrder
  description: SortOrder
  is_public: SortOrder
  in_focus: SortOrder
  type: SortOrder
  ownerId: SortOrder
  lastUpdatedAt: SortOrder
  createdAt: SortOrder
  streamId: SortOrder
}

input BucketMinOrderByAggregateInput {
  id: SortOrder
  title: SortOrder
  description: SortOrder
  is_public: SortOrder
  in_focus: SortOrder
  type: SortOrder
  ownerId: SortOrder
  lastUpdatedAt: SortOrder
  createdAt: SortOrder
  streamId: SortOrder
}

input BucketSumOrderByAggregateInput {
  type: SortOrder
}

input BucketScalarWhereWithAggregatesInput {
  AND: [BucketScalarWhereWithAggregatesInput!]
  OR: [BucketScalarWhereWithAggregatesInput!]
  NOT: [BucketScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  title: StringWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  is_public: BoolWithAggregatesFilter
  tags: JsonNullableWithAggregatesFilter
  in_focus: BoolWithAggregatesFilter
  type: IntWithAggregatesFilter
  ownerId: StringWithAggregatesFilter
  lastUpdatedAt: DateTimeNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  streamId: StringWithAggregatesFilter
}

input IntWithAggregatesFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntWithAggregatesFilter
  _count: NestedIntFilter
  _avg: NestedFloatFilter
  _sum: NestedIntFilter
  _min: NestedIntFilter
  _max: NestedIntFilter
}

input NestedIntWithAggregatesFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntWithAggregatesFilter
  _count: NestedIntFilter
  _avg: NestedFloatFilter
  _sum: NestedIntFilter
  _min: NestedIntFilter
  _max: NestedIntFilter
}

input NestedFloatFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatFilter
}

type AggregateEventHook {
  _count: EventHookCountAggregate
  _min: EventHookMinAggregate
  _max: EventHookMaxAggregate
}

type EventHookCountAggregate {
  id: Int!
  ownerId: Int!
  event: Int!
  type: Int!
  script_or_url: Int!
  script_source_url: Int!
  _all: Int!
}

type EventHookMinAggregate {
  id: String
  ownerId: String
  event: String
  type: String
  script_or_url: String
  script_source_url: String
}

type EventHookMaxAggregate {
  id: String
  ownerId: String
  event: String
  type: String
  script_or_url: String
  script_source_url: String
}

type EventHookGroupBy {
  id: String!
  ownerId: String!
  event: String!
  type: String!
  script_or_url: String!
  script_source_url: String
  _count: EventHookCountAggregate
  _min: EventHookMinAggregate
  _max: EventHookMaxAggregate
}

input EventHookOrderByWithAggregationInput {
  id: SortOrder
  ownerId: SortOrder
  event: SortOrder
  type: SortOrder
  script_or_url: SortOrder
  script_source_url: SortOrder
  _count: EventHookCountOrderByAggregateInput
  _max: EventHookMaxOrderByAggregateInput
  _min: EventHookMinOrderByAggregateInput
}

input EventHookCountOrderByAggregateInput {
  id: SortOrder
  ownerId: SortOrder
  event: SortOrder
  type: SortOrder
  script_or_url: SortOrder
  script_source_url: SortOrder
}

input EventHookMaxOrderByAggregateInput {
  id: SortOrder
  ownerId: SortOrder
  event: SortOrder
  type: SortOrder
  script_or_url: SortOrder
  script_source_url: SortOrder
}

input EventHookMinOrderByAggregateInput {
  id: SortOrder
  ownerId: SortOrder
  event: SortOrder
  type: SortOrder
  script_or_url: SortOrder
  script_source_url: SortOrder
}

input EventHookScalarWhereWithAggregatesInput {
  AND: [EventHookScalarWhereWithAggregatesInput!]
  OR: [EventHookScalarWhereWithAggregatesInput!]
  NOT: [EventHookScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  ownerId: StringWithAggregatesFilter
  event: StringWithAggregatesFilter
  type: StringWithAggregatesFilter
  script_or_url: StringWithAggregatesFilter
  script_source_url: StringNullableWithAggregatesFilter
}

type AggregateFeed {
  _count: FeedCountAggregate
  _avg: FeedAvgAggregate
  _sum: FeedSumAggregate
  _min: FeedMinAggregate
  _max: FeedMaxAggregate
}

type FeedCountAggregate {
  id: Int!
  feed_url: Int!
  feed_url_auth_header: Int!
  home_page_url: Int!
  domain: Int!
  op_secret: Int!
  title: Int!
  tags: Int!
  author: Int!
  ownerId: Int!
  failed_attempt_count: Int!
  is_private: Int!
  expired: Int!
  broken: Int!
  inactive: Int!
  managed: Int!
  managed_by_plugin_id: Int!
  filter: Int!
  description: Int!
  status: Int!
  lastStatusChangeAt: Int!
  harvestIntervalMinutes: Int!
  nextHarvestAt: Int!
  retention_size: Int!
  harvest_site: Int!
  allowHarvestFailure: Int!
  harvest_prerender: Int!
  streamId: Int!
  createdAt: Int!
  lastUpdatedAt: Int!
  _all: Int!
}

type FeedAvgAggregate {
  failed_attempt_count: Float
  harvestIntervalMinutes: Float
  retention_size: Float
}

type FeedSumAggregate {
  failed_attempt_count: Int
  harvestIntervalMinutes: Int
  retention_size: Int
}

type FeedMinAggregate {
  id: String
  feed_url: String
  feed_url_auth_header: String
  home_page_url: String
  domain: String
  op_secret: String
  title: String
  author: String
  ownerId: String
  failed_attempt_count: Int
  is_private: Boolean
  expired: Boolean
  broken: Boolean
  inactive: Boolean
  managed: Boolean
  managed_by_plugin_id: String
  filter: String
  description: String
  status: String
  lastStatusChangeAt: DateTime
  harvestIntervalMinutes: Int
  nextHarvestAt: DateTime
  retention_size: Int
  harvest_site: Boolean
  allowHarvestFailure: Boolean
  harvest_prerender: Boolean
  streamId: String
  createdAt: DateTime
  lastUpdatedAt: DateTime
}

type FeedMaxAggregate {
  id: String
  feed_url: String
  feed_url_auth_header: String
  home_page_url: String
  domain: String
  op_secret: String
  title: String
  author: String
  ownerId: String
  failed_attempt_count: Int
  is_private: Boolean
  expired: Boolean
  broken: Boolean
  inactive: Boolean
  managed: Boolean
  managed_by_plugin_id: String
  filter: String
  description: String
  status: String
  lastStatusChangeAt: DateTime
  harvestIntervalMinutes: Int
  nextHarvestAt: DateTime
  retention_size: Int
  harvest_site: Boolean
  allowHarvestFailure: Boolean
  harvest_prerender: Boolean
  streamId: String
  createdAt: DateTime
  lastUpdatedAt: DateTime
}

type FeedGroupBy {
  id: String!
  feed_url: String!
  feed_url_auth_header: String
  home_page_url: String
  domain: String!
  op_secret: String!
  title: String
  tags: JSON
  author: String
  ownerId: String!
  failed_attempt_count: Int!
  is_private: Boolean!
  expired: Boolean!
  broken: Boolean!
  inactive: Boolean!
  managed: Boolean!
  managed_by_plugin_id: String
  filter: String
  description: String
  status: String!
  lastStatusChangeAt: DateTime
  harvestIntervalMinutes: Int
  nextHarvestAt: DateTime
  retention_size: Int
  harvest_site: Boolean!
  allowHarvestFailure: Boolean!
  harvest_prerender: Boolean!
  streamId: String!
  createdAt: DateTime!
  lastUpdatedAt: DateTime
  _count: FeedCountAggregate
  _avg: FeedAvgAggregate
  _sum: FeedSumAggregate
  _min: FeedMinAggregate
  _max: FeedMaxAggregate
}

input FeedOrderByWithAggregationInput {
  id: SortOrder
  feed_url: SortOrder
  feed_url_auth_header: SortOrder
  home_page_url: SortOrder
  domain: SortOrder
  op_secret: SortOrder
  title: SortOrder
  tags: SortOrder
  author: SortOrder
  ownerId: SortOrder
  failed_attempt_count: SortOrder
  is_private: SortOrder
  expired: SortOrder
  broken: SortOrder
  inactive: SortOrder
  managed: SortOrder
  managed_by_plugin_id: SortOrder
  filter: SortOrder
  description: SortOrder
  status: SortOrder
  lastStatusChangeAt: SortOrder
  harvestIntervalMinutes: SortOrder
  nextHarvestAt: SortOrder
  retention_size: SortOrder
  harvest_site: SortOrder
  allowHarvestFailure: SortOrder
  harvest_prerender: SortOrder
  streamId: SortOrder
  createdAt: SortOrder
  lastUpdatedAt: SortOrder
  _count: FeedCountOrderByAggregateInput
  _avg: FeedAvgOrderByAggregateInput
  _max: FeedMaxOrderByAggregateInput
  _min: FeedMinOrderByAggregateInput
  _sum: FeedSumOrderByAggregateInput
}

input FeedCountOrderByAggregateInput {
  id: SortOrder
  feed_url: SortOrder
  feed_url_auth_header: SortOrder
  home_page_url: SortOrder
  domain: SortOrder
  op_secret: SortOrder
  title: SortOrder
  tags: SortOrder
  author: SortOrder
  ownerId: SortOrder
  failed_attempt_count: SortOrder
  is_private: SortOrder
  expired: SortOrder
  broken: SortOrder
  inactive: SortOrder
  managed: SortOrder
  managed_by_plugin_id: SortOrder
  filter: SortOrder
  description: SortOrder
  status: SortOrder
  lastStatusChangeAt: SortOrder
  harvestIntervalMinutes: SortOrder
  nextHarvestAt: SortOrder
  retention_size: SortOrder
  harvest_site: SortOrder
  allowHarvestFailure: SortOrder
  harvest_prerender: SortOrder
  streamId: SortOrder
  createdAt: SortOrder
  lastUpdatedAt: SortOrder
}

input FeedAvgOrderByAggregateInput {
  failed_attempt_count: SortOrder
  harvestIntervalMinutes: SortOrder
  retention_size: SortOrder
}

input FeedMaxOrderByAggregateInput {
  id: SortOrder
  feed_url: SortOrder
  feed_url_auth_header: SortOrder
  home_page_url: SortOrder
  domain: SortOrder
  op_secret: SortOrder
  title: SortOrder
  author: SortOrder
  ownerId: SortOrder
  failed_attempt_count: SortOrder
  is_private: SortOrder
  expired: SortOrder
  broken: SortOrder
  inactive: SortOrder
  managed: SortOrder
  managed_by_plugin_id: SortOrder
  filter: SortOrder
  description: SortOrder
  status: SortOrder
  lastStatusChangeAt: SortOrder
  harvestIntervalMinutes: SortOrder
  nextHarvestAt: SortOrder
  retention_size: SortOrder
  harvest_site: SortOrder
  allowHarvestFailure: SortOrder
  harvest_prerender: SortOrder
  streamId: SortOrder
  createdAt: SortOrder
  lastUpdatedAt: SortOrder
}

input FeedMinOrderByAggregateInput {
  id: SortOrder
  feed_url: SortOrder
  feed_url_auth_header: SortOrder
  home_page_url: SortOrder
  domain: SortOrder
  op_secret: SortOrder
  title: SortOrder
  author: SortOrder
  ownerId: SortOrder
  failed_attempt_count: SortOrder
  is_private: SortOrder
  expired: SortOrder
  broken: SortOrder
  inactive: SortOrder
  managed: SortOrder
  managed_by_plugin_id: SortOrder
  filter: SortOrder
  description: SortOrder
  status: SortOrder
  lastStatusChangeAt: SortOrder
  harvestIntervalMinutes: SortOrder
  nextHarvestAt: SortOrder
  retention_size: SortOrder
  harvest_site: SortOrder
  allowHarvestFailure: SortOrder
  harvest_prerender: SortOrder
  streamId: SortOrder
  createdAt: SortOrder
  lastUpdatedAt: SortOrder
}

input FeedSumOrderByAggregateInput {
  failed_attempt_count: SortOrder
  harvestIntervalMinutes: SortOrder
  retention_size: SortOrder
}

input FeedScalarWhereWithAggregatesInput {
  AND: [FeedScalarWhereWithAggregatesInput!]
  OR: [FeedScalarWhereWithAggregatesInput!]
  NOT: [FeedScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  feed_url: StringWithAggregatesFilter
  feed_url_auth_header: StringNullableWithAggregatesFilter
  home_page_url: StringNullableWithAggregatesFilter
  domain: StringWithAggregatesFilter
  op_secret: StringWithAggregatesFilter
  title: StringNullableWithAggregatesFilter
  tags: JsonNullableWithAggregatesFilter
  author: StringNullableWithAggregatesFilter
  ownerId: StringWithAggregatesFilter
  failed_attempt_count: IntWithAggregatesFilter
  is_private: BoolWithAggregatesFilter
  expired: BoolWithAggregatesFilter
  broken: BoolWithAggregatesFilter
  inactive: BoolWithAggregatesFilter
  managed: BoolWithAggregatesFilter
  managed_by_plugin_id: StringNullableWithAggregatesFilter
  filter: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  status: StringWithAggregatesFilter
  lastStatusChangeAt: DateTimeNullableWithAggregatesFilter
  harvestIntervalMinutes: IntNullableWithAggregatesFilter
  nextHarvestAt: DateTimeNullableWithAggregatesFilter
  retention_size: IntNullableWithAggregatesFilter
  harvest_site: BoolWithAggregatesFilter
  allowHarvestFailure: BoolWithAggregatesFilter
  harvest_prerender: BoolWithAggregatesFilter
  streamId: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  lastUpdatedAt: DateTimeNullableWithAggregatesFilter
}

type NoFollowUrl {
  id: String!
  url_prefix: String!
}

input NoFollowUrlWhereUniqueInput {
  id: String
  url_prefix: String
}

input NoFollowUrlWhereInput {
  AND: [NoFollowUrlWhereInput!]
  OR: [NoFollowUrlWhereInput!]
  NOT: [NoFollowUrlWhereInput!]
  id: StringFilter
  url_prefix: StringFilter
}

input NoFollowUrlOrderByWithRelationInput {
  id: SortOrder
  url_prefix: SortOrder
}

enum NoFollowUrlScalarFieldEnum {
  id
  url_prefix
}

type AggregateNoFollowUrl {
  _count: NoFollowUrlCountAggregate
  _min: NoFollowUrlMinAggregate
  _max: NoFollowUrlMaxAggregate
}

type NoFollowUrlCountAggregate {
  id: Int!
  url_prefix: Int!
  _all: Int!
}

type NoFollowUrlMinAggregate {
  id: String
  url_prefix: String
}

type NoFollowUrlMaxAggregate {
  id: String
  url_prefix: String
}

type NoFollowUrlGroupBy {
  id: String!
  url_prefix: String!
  _count: NoFollowUrlCountAggregate
  _min: NoFollowUrlMinAggregate
  _max: NoFollowUrlMaxAggregate
}

input NoFollowUrlOrderByWithAggregationInput {
  id: SortOrder
  url_prefix: SortOrder
  _count: NoFollowUrlCountOrderByAggregateInput
  _max: NoFollowUrlMaxOrderByAggregateInput
  _min: NoFollowUrlMinOrderByAggregateInput
}

input NoFollowUrlCountOrderByAggregateInput {
  id: SortOrder
  url_prefix: SortOrder
}

input NoFollowUrlMaxOrderByAggregateInput {
  id: SortOrder
  url_prefix: SortOrder
}

input NoFollowUrlMinOrderByAggregateInput {
  id: SortOrder
  url_prefix: SortOrder
}

input NoFollowUrlScalarWhereWithAggregatesInput {
  AND: [NoFollowUrlScalarWhereWithAggregatesInput!]
  OR: [NoFollowUrlScalarWhereWithAggregatesInput!]
  NOT: [NoFollowUrlScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  url_prefix: StringWithAggregatesFilter
}

type AggregateNotebook {
  _count: NotebookCountAggregate
  _min: NotebookMinAggregate
  _max: NotebookMaxAggregate
}

type NotebookCountAggregate {
  id: Int!
  name: Int!
  description: Int!
  readonly: Int!
  listed: Int!
  streamId: Int!
  createdAt: Int!
  updatedAt: Int!
  ownerId: Int!
  _all: Int!
}

type NotebookMinAggregate {
  id: String
  name: String
  description: String
  readonly: Boolean
  listed: Boolean
  streamId: String
  createdAt: DateTime
  updatedAt: DateTime
  ownerId: String
}

type NotebookMaxAggregate {
  id: String
  name: String
  description: String
  readonly: Boolean
  listed: Boolean
  streamId: String
  createdAt: DateTime
  updatedAt: DateTime
  ownerId: String
}

type NotebookGroupBy {
  id: String!
  name: String!
  description: String!
  readonly: Boolean!
  listed: Boolean!
  streamId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  ownerId: String!
  _count: NotebookCountAggregate
  _min: NotebookMinAggregate
  _max: NotebookMaxAggregate
}

input NotebookOrderByWithAggregationInput {
  id: SortOrder
  name: SortOrder
  description: SortOrder
  readonly: SortOrder
  listed: SortOrder
  streamId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  ownerId: SortOrder
  _count: NotebookCountOrderByAggregateInput
  _max: NotebookMaxOrderByAggregateInput
  _min: NotebookMinOrderByAggregateInput
}

input NotebookCountOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  description: SortOrder
  readonly: SortOrder
  listed: SortOrder
  streamId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  ownerId: SortOrder
}

input NotebookMaxOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  description: SortOrder
  readonly: SortOrder
  listed: SortOrder
  streamId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  ownerId: SortOrder
}

input NotebookMinOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  description: SortOrder
  readonly: SortOrder
  listed: SortOrder
  streamId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  ownerId: SortOrder
}

input NotebookScalarWhereWithAggregatesInput {
  AND: [NotebookScalarWhereWithAggregatesInput!]
  OR: [NotebookScalarWhereWithAggregatesInput!]
  NOT: [NotebookScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
  description: StringWithAggregatesFilter
  readonly: BoolWithAggregatesFilter
  listed: BoolWithAggregatesFilter
  streamId: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  ownerId: StringWithAggregatesFilter
}

type AggregatePlugin {
  _count: PluginCountAggregate
  _min: PluginMinAggregate
  _max: PluginMaxAggregate
}

type PluginCountAggregate {
  id: Int!
  source_url: Int!
  type: Int!
  user_params: Int!
  ownerId: Int!
  source: Int!
  source_sha1: Int!
  lastUpdatedAt: Int!
  createdAt: Int!
  _all: Int!
}

type PluginMinAggregate {
  id: String
  source_url: String
  type: String
  ownerId: String
  source_sha1: String
  lastUpdatedAt: DateTime
  createdAt: DateTime
}

type PluginMaxAggregate {
  id: String
  source_url: String
  type: String
  ownerId: String
  source_sha1: String
  lastUpdatedAt: DateTime
  createdAt: DateTime
}

type PluginGroupBy {
  id: String!
  source_url: String!
  type: String!
  user_params: JSON!
  ownerId: String!
  source: JSON
  source_sha1: String
  lastUpdatedAt: DateTime!
  createdAt: DateTime!
  _count: PluginCountAggregate
  _min: PluginMinAggregate
  _max: PluginMaxAggregate
}

input PluginOrderByWithAggregationInput {
  id: SortOrder
  source_url: SortOrder
  type: SortOrder
  user_params: SortOrder
  ownerId: SortOrder
  source: SortOrder
  source_sha1: SortOrder
  lastUpdatedAt: SortOrder
  createdAt: SortOrder
  _count: PluginCountOrderByAggregateInput
  _max: PluginMaxOrderByAggregateInput
  _min: PluginMinOrderByAggregateInput
}

input PluginCountOrderByAggregateInput {
  id: SortOrder
  source_url: SortOrder
  type: SortOrder
  user_params: SortOrder
  ownerId: SortOrder
  source: SortOrder
  source_sha1: SortOrder
  lastUpdatedAt: SortOrder
  createdAt: SortOrder
}

input PluginMaxOrderByAggregateInput {
  id: SortOrder
  source_url: SortOrder
  type: SortOrder
  ownerId: SortOrder
  source_sha1: SortOrder
  lastUpdatedAt: SortOrder
  createdAt: SortOrder
}

input PluginMinOrderByAggregateInput {
  id: SortOrder
  source_url: SortOrder
  type: SortOrder
  ownerId: SortOrder
  source_sha1: SortOrder
  lastUpdatedAt: SortOrder
  createdAt: SortOrder
}

input PluginScalarWhereWithAggregatesInput {
  AND: [PluginScalarWhereWithAggregatesInput!]
  OR: [PluginScalarWhereWithAggregatesInput!]
  NOT: [PluginScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  source_url: StringWithAggregatesFilter
  type: StringWithAggregatesFilter
  user_params: JsonWithAggregatesFilter
  ownerId: StringWithAggregatesFilter
  source: JsonNullableWithAggregatesFilter
  source_sha1: StringNullableWithAggregatesFilter
  lastUpdatedAt: DateTimeWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
}

input JsonWithAggregatesFilter {
  equals: JSON
  not: JSON
  _count: NestedIntFilter
  _min: NestedJsonFilter
  _max: NestedJsonFilter
}

input NestedJsonFilter {
  equals: JSON
  not: JSON
}

input StreamWhereUniqueInput {
  id: String
}

enum StreamScalarFieldEnum {
  id
}

type AggregateStream {
  _count: StreamCountAggregate
  _min: StreamMinAggregate
  _max: StreamMaxAggregate
}

type StreamCountAggregate {
  id: Int!
  _all: Int!
}

type StreamMinAggregate {
  id: String
}

type StreamMaxAggregate {
  id: String
}

type StreamGroupBy {
  id: String!
  _count: StreamCountAggregate
  _min: StreamMinAggregate
  _max: StreamMaxAggregate
}

input StreamOrderByWithAggregationInput {
  id: SortOrder
  _count: StreamCountOrderByAggregateInput
  _max: StreamMaxOrderByAggregateInput
  _min: StreamMinOrderByAggregateInput
}

input StreamCountOrderByAggregateInput {
  id: SortOrder
}

input StreamMaxOrderByAggregateInput {
  id: SortOrder
}

input StreamMinOrderByAggregateInput {
  id: SortOrder
}

input StreamScalarWhereWithAggregatesInput {
  AND: [StreamScalarWhereWithAggregatesInput!]
  OR: [StreamScalarWhereWithAggregatesInput!]
  NOT: [StreamScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
}

type AggregateSubscription {
  _count: SubscriptionCountAggregate
  _min: SubscriptionMinAggregate
  _max: SubscriptionMaxAggregate
}

type SubscriptionCountAggregate {
  id: Int!
  inactive: Int!
  createdAt: Int!
  lastUpdatedAt: Int!
  title: Int!
  tags: Int!
  feedId: Int!
  ownerId: Int!
  bucketId: Int!
  _all: Int!
}

type SubscriptionMinAggregate {
  id: String
  inactive: Boolean
  createdAt: DateTime
  lastUpdatedAt: DateTime
  title: String
  feedId: String
  ownerId: String
  bucketId: String
}

type SubscriptionMaxAggregate {
  id: String
  inactive: Boolean
  createdAt: DateTime
  lastUpdatedAt: DateTime
  title: String
  feedId: String
  ownerId: String
  bucketId: String
}

type SubscriptionGroupBy {
  id: String!
  inactive: Boolean!
  createdAt: DateTime!
  lastUpdatedAt: DateTime
  title: String!
  tags: JSON
  feedId: String!
  ownerId: String!
  bucketId: String!
  _count: SubscriptionCountAggregate
  _min: SubscriptionMinAggregate
  _max: SubscriptionMaxAggregate
}

input SubscriptionOrderByWithAggregationInput {
  id: SortOrder
  inactive: SortOrder
  createdAt: SortOrder
  lastUpdatedAt: SortOrder
  title: SortOrder
  tags: SortOrder
  feedId: SortOrder
  ownerId: SortOrder
  bucketId: SortOrder
  _count: SubscriptionCountOrderByAggregateInput
  _max: SubscriptionMaxOrderByAggregateInput
  _min: SubscriptionMinOrderByAggregateInput
}

input SubscriptionCountOrderByAggregateInput {
  id: SortOrder
  inactive: SortOrder
  createdAt: SortOrder
  lastUpdatedAt: SortOrder
  title: SortOrder
  tags: SortOrder
  feedId: SortOrder
  ownerId: SortOrder
  bucketId: SortOrder
}

input SubscriptionMaxOrderByAggregateInput {
  id: SortOrder
  inactive: SortOrder
  createdAt: SortOrder
  lastUpdatedAt: SortOrder
  title: SortOrder
  feedId: SortOrder
  ownerId: SortOrder
  bucketId: SortOrder
}

input SubscriptionMinOrderByAggregateInput {
  id: SortOrder
  inactive: SortOrder
  createdAt: SortOrder
  lastUpdatedAt: SortOrder
  title: SortOrder
  feedId: SortOrder
  ownerId: SortOrder
  bucketId: SortOrder
}

input SubscriptionScalarWhereWithAggregatesInput {
  AND: [SubscriptionScalarWhereWithAggregatesInput!]
  OR: [SubscriptionScalarWhereWithAggregatesInput!]
  NOT: [SubscriptionScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  inactive: BoolWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  lastUpdatedAt: DateTimeNullableWithAggregatesFilter
  title: StringWithAggregatesFilter
  tags: JsonNullableWithAggregatesFilter
  feedId: StringWithAggregatesFilter
  ownerId: StringWithAggregatesFilter
  bucketId: StringWithAggregatesFilter
}

input UserWhereUniqueInput {
  id: String
  email: String
}

enum UserScalarFieldEnum {
  id
  email
  name
  date_format
  time_format
  createdAt
}

type AggregateUser {
  _count: UserCountAggregate
  _min: UserMinAggregate
  _max: UserMaxAggregate
}

type UserCountAggregate {
  id: Int!
  email: Int!
  name: Int!
  date_format: Int!
  time_format: Int!
  createdAt: Int!
  _all: Int!
}

type UserMinAggregate {
  id: String
  email: String
  name: String
  date_format: String
  time_format: String
  createdAt: DateTime
}

type UserMaxAggregate {
  id: String
  email: String
  name: String
  date_format: String
  time_format: String
  createdAt: DateTime
}

type UserGroupBy {
  id: String!
  email: String!
  name: String!
  date_format: String
  time_format: String
  createdAt: DateTime!
  _count: UserCountAggregate
  _min: UserMinAggregate
  _max: UserMaxAggregate
}

input UserOrderByWithAggregationInput {
  id: SortOrder
  email: SortOrder
  name: SortOrder
  date_format: SortOrder
  time_format: SortOrder
  createdAt: SortOrder
  _count: UserCountOrderByAggregateInput
  _max: UserMaxOrderByAggregateInput
  _min: UserMinOrderByAggregateInput
}

input UserCountOrderByAggregateInput {
  id: SortOrder
  email: SortOrder
  name: SortOrder
  date_format: SortOrder
  time_format: SortOrder
  createdAt: SortOrder
}

input UserMaxOrderByAggregateInput {
  id: SortOrder
  email: SortOrder
  name: SortOrder
  date_format: SortOrder
  time_format: SortOrder
  createdAt: SortOrder
}

input UserMinOrderByAggregateInput {
  id: SortOrder
  email: SortOrder
  name: SortOrder
  date_format: SortOrder
  time_format: SortOrder
  createdAt: SortOrder
}

input UserScalarWhereWithAggregatesInput {
  AND: [UserScalarWhereWithAggregatesInput!]
  OR: [UserScalarWhereWithAggregatesInput!]
  NOT: [UserScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  email: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
  date_format: StringNullableWithAggregatesFilter
  time_format: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
}

type DiscoveredFeeds {
  nativeFeeds: [NativeFeedRef!]
  genericFeedRules: [GenericFeedRule!]
}

type NativeFeedRef {
  feed_url: String!
  feed_type: String!
  home_page_url: String!
  title: String!
  description: String
}

type GenericFeedRule {
  feed_url: String!
  linkXPath: String!
  extendContext: String!
  contextXPath: String!
  count: Float!
  score: Float!
  samples: [Article!]!
}

type Mutation {
  createArticle(data: ArticleCreateInput!): Article!
  createManyArticle(
    data: [ArticleCreateManyInput!]!
    skipDuplicates: Boolean
  ): AffectedRowsOutput!
  deleteArticle(where: ArticleWhereUniqueInput!): Article
  updateArticle(
    data: ArticleUpdateInput!
    where: ArticleWhereUniqueInput!
  ): Article
  deleteManyArticle(where: ArticleWhereInput): AffectedRowsOutput!
  updateManyArticle(
    data: ArticleUpdateManyMutationInput!
    where: ArticleWhereInput
  ): AffectedRowsOutput!
  upsertArticle(
    where: ArticleWhereUniqueInput!
    create: ArticleCreateInput!
    update: ArticleUpdateInput!
  ): Article!
  createArticleExporter(data: ArticleExporterCreateInput!): ArticleExporter!
  createManyArticleExporter(
    data: [ArticleExporterCreateManyInput!]!
    skipDuplicates: Boolean
  ): AffectedRowsOutput!
  deleteArticleExporter(
    where: ArticleExporterWhereUniqueInput!
  ): ArticleExporter
  updateArticleExporter(
    data: ArticleExporterUpdateInput!
    where: ArticleExporterWhereUniqueInput!
  ): ArticleExporter
  deleteManyArticleExporter(
    where: ArticleExporterWhereInput
  ): AffectedRowsOutput!
  updateManyArticleExporter(
    data: ArticleExporterUpdateManyMutationInput!
    where: ArticleExporterWhereInput
  ): AffectedRowsOutput!
  upsertArticleExporter(
    where: ArticleExporterWhereUniqueInput!
    create: ArticleExporterCreateInput!
    update: ArticleExporterUpdateInput!
  ): ArticleExporter!
  createArticleExporterTarget(
    data: ArticleExporterTargetCreateInput!
  ): ArticleExporterTarget!
  createManyArticleExporterTarget(
    data: [ArticleExporterTargetCreateManyInput!]!
    skipDuplicates: Boolean
  ): AffectedRowsOutput!
  deleteArticleExporterTarget(
    where: ArticleExporterTargetWhereUniqueInput!
  ): ArticleExporterTarget
  updateArticleExporterTarget(
    data: ArticleExporterTargetUpdateInput!
    where: ArticleExporterTargetWhereUniqueInput!
  ): ArticleExporterTarget
  deleteManyArticleExporterTarget(
    where: ArticleExporterTargetWhereInput
  ): AffectedRowsOutput!
  updateManyArticleExporterTarget(
    data: ArticleExporterTargetUpdateManyMutationInput!
    where: ArticleExporterTargetWhereInput
  ): AffectedRowsOutput!
  upsertArticleExporterTarget(
    where: ArticleExporterTargetWhereUniqueInput!
    create: ArticleExporterTargetCreateInput!
    update: ArticleExporterTargetUpdateInput!
  ): ArticleExporterTarget!
  createArticlePostProcessor(
    data: ArticlePostProcessorCreateInput!
  ): ArticlePostProcessor!
  createManyArticlePostProcessor(
    data: [ArticlePostProcessorCreateManyInput!]!
    skipDuplicates: Boolean
  ): AffectedRowsOutput!
  deleteArticlePostProcessor(
    where: ArticlePostProcessorWhereUniqueInput!
  ): ArticlePostProcessor
  updateArticlePostProcessor(
    data: ArticlePostProcessorUpdateInput!
    where: ArticlePostProcessorWhereUniqueInput!
  ): ArticlePostProcessor
  deleteManyArticlePostProcessor(
    where: ArticlePostProcessorWhereInput
  ): AffectedRowsOutput!
  updateManyArticlePostProcessor(
    data: ArticlePostProcessorUpdateManyMutationInput!
    where: ArticlePostProcessorWhereInput
  ): AffectedRowsOutput!
  upsertArticlePostProcessor(
    where: ArticlePostProcessorWhereUniqueInput!
    create: ArticlePostProcessorCreateInput!
    update: ArticlePostProcessorUpdateInput!
  ): ArticlePostProcessor!
  createArticleRef(data: ArticleRefCreateInput!): ArticleRef!
  createManyArticleRef(
    data: [ArticleRefCreateManyInput!]!
    skipDuplicates: Boolean
  ): AffectedRowsOutput!
  deleteArticleRef(where: ArticleRefWhereUniqueInput!): ArticleRef
  updateArticleRef(
    data: ArticleRefUpdateInput!
    where: ArticleRefWhereUniqueInput!
  ): ArticleRef
  deleteManyArticleRef(where: ArticleRefWhereInput): AffectedRowsOutput!
  updateManyArticleRef(
    data: ArticleRefUpdateManyMutationInput!
    where: ArticleRefWhereInput
  ): AffectedRowsOutput!
  upsertArticleRef(
    where: ArticleRefWhereUniqueInput!
    create: ArticleRefCreateInput!
    update: ArticleRefUpdateInput!
  ): ArticleRef!
  createBucket(data: BucketCreateInput!): Bucket!
  createManyBucket(
    data: [BucketCreateManyInput!]!
    skipDuplicates: Boolean
  ): AffectedRowsOutput!
  deleteBucket(where: BucketWhereUniqueInput!): Bucket
  updateBucket(data: BucketUpdateInput!, where: BucketWhereUniqueInput!): Bucket
  deleteManyBucket(where: BucketWhereInput): AffectedRowsOutput!
  updateManyBucket(
    data: BucketUpdateManyMutationInput!
    where: BucketWhereInput
  ): AffectedRowsOutput!
  upsertBucket(
    where: BucketWhereUniqueInput!
    create: BucketCreateInput!
    update: BucketUpdateInput!
  ): Bucket!
  createEventHook(data: EventHookCreateInput!): EventHook!
  createManyEventHook(
    data: [EventHookCreateManyInput!]!
    skipDuplicates: Boolean
  ): AffectedRowsOutput!
  deleteEventHook(where: EventHookWhereUniqueInput!): EventHook
  updateEventHook(
    data: EventHookUpdateInput!
    where: EventHookWhereUniqueInput!
  ): EventHook
  deleteManyEventHook(where: EventHookWhereInput): AffectedRowsOutput!
  updateManyEventHook(
    data: EventHookUpdateManyMutationInput!
    where: EventHookWhereInput
  ): AffectedRowsOutput!
  upsertEventHook(
    where: EventHookWhereUniqueInput!
    create: EventHookCreateInput!
    update: EventHookUpdateInput!
  ): EventHook!
  createFeed(data: FeedCreateInput!): Feed!
  createManyFeed(
    data: [FeedCreateManyInput!]!
    skipDuplicates: Boolean
  ): AffectedRowsOutput!
  deleteFeed(where: FeedWhereUniqueInput!): Feed
  updateFeed(data: FeedUpdateInput!, where: FeedWhereUniqueInput!): Feed
  deleteManyFeed(where: FeedWhereInput): AffectedRowsOutput!
  updateManyFeed(
    data: FeedUpdateManyMutationInput!
    where: FeedWhereInput
  ): AffectedRowsOutput!
  upsertFeed(
    where: FeedWhereUniqueInput!
    create: FeedCreateInput!
    update: FeedUpdateInput!
  ): Feed!
  createNoFollowUrl(data: NoFollowUrlCreateInput!): NoFollowUrl!
  createManyNoFollowUrl(
    data: [NoFollowUrlCreateManyInput!]!
    skipDuplicates: Boolean
  ): AffectedRowsOutput!
  deleteNoFollowUrl(where: NoFollowUrlWhereUniqueInput!): NoFollowUrl
  updateNoFollowUrl(
    data: NoFollowUrlUpdateInput!
    where: NoFollowUrlWhereUniqueInput!
  ): NoFollowUrl
  deleteManyNoFollowUrl(where: NoFollowUrlWhereInput): AffectedRowsOutput!
  updateManyNoFollowUrl(
    data: NoFollowUrlUpdateManyMutationInput!
    where: NoFollowUrlWhereInput
  ): AffectedRowsOutput!
  upsertNoFollowUrl(
    where: NoFollowUrlWhereUniqueInput!
    create: NoFollowUrlCreateInput!
    update: NoFollowUrlUpdateInput!
  ): NoFollowUrl!
  createNotebook(data: NotebookCreateInput!): Notebook!
  createManyNotebook(
    data: [NotebookCreateManyInput!]!
    skipDuplicates: Boolean
  ): AffectedRowsOutput!
  deleteNotebook(where: NotebookWhereUniqueInput!): Notebook
  updateNotebook(
    data: NotebookUpdateInput!
    where: NotebookWhereUniqueInput!
  ): Notebook
  deleteManyNotebook(where: NotebookWhereInput): AffectedRowsOutput!
  updateManyNotebook(
    data: NotebookUpdateManyMutationInput!
    where: NotebookWhereInput
  ): AffectedRowsOutput!
  upsertNotebook(
    where: NotebookWhereUniqueInput!
    create: NotebookCreateInput!
    update: NotebookUpdateInput!
  ): Notebook!
  createPlugin(data: PluginCreateInput!): Plugin!
  createManyPlugin(
    data: [PluginCreateManyInput!]!
    skipDuplicates: Boolean
  ): AffectedRowsOutput!
  deletePlugin(where: PluginWhereUniqueInput!): Plugin
  updatePlugin(data: PluginUpdateInput!, where: PluginWhereUniqueInput!): Plugin
  deleteManyPlugin(where: PluginWhereInput): AffectedRowsOutput!
  updateManyPlugin(
    data: PluginUpdateManyMutationInput!
    where: PluginWhereInput
  ): AffectedRowsOutput!
  upsertPlugin(
    where: PluginWhereUniqueInput!
    create: PluginCreateInput!
    update: PluginUpdateInput!
  ): Plugin!
  createStream(data: StreamCreateInput!): Stream!
  createManyStream(
    data: [StreamCreateManyInput!]!
    skipDuplicates: Boolean
  ): AffectedRowsOutput!
  deleteStream(where: StreamWhereUniqueInput!): Stream
  updateStream(data: StreamUpdateInput!, where: StreamWhereUniqueInput!): Stream
  deleteManyStream(where: StreamWhereInput): AffectedRowsOutput!
  updateManyStream(
    data: StreamUpdateManyMutationInput!
    where: StreamWhereInput
  ): AffectedRowsOutput!
  upsertStream(
    where: StreamWhereUniqueInput!
    create: StreamCreateInput!
    update: StreamUpdateInput!
  ): Stream!
  createSubscription(data: SubscriptionCreateInput!): Subscription!
  createManySubscription(
    data: [SubscriptionCreateManyInput!]!
    skipDuplicates: Boolean
  ): AffectedRowsOutput!
  deleteSubscription(where: SubscriptionWhereUniqueInput!): Subscription
  updateSubscription(
    data: SubscriptionUpdateInput!
    where: SubscriptionWhereUniqueInput!
  ): Subscription
  deleteManySubscription(where: SubscriptionWhereInput): AffectedRowsOutput!
  updateManySubscription(
    data: SubscriptionUpdateManyMutationInput!
    where: SubscriptionWhereInput
  ): AffectedRowsOutput!
  upsertSubscription(
    where: SubscriptionWhereUniqueInput!
    create: SubscriptionCreateInput!
    update: SubscriptionUpdateInput!
  ): Subscription!
  createUser(data: UserCreateInput!): User!
  createManyUser(
    data: [UserCreateManyInput!]!
    skipDuplicates: Boolean
  ): AffectedRowsOutput!
  deleteUser(where: UserWhereUniqueInput!): User
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  deleteManyUser(where: UserWhereInput): AffectedRowsOutput!
  updateManyUser(
    data: UserUpdateManyMutationInput!
    where: UserWhereInput
  ): AffectedRowsOutput!
  upsertUser(
    where: UserWhereUniqueInput!
    create: UserCreateInput!
    update: UserUpdateInput!
  ): User!
  subscribeToFeed(
    email: String!
    bucketId: String!
    feedUrl: String!
  ): Subscription!
  getOauthRedirect: String!
}

input ArticleCreateInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  released: Boolean
  date_published: DateTime
  date_modified: DateTime
  comment_feed_url: String
  url: String
  author: String
  title: String!
  tags: JSON
  content_raw_mime: String
  content_raw: String
  content_text: String
  main_image_url: String
  source_used: String
  has_harvest: Boolean
  has_readability: Boolean
  has_video: Boolean
  has_audio: Boolean
  length_video: Int
  length_audio: Int
  word_count_text: Int
  score: Float
  lastScoredAt: DateTime
  enclosure: JSON
  data_json_map: JSON
  articleRef: ArticleRefCreateNestedManyWithoutArticleInput
}

input ArticleRefCreateNestedManyWithoutArticleInput {
  create: [ArticleRefCreateWithoutArticleInput!]
  connectOrCreate: [ArticleRefCreateOrConnectWithoutArticleInput!]
  createMany: ArticleRefCreateManyArticleInputEnvelope
  connect: [ArticleRefWhereUniqueInput!]
}

input ArticleRefCreateWithoutArticleInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  date_released: DateTime
  favored: Boolean
  has_seen: Boolean
  tags: JSON
  data: JSON
  type: String
  owner: UserCreateNestedOneWithoutArticleRefsInput
  stream: StreamCreateNestedOneWithoutArticleRefsInput!
}

input UserCreateNestedOneWithoutArticleRefsInput {
  create: UserCreateWithoutArticleRefsInput
  connectOrCreate: UserCreateOrConnectWithoutArticleRefsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutArticleRefsInput {
  id: String
  email: String!
  name: String!
  date_format: String
  time_format: String
  createdAt: DateTime
  buckets: BucketCreateNestedManyWithoutOwnerInput
  notebooks: NotebookCreateNestedManyWithoutOwnerInput
  subscription: SubscriptionCreateNestedManyWithoutOwnerInput
  feeds: FeedCreateNestedManyWithoutOwnerInput
  eventHooks: EventHookCreateNestedManyWithoutOwnerInput
  plugins: PluginCreateNestedManyWithoutOwnerInput
}

input BucketCreateNestedManyWithoutOwnerInput {
  create: [BucketCreateWithoutOwnerInput!]
  connectOrCreate: [BucketCreateOrConnectWithoutOwnerInput!]
  createMany: BucketCreateManyOwnerInputEnvelope
  connect: [BucketWhereUniqueInput!]
}

input BucketCreateWithoutOwnerInput {
  id: String
  title: String!
  description: String
  is_public: Boolean
  tags: JSON
  in_focus: Boolean
  type: Int
  lastUpdatedAt: DateTime
  createdAt: DateTime
  subscriptions: SubscriptionCreateNestedManyWithoutBucketInput
  postProcessors: ArticlePostProcessorCreateNestedManyWithoutBucketsInput
  exporters: ArticleExporterCreateNestedManyWithoutBucketInput
  stream: StreamCreateNestedOneWithoutBucketsInput!
}

input SubscriptionCreateNestedManyWithoutBucketInput {
  create: [SubscriptionCreateWithoutBucketInput!]
  connectOrCreate: [SubscriptionCreateOrConnectWithoutBucketInput!]
  createMany: SubscriptionCreateManyBucketInputEnvelope
  connect: [SubscriptionWhereUniqueInput!]
}

input SubscriptionCreateWithoutBucketInput {
  id: String
  inactive: Boolean
  createdAt: DateTime
  lastUpdatedAt: DateTime
  title: String!
  tags: JSON
  feed: FeedCreateNestedOneWithoutSubscriptionsInput!
  owner: UserCreateNestedOneWithoutSubscriptionInput!
}

input FeedCreateNestedOneWithoutSubscriptionsInput {
  create: FeedCreateWithoutSubscriptionsInput
  connectOrCreate: FeedCreateOrConnectWithoutSubscriptionsInput
  connect: FeedWhereUniqueInput
}

input FeedCreateWithoutSubscriptionsInput {
  id: String
  feed_url: String!
  feed_url_auth_header: String
  home_page_url: String
  domain: String!
  op_secret: String
  title: String
  tags: JSON
  author: String
  failed_attempt_count: Int
  is_private: Boolean
  expired: Boolean
  broken: Boolean
  inactive: Boolean
  managed: Boolean
  filter: String
  description: String
  status: String
  lastStatusChangeAt: DateTime
  harvestIntervalMinutes: Int
  nextHarvestAt: DateTime
  retention_size: Int
  harvest_site: Boolean
  allowHarvestFailure: Boolean
  harvest_prerender: Boolean
  createdAt: DateTime
  lastUpdatedAt: DateTime
  owner: UserCreateNestedOneWithoutFeedsInput!
  managed_by_plugin: PluginCreateNestedOneWithoutFeedsInput
  stream: StreamCreateNestedOneWithoutFeedsInput!
}

input UserCreateNestedOneWithoutFeedsInput {
  create: UserCreateWithoutFeedsInput
  connectOrCreate: UserCreateOrConnectWithoutFeedsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutFeedsInput {
  id: String
  email: String!
  name: String!
  date_format: String
  time_format: String
  createdAt: DateTime
  buckets: BucketCreateNestedManyWithoutOwnerInput
  articleRefs: ArticleRefCreateNestedManyWithoutOwnerInput
  notebooks: NotebookCreateNestedManyWithoutOwnerInput
  subscription: SubscriptionCreateNestedManyWithoutOwnerInput
  eventHooks: EventHookCreateNestedManyWithoutOwnerInput
  plugins: PluginCreateNestedManyWithoutOwnerInput
}

input ArticleRefCreateNestedManyWithoutOwnerInput {
  create: [ArticleRefCreateWithoutOwnerInput!]
  connectOrCreate: [ArticleRefCreateOrConnectWithoutOwnerInput!]
  createMany: ArticleRefCreateManyOwnerInputEnvelope
  connect: [ArticleRefWhereUniqueInput!]
}

input ArticleRefCreateWithoutOwnerInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  date_released: DateTime
  favored: Boolean
  has_seen: Boolean
  tags: JSON
  data: JSON
  type: String
  article: ArticleCreateNestedOneWithoutArticleRefInput!
  stream: StreamCreateNestedOneWithoutArticleRefsInput!
}

input ArticleCreateNestedOneWithoutArticleRefInput {
  create: ArticleCreateWithoutArticleRefInput
  connectOrCreate: ArticleCreateOrConnectWithoutArticleRefInput
  connect: ArticleWhereUniqueInput
}

input ArticleCreateWithoutArticleRefInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  released: Boolean
  date_published: DateTime
  date_modified: DateTime
  comment_feed_url: String
  url: String
  author: String
  title: String!
  tags: JSON
  content_raw_mime: String
  content_raw: String
  content_text: String
  main_image_url: String
  source_used: String
  has_harvest: Boolean
  has_readability: Boolean
  has_video: Boolean
  has_audio: Boolean
  length_video: Int
  length_audio: Int
  word_count_text: Int
  score: Float
  lastScoredAt: DateTime
  enclosure: JSON
  data_json_map: JSON
}

input ArticleCreateOrConnectWithoutArticleRefInput {
  where: ArticleWhereUniqueInput!
  create: ArticleCreateWithoutArticleRefInput!
}

input StreamCreateNestedOneWithoutArticleRefsInput {
  create: StreamCreateWithoutArticleRefsInput
  connectOrCreate: StreamCreateOrConnectWithoutArticleRefsInput
  connect: StreamWhereUniqueInput
}

input StreamCreateWithoutArticleRefsInput {
  id: String
  feeds: FeedCreateNestedManyWithoutStreamInput
  buckets: BucketCreateNestedManyWithoutStreamInput
  notebooks: NotebookCreateNestedManyWithoutStreamInput
}

input FeedCreateNestedManyWithoutStreamInput {
  create: [FeedCreateWithoutStreamInput!]
  connectOrCreate: [FeedCreateOrConnectWithoutStreamInput!]
  createMany: FeedCreateManyStreamInputEnvelope
  connect: [FeedWhereUniqueInput!]
}

input FeedCreateWithoutStreamInput {
  id: String
  feed_url: String!
  feed_url_auth_header: String
  home_page_url: String
  domain: String!
  op_secret: String
  title: String
  tags: JSON
  author: String
  failed_attempt_count: Int
  is_private: Boolean
  expired: Boolean
  broken: Boolean
  inactive: Boolean
  managed: Boolean
  filter: String
  description: String
  status: String
  lastStatusChangeAt: DateTime
  harvestIntervalMinutes: Int
  nextHarvestAt: DateTime
  retention_size: Int
  harvest_site: Boolean
  allowHarvestFailure: Boolean
  harvest_prerender: Boolean
  createdAt: DateTime
  lastUpdatedAt: DateTime
  owner: UserCreateNestedOneWithoutFeedsInput!
  managed_by_plugin: PluginCreateNestedOneWithoutFeedsInput
  subscriptions: SubscriptionCreateNestedManyWithoutFeedInput
}

input PluginCreateNestedOneWithoutFeedsInput {
  create: PluginCreateWithoutFeedsInput
  connectOrCreate: PluginCreateOrConnectWithoutFeedsInput
  connect: PluginWhereUniqueInput
}

input PluginCreateWithoutFeedsInput {
  id: String
  source_url: String!
  type: String!
  user_params: JSON!
  source: JSON
  source_sha1: String
  lastUpdatedAt: DateTime!
  createdAt: DateTime
  owner: UserCreateNestedOneWithoutPluginsInput
}

input UserCreateNestedOneWithoutPluginsInput {
  create: UserCreateWithoutPluginsInput
  connectOrCreate: UserCreateOrConnectWithoutPluginsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutPluginsInput {
  id: String
  email: String!
  name: String!
  date_format: String
  time_format: String
  createdAt: DateTime
  buckets: BucketCreateNestedManyWithoutOwnerInput
  articleRefs: ArticleRefCreateNestedManyWithoutOwnerInput
  notebooks: NotebookCreateNestedManyWithoutOwnerInput
  subscription: SubscriptionCreateNestedManyWithoutOwnerInput
  feeds: FeedCreateNestedManyWithoutOwnerInput
  eventHooks: EventHookCreateNestedManyWithoutOwnerInput
}

input NotebookCreateNestedManyWithoutOwnerInput {
  create: [NotebookCreateWithoutOwnerInput!]
  connectOrCreate: [NotebookCreateOrConnectWithoutOwnerInput!]
  createMany: NotebookCreateManyOwnerInputEnvelope
  connect: [NotebookWhereUniqueInput!]
}

input NotebookCreateWithoutOwnerInput {
  id: String
  name: String!
  description: String
  readonly: Boolean
  listed: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  stream: StreamCreateNestedOneWithoutNotebooksInput!
}

input StreamCreateNestedOneWithoutNotebooksInput {
  create: StreamCreateWithoutNotebooksInput
  connectOrCreate: StreamCreateOrConnectWithoutNotebooksInput
  connect: StreamWhereUniqueInput
}

input StreamCreateWithoutNotebooksInput {
  id: String
  articleRefs: ArticleRefCreateNestedManyWithoutStreamInput
  feeds: FeedCreateNestedManyWithoutStreamInput
  buckets: BucketCreateNestedManyWithoutStreamInput
}

input ArticleRefCreateNestedManyWithoutStreamInput {
  create: [ArticleRefCreateWithoutStreamInput!]
  connectOrCreate: [ArticleRefCreateOrConnectWithoutStreamInput!]
  createMany: ArticleRefCreateManyStreamInputEnvelope
  connect: [ArticleRefWhereUniqueInput!]
}

input ArticleRefCreateWithoutStreamInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  date_released: DateTime
  favored: Boolean
  has_seen: Boolean
  tags: JSON
  data: JSON
  type: String
  owner: UserCreateNestedOneWithoutArticleRefsInput
  article: ArticleCreateNestedOneWithoutArticleRefInput!
}

input ArticleRefCreateOrConnectWithoutStreamInput {
  where: ArticleRefWhereUniqueInput!
  create: ArticleRefCreateWithoutStreamInput!
}

input ArticleRefCreateManyStreamInputEnvelope {
  data: [ArticleRefCreateManyStreamInput!]!
  skipDuplicates: Boolean
}

input ArticleRefCreateManyStreamInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  date_released: DateTime
  ownerId: String
  favored: Boolean
  has_seen: Boolean
  tags: JSON
  data: JSON
  articleId: String!
  type: String
}

input BucketCreateNestedManyWithoutStreamInput {
  create: [BucketCreateWithoutStreamInput!]
  connectOrCreate: [BucketCreateOrConnectWithoutStreamInput!]
  createMany: BucketCreateManyStreamInputEnvelope
  connect: [BucketWhereUniqueInput!]
}

input BucketCreateWithoutStreamInput {
  id: String
  title: String!
  description: String
  is_public: Boolean
  tags: JSON
  in_focus: Boolean
  type: Int
  lastUpdatedAt: DateTime
  createdAt: DateTime
  owner: UserCreateNestedOneWithoutBucketsInput!
  subscriptions: SubscriptionCreateNestedManyWithoutBucketInput
  postProcessors: ArticlePostProcessorCreateNestedManyWithoutBucketsInput
  exporters: ArticleExporterCreateNestedManyWithoutBucketInput
}

input UserCreateNestedOneWithoutBucketsInput {
  create: UserCreateWithoutBucketsInput
  connectOrCreate: UserCreateOrConnectWithoutBucketsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutBucketsInput {
  id: String
  email: String!
  name: String!
  date_format: String
  time_format: String
  createdAt: DateTime
  articleRefs: ArticleRefCreateNestedManyWithoutOwnerInput
  notebooks: NotebookCreateNestedManyWithoutOwnerInput
  subscription: SubscriptionCreateNestedManyWithoutOwnerInput
  feeds: FeedCreateNestedManyWithoutOwnerInput
  eventHooks: EventHookCreateNestedManyWithoutOwnerInput
  plugins: PluginCreateNestedManyWithoutOwnerInput
}

input SubscriptionCreateNestedManyWithoutOwnerInput {
  create: [SubscriptionCreateWithoutOwnerInput!]
  connectOrCreate: [SubscriptionCreateOrConnectWithoutOwnerInput!]
  createMany: SubscriptionCreateManyOwnerInputEnvelope
  connect: [SubscriptionWhereUniqueInput!]
}

input SubscriptionCreateWithoutOwnerInput {
  id: String
  inactive: Boolean
  createdAt: DateTime
  lastUpdatedAt: DateTime
  title: String!
  tags: JSON
  feed: FeedCreateNestedOneWithoutSubscriptionsInput!
  bucket: BucketCreateNestedOneWithoutSubscriptionsInput!
}

input BucketCreateNestedOneWithoutSubscriptionsInput {
  create: BucketCreateWithoutSubscriptionsInput
  connectOrCreate: BucketCreateOrConnectWithoutSubscriptionsInput
  connect: BucketWhereUniqueInput
}

input BucketCreateWithoutSubscriptionsInput {
  id: String
  title: String!
  description: String
  is_public: Boolean
  tags: JSON
  in_focus: Boolean
  type: Int
  lastUpdatedAt: DateTime
  createdAt: DateTime
  owner: UserCreateNestedOneWithoutBucketsInput!
  postProcessors: ArticlePostProcessorCreateNestedManyWithoutBucketsInput
  exporters: ArticleExporterCreateNestedManyWithoutBucketInput
  stream: StreamCreateNestedOneWithoutBucketsInput!
}

input ArticlePostProcessorCreateNestedManyWithoutBucketsInput {
  create: [ArticlePostProcessorCreateWithoutBucketsInput!]
  connectOrCreate: [ArticlePostProcessorCreateOrConnectWithoutBucketsInput!]
  connect: [ArticlePostProcessorWhereUniqueInput!]
}

input ArticlePostProcessorCreateWithoutBucketsInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  type: String!
  context: String
}

input ArticlePostProcessorCreateOrConnectWithoutBucketsInput {
  where: ArticlePostProcessorWhereUniqueInput!
  create: ArticlePostProcessorCreateWithoutBucketsInput!
}

input ArticleExporterCreateNestedManyWithoutBucketInput {
  create: [ArticleExporterCreateWithoutBucketInput!]
  connectOrCreate: [ArticleExporterCreateOrConnectWithoutBucketInput!]
  createMany: ArticleExporterCreateManyBucketInputEnvelope
  connect: [ArticleExporterWhereUniqueInput!]
}

input ArticleExporterCreateWithoutBucketInput {
  id: String
  segment: Boolean
  segment_sort_field: String
  segment_sort_asc: Boolean
  segment_size: Int
  segment_digest: Boolean
  segment_look_ahead_min: Int
  lastUpdatedAt: DateTime
  trigger_refresh_on: String
  trigger_scheduled_last_at: DateTime
  trigger_scheduled_next_at: DateTime
  trigger_scheduled: String
  targets: ArticleExporterTargetCreateNestedManyWithoutExporterInput
}

input ArticleExporterTargetCreateNestedManyWithoutExporterInput {
  create: [ArticleExporterTargetCreateWithoutExporterInput!]
  connectOrCreate: [ArticleExporterTargetCreateOrConnectWithoutExporterInput!]
  createMany: ArticleExporterTargetCreateManyExporterInputEnvelope
  connect: [ArticleExporterTargetWhereUniqueInput!]
}

input ArticleExporterTargetCreateWithoutExporterInput {
  id: String
  type: String!
  context: String
}

input ArticleExporterTargetCreateOrConnectWithoutExporterInput {
  where: ArticleExporterTargetWhereUniqueInput!
  create: ArticleExporterTargetCreateWithoutExporterInput!
}

input ArticleExporterTargetCreateManyExporterInputEnvelope {
  data: [ArticleExporterTargetCreateManyExporterInput!]!
  skipDuplicates: Boolean
}

input ArticleExporterTargetCreateManyExporterInput {
  id: String
  type: String!
  context: String
}

input ArticleExporterCreateOrConnectWithoutBucketInput {
  where: ArticleExporterWhereUniqueInput!
  create: ArticleExporterCreateWithoutBucketInput!
}

input ArticleExporterCreateManyBucketInputEnvelope {
  data: [ArticleExporterCreateManyBucketInput!]!
  skipDuplicates: Boolean
}

input ArticleExporterCreateManyBucketInput {
  id: String
  segment: Boolean
  segment_sort_field: String
  segment_sort_asc: Boolean
  segment_size: Int
  segment_digest: Boolean
  segment_look_ahead_min: Int
  lastUpdatedAt: DateTime
  trigger_refresh_on: String
  trigger_scheduled_last_at: DateTime
  trigger_scheduled_next_at: DateTime
  trigger_scheduled: String
}

input StreamCreateNestedOneWithoutBucketsInput {
  create: StreamCreateWithoutBucketsInput
  connectOrCreate: StreamCreateOrConnectWithoutBucketsInput
  connect: StreamWhereUniqueInput
}

input StreamCreateWithoutBucketsInput {
  id: String
  articleRefs: ArticleRefCreateNestedManyWithoutStreamInput
  feeds: FeedCreateNestedManyWithoutStreamInput
  notebooks: NotebookCreateNestedManyWithoutStreamInput
}

input NotebookCreateNestedManyWithoutStreamInput {
  create: [NotebookCreateWithoutStreamInput!]
  connectOrCreate: [NotebookCreateOrConnectWithoutStreamInput!]
  createMany: NotebookCreateManyStreamInputEnvelope
  connect: [NotebookWhereUniqueInput!]
}

input NotebookCreateWithoutStreamInput {
  id: String
  name: String!
  description: String
  readonly: Boolean
  listed: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  owner: UserCreateNestedOneWithoutNotebooksInput!
}

input UserCreateNestedOneWithoutNotebooksInput {
  create: UserCreateWithoutNotebooksInput
  connectOrCreate: UserCreateOrConnectWithoutNotebooksInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutNotebooksInput {
  id: String
  email: String!
  name: String!
  date_format: String
  time_format: String
  createdAt: DateTime
  buckets: BucketCreateNestedManyWithoutOwnerInput
  articleRefs: ArticleRefCreateNestedManyWithoutOwnerInput
  subscription: SubscriptionCreateNestedManyWithoutOwnerInput
  feeds: FeedCreateNestedManyWithoutOwnerInput
  eventHooks: EventHookCreateNestedManyWithoutOwnerInput
  plugins: PluginCreateNestedManyWithoutOwnerInput
}

input FeedCreateNestedManyWithoutOwnerInput {
  create: [FeedCreateWithoutOwnerInput!]
  connectOrCreate: [FeedCreateOrConnectWithoutOwnerInput!]
  createMany: FeedCreateManyOwnerInputEnvelope
  connect: [FeedWhereUniqueInput!]
}

input FeedCreateWithoutOwnerInput {
  id: String
  feed_url: String!
  feed_url_auth_header: String
  home_page_url: String
  domain: String!
  op_secret: String
  title: String
  tags: JSON
  author: String
  failed_attempt_count: Int
  is_private: Boolean
  expired: Boolean
  broken: Boolean
  inactive: Boolean
  managed: Boolean
  filter: String
  description: String
  status: String
  lastStatusChangeAt: DateTime
  harvestIntervalMinutes: Int
  nextHarvestAt: DateTime
  retention_size: Int
  harvest_site: Boolean
  allowHarvestFailure: Boolean
  harvest_prerender: Boolean
  createdAt: DateTime
  lastUpdatedAt: DateTime
  managed_by_plugin: PluginCreateNestedOneWithoutFeedsInput
  stream: StreamCreateNestedOneWithoutFeedsInput!
  subscriptions: SubscriptionCreateNestedManyWithoutFeedInput
}

input StreamCreateNestedOneWithoutFeedsInput {
  create: StreamCreateWithoutFeedsInput
  connectOrCreate: StreamCreateOrConnectWithoutFeedsInput
  connect: StreamWhereUniqueInput
}

input StreamCreateWithoutFeedsInput {
  id: String
  articleRefs: ArticleRefCreateNestedManyWithoutStreamInput
  buckets: BucketCreateNestedManyWithoutStreamInput
  notebooks: NotebookCreateNestedManyWithoutStreamInput
}

input StreamCreateOrConnectWithoutFeedsInput {
  where: StreamWhereUniqueInput!
  create: StreamCreateWithoutFeedsInput!
}

input SubscriptionCreateNestedManyWithoutFeedInput {
  create: [SubscriptionCreateWithoutFeedInput!]
  connectOrCreate: [SubscriptionCreateOrConnectWithoutFeedInput!]
  createMany: SubscriptionCreateManyFeedInputEnvelope
  connect: [SubscriptionWhereUniqueInput!]
}

input SubscriptionCreateWithoutFeedInput {
  id: String
  inactive: Boolean
  createdAt: DateTime
  lastUpdatedAt: DateTime
  title: String!
  tags: JSON
  owner: UserCreateNestedOneWithoutSubscriptionInput!
  bucket: BucketCreateNestedOneWithoutSubscriptionsInput!
}

input UserCreateNestedOneWithoutSubscriptionInput {
  create: UserCreateWithoutSubscriptionInput
  connectOrCreate: UserCreateOrConnectWithoutSubscriptionInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutSubscriptionInput {
  id: String
  email: String!
  name: String!
  date_format: String
  time_format: String
  createdAt: DateTime
  buckets: BucketCreateNestedManyWithoutOwnerInput
  articleRefs: ArticleRefCreateNestedManyWithoutOwnerInput
  notebooks: NotebookCreateNestedManyWithoutOwnerInput
  feeds: FeedCreateNestedManyWithoutOwnerInput
  eventHooks: EventHookCreateNestedManyWithoutOwnerInput
  plugins: PluginCreateNestedManyWithoutOwnerInput
}

input EventHookCreateNestedManyWithoutOwnerInput {
  create: [EventHookCreateWithoutOwnerInput!]
  connectOrCreate: [EventHookCreateOrConnectWithoutOwnerInput!]
  createMany: EventHookCreateManyOwnerInputEnvelope
  connect: [EventHookWhereUniqueInput!]
}

input EventHookCreateWithoutOwnerInput {
  id: String
  event: String!
  type: String!
  script_or_url: String!
  script_source_url: String
}

input EventHookCreateOrConnectWithoutOwnerInput {
  where: EventHookWhereUniqueInput!
  create: EventHookCreateWithoutOwnerInput!
}

input EventHookCreateManyOwnerInputEnvelope {
  data: [EventHookCreateManyOwnerInput!]!
  skipDuplicates: Boolean
}

input EventHookCreateManyOwnerInput {
  id: String
  event: String!
  type: String!
  script_or_url: String!
  script_source_url: String
}

input PluginCreateNestedManyWithoutOwnerInput {
  create: [PluginCreateWithoutOwnerInput!]
  connectOrCreate: [PluginCreateOrConnectWithoutOwnerInput!]
  createMany: PluginCreateManyOwnerInputEnvelope
  connect: [PluginWhereUniqueInput!]
}

input PluginCreateWithoutOwnerInput {
  id: String
  source_url: String!
  type: String!
  user_params: JSON!
  source: JSON
  source_sha1: String
  lastUpdatedAt: DateTime!
  createdAt: DateTime
  feeds: FeedCreateNestedManyWithoutManaged_by_pluginInput
}

input FeedCreateNestedManyWithoutManaged_by_pluginInput {
  create: [FeedCreateWithoutManaged_by_pluginInput!]
  connectOrCreate: [FeedCreateOrConnectWithoutManaged_by_pluginInput!]
  createMany: FeedCreateManyManaged_by_pluginInputEnvelope
  connect: [FeedWhereUniqueInput!]
}

input FeedCreateWithoutManaged_by_pluginInput {
  id: String
  feed_url: String!
  feed_url_auth_header: String
  home_page_url: String
  domain: String!
  op_secret: String
  title: String
  tags: JSON
  author: String
  failed_attempt_count: Int
  is_private: Boolean
  expired: Boolean
  broken: Boolean
  inactive: Boolean
  managed: Boolean
  filter: String
  description: String
  status: String
  lastStatusChangeAt: DateTime
  harvestIntervalMinutes: Int
  nextHarvestAt: DateTime
  retention_size: Int
  harvest_site: Boolean
  allowHarvestFailure: Boolean
  harvest_prerender: Boolean
  createdAt: DateTime
  lastUpdatedAt: DateTime
  owner: UserCreateNestedOneWithoutFeedsInput!
  stream: StreamCreateNestedOneWithoutFeedsInput!
  subscriptions: SubscriptionCreateNestedManyWithoutFeedInput
}

input FeedCreateOrConnectWithoutManaged_by_pluginInput {
  where: FeedWhereUniqueInput!
  create: FeedCreateWithoutManaged_by_pluginInput!
}

input FeedCreateManyManaged_by_pluginInputEnvelope {
  data: [FeedCreateManyManaged_by_pluginInput!]!
  skipDuplicates: Boolean
}

input FeedCreateManyManaged_by_pluginInput {
  id: String
  feed_url: String!
  feed_url_auth_header: String
  home_page_url: String
  domain: String!
  op_secret: String
  title: String
  tags: JSON
  author: String
  ownerId: String!
  failed_attempt_count: Int
  is_private: Boolean
  expired: Boolean
  broken: Boolean
  inactive: Boolean
  managed: Boolean
  filter: String
  description: String
  status: String
  lastStatusChangeAt: DateTime
  harvestIntervalMinutes: Int
  nextHarvestAt: DateTime
  retention_size: Int
  harvest_site: Boolean
  allowHarvestFailure: Boolean
  harvest_prerender: Boolean
  streamId: String!
  createdAt: DateTime
  lastUpdatedAt: DateTime
}

input PluginCreateOrConnectWithoutOwnerInput {
  where: PluginWhereUniqueInput!
  create: PluginCreateWithoutOwnerInput!
}

input PluginCreateManyOwnerInputEnvelope {
  data: [PluginCreateManyOwnerInput!]!
  skipDuplicates: Boolean
}

input PluginCreateManyOwnerInput {
  id: String
  source_url: String!
  type: String!
  user_params: JSON!
  source: JSON
  source_sha1: String
  lastUpdatedAt: DateTime!
  createdAt: DateTime
}

input UserCreateOrConnectWithoutSubscriptionInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutSubscriptionInput!
}

input SubscriptionCreateOrConnectWithoutFeedInput {
  where: SubscriptionWhereUniqueInput!
  create: SubscriptionCreateWithoutFeedInput!
}

input SubscriptionCreateManyFeedInputEnvelope {
  data: [SubscriptionCreateManyFeedInput!]!
  skipDuplicates: Boolean
}

input SubscriptionCreateManyFeedInput {
  id: String
  inactive: Boolean
  createdAt: DateTime
  lastUpdatedAt: DateTime
  title: String!
  tags: JSON
  ownerId: String!
  bucketId: String!
}

input FeedCreateOrConnectWithoutOwnerInput {
  where: FeedWhereUniqueInput!
  create: FeedCreateWithoutOwnerInput!
}

input FeedCreateManyOwnerInputEnvelope {
  data: [FeedCreateManyOwnerInput!]!
  skipDuplicates: Boolean
}

input FeedCreateManyOwnerInput {
  id: String
  feed_url: String!
  feed_url_auth_header: String
  home_page_url: String
  domain: String!
  op_secret: String
  title: String
  tags: JSON
  author: String
  failed_attempt_count: Int
  is_private: Boolean
  expired: Boolean
  broken: Boolean
  inactive: Boolean
  managed: Boolean
  managed_by_plugin_id: String
  filter: String
  description: String
  status: String
  lastStatusChangeAt: DateTime
  harvestIntervalMinutes: Int
  nextHarvestAt: DateTime
  retention_size: Int
  harvest_site: Boolean
  allowHarvestFailure: Boolean
  harvest_prerender: Boolean
  streamId: String!
  createdAt: DateTime
  lastUpdatedAt: DateTime
}

input UserCreateOrConnectWithoutNotebooksInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutNotebooksInput!
}

input NotebookCreateOrConnectWithoutStreamInput {
  where: NotebookWhereUniqueInput!
  create: NotebookCreateWithoutStreamInput!
}

input NotebookCreateManyStreamInputEnvelope {
  data: [NotebookCreateManyStreamInput!]!
  skipDuplicates: Boolean
}

input NotebookCreateManyStreamInput {
  id: String
  name: String!
  description: String
  readonly: Boolean
  listed: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  ownerId: String!
}

input StreamCreateOrConnectWithoutBucketsInput {
  where: StreamWhereUniqueInput!
  create: StreamCreateWithoutBucketsInput!
}

input BucketCreateOrConnectWithoutSubscriptionsInput {
  where: BucketWhereUniqueInput!
  create: BucketCreateWithoutSubscriptionsInput!
}

input SubscriptionCreateOrConnectWithoutOwnerInput {
  where: SubscriptionWhereUniqueInput!
  create: SubscriptionCreateWithoutOwnerInput!
}

input SubscriptionCreateManyOwnerInputEnvelope {
  data: [SubscriptionCreateManyOwnerInput!]!
  skipDuplicates: Boolean
}

input SubscriptionCreateManyOwnerInput {
  id: String
  inactive: Boolean
  createdAt: DateTime
  lastUpdatedAt: DateTime
  title: String!
  tags: JSON
  feedId: String!
  bucketId: String!
}

input UserCreateOrConnectWithoutBucketsInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutBucketsInput!
}

input BucketCreateOrConnectWithoutStreamInput {
  where: BucketWhereUniqueInput!
  create: BucketCreateWithoutStreamInput!
}

input BucketCreateManyStreamInputEnvelope {
  data: [BucketCreateManyStreamInput!]!
  skipDuplicates: Boolean
}

input BucketCreateManyStreamInput {
  id: String
  title: String!
  description: String
  is_public: Boolean
  tags: JSON
  in_focus: Boolean
  type: Int
  ownerId: String!
  lastUpdatedAt: DateTime
  createdAt: DateTime
}

input StreamCreateOrConnectWithoutNotebooksInput {
  where: StreamWhereUniqueInput!
  create: StreamCreateWithoutNotebooksInput!
}

input NotebookCreateOrConnectWithoutOwnerInput {
  where: NotebookWhereUniqueInput!
  create: NotebookCreateWithoutOwnerInput!
}

input NotebookCreateManyOwnerInputEnvelope {
  data: [NotebookCreateManyOwnerInput!]!
  skipDuplicates: Boolean
}

input NotebookCreateManyOwnerInput {
  id: String
  name: String!
  description: String
  readonly: Boolean
  listed: Boolean
  streamId: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input UserCreateOrConnectWithoutPluginsInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutPluginsInput!
}

input PluginCreateOrConnectWithoutFeedsInput {
  where: PluginWhereUniqueInput!
  create: PluginCreateWithoutFeedsInput!
}

input FeedCreateOrConnectWithoutStreamInput {
  where: FeedWhereUniqueInput!
  create: FeedCreateWithoutStreamInput!
}

input FeedCreateManyStreamInputEnvelope {
  data: [FeedCreateManyStreamInput!]!
  skipDuplicates: Boolean
}

input FeedCreateManyStreamInput {
  id: String
  feed_url: String!
  feed_url_auth_header: String
  home_page_url: String
  domain: String!
  op_secret: String
  title: String
  tags: JSON
  author: String
  ownerId: String!
  failed_attempt_count: Int
  is_private: Boolean
  expired: Boolean
  broken: Boolean
  inactive: Boolean
  managed: Boolean
  managed_by_plugin_id: String
  filter: String
  description: String
  status: String
  lastStatusChangeAt: DateTime
  harvestIntervalMinutes: Int
  nextHarvestAt: DateTime
  retention_size: Int
  harvest_site: Boolean
  allowHarvestFailure: Boolean
  harvest_prerender: Boolean
  createdAt: DateTime
  lastUpdatedAt: DateTime
}

input StreamCreateOrConnectWithoutArticleRefsInput {
  where: StreamWhereUniqueInput!
  create: StreamCreateWithoutArticleRefsInput!
}

input ArticleRefCreateOrConnectWithoutOwnerInput {
  where: ArticleRefWhereUniqueInput!
  create: ArticleRefCreateWithoutOwnerInput!
}

input ArticleRefCreateManyOwnerInputEnvelope {
  data: [ArticleRefCreateManyOwnerInput!]!
  skipDuplicates: Boolean
}

input ArticleRefCreateManyOwnerInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  date_released: DateTime
  favored: Boolean
  has_seen: Boolean
  tags: JSON
  data: JSON
  articleId: String!
  type: String
  streamId: String!
}

input UserCreateOrConnectWithoutFeedsInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutFeedsInput!
}

input FeedCreateOrConnectWithoutSubscriptionsInput {
  where: FeedWhereUniqueInput!
  create: FeedCreateWithoutSubscriptionsInput!
}

input SubscriptionCreateOrConnectWithoutBucketInput {
  where: SubscriptionWhereUniqueInput!
  create: SubscriptionCreateWithoutBucketInput!
}

input SubscriptionCreateManyBucketInputEnvelope {
  data: [SubscriptionCreateManyBucketInput!]!
  skipDuplicates: Boolean
}

input SubscriptionCreateManyBucketInput {
  id: String
  inactive: Boolean
  createdAt: DateTime
  lastUpdatedAt: DateTime
  title: String!
  tags: JSON
  feedId: String!
  ownerId: String!
}

input BucketCreateOrConnectWithoutOwnerInput {
  where: BucketWhereUniqueInput!
  create: BucketCreateWithoutOwnerInput!
}

input BucketCreateManyOwnerInputEnvelope {
  data: [BucketCreateManyOwnerInput!]!
  skipDuplicates: Boolean
}

input BucketCreateManyOwnerInput {
  id: String
  title: String!
  description: String
  is_public: Boolean
  tags: JSON
  in_focus: Boolean
  type: Int
  lastUpdatedAt: DateTime
  createdAt: DateTime
  streamId: String!
}

input UserCreateOrConnectWithoutArticleRefsInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutArticleRefsInput!
}

input ArticleRefCreateOrConnectWithoutArticleInput {
  where: ArticleRefWhereUniqueInput!
  create: ArticleRefCreateWithoutArticleInput!
}

input ArticleRefCreateManyArticleInputEnvelope {
  data: [ArticleRefCreateManyArticleInput!]!
  skipDuplicates: Boolean
}

input ArticleRefCreateManyArticleInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  date_released: DateTime
  ownerId: String
  favored: Boolean
  has_seen: Boolean
  tags: JSON
  data: JSON
  type: String
  streamId: String!
}

type AffectedRowsOutput {
  count: Int!
}

input ArticleCreateManyInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  released: Boolean
  date_published: DateTime
  date_modified: DateTime
  comment_feed_url: String
  url: String
  author: String
  title: String!
  tags: JSON
  content_raw_mime: String
  content_raw: String
  content_text: String
  main_image_url: String
  source_used: String
  has_harvest: Boolean
  has_readability: Boolean
  has_video: Boolean
  has_audio: Boolean
  length_video: Int
  length_audio: Int
  word_count_text: Int
  score: Float
  lastScoredAt: DateTime
  enclosure: JSON
  data_json_map: JSON
}

input ArticleUpdateInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  released: BoolFieldUpdateOperationsInput
  date_published: DateTimeFieldUpdateOperationsInput
  date_modified: NullableDateTimeFieldUpdateOperationsInput
  comment_feed_url: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  author: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  tags: JSON
  content_raw_mime: NullableStringFieldUpdateOperationsInput
  content_raw: NullableStringFieldUpdateOperationsInput
  content_text: NullableStringFieldUpdateOperationsInput
  main_image_url: NullableStringFieldUpdateOperationsInput
  source_used: NullableStringFieldUpdateOperationsInput
  has_harvest: NullableBoolFieldUpdateOperationsInput
  has_readability: NullableBoolFieldUpdateOperationsInput
  has_video: BoolFieldUpdateOperationsInput
  has_audio: BoolFieldUpdateOperationsInput
  length_video: NullableIntFieldUpdateOperationsInput
  length_audio: NullableIntFieldUpdateOperationsInput
  word_count_text: NullableIntFieldUpdateOperationsInput
  score: NullableFloatFieldUpdateOperationsInput
  lastScoredAt: DateTimeFieldUpdateOperationsInput
  enclosure: JSON
  data_json_map: JSON
  articleRef: ArticleRefUpdateManyWithoutArticleInput
}

input StringFieldUpdateOperationsInput {
  set: String
}

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableIntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input NullableFloatFieldUpdateOperationsInput {
  set: Float
  increment: Float
  decrement: Float
  multiply: Float
  divide: Float
}

input ArticleRefUpdateManyWithoutArticleInput {
  create: [ArticleRefCreateWithoutArticleInput!]
  connectOrCreate: [ArticleRefCreateOrConnectWithoutArticleInput!]
  upsert: [ArticleRefUpsertWithWhereUniqueWithoutArticleInput!]
  createMany: ArticleRefCreateManyArticleInputEnvelope
  set: [ArticleRefWhereUniqueInput!]
  disconnect: [ArticleRefWhereUniqueInput!]
  delete: [ArticleRefWhereUniqueInput!]
  connect: [ArticleRefWhereUniqueInput!]
  update: [ArticleRefUpdateWithWhereUniqueWithoutArticleInput!]
  updateMany: [ArticleRefUpdateManyWithWhereWithoutArticleInput!]
  deleteMany: [ArticleRefScalarWhereInput!]
}

input ArticleRefUpsertWithWhereUniqueWithoutArticleInput {
  where: ArticleRefWhereUniqueInput!
  update: ArticleRefUpdateWithoutArticleInput!
  create: ArticleRefCreateWithoutArticleInput!
}

input ArticleRefUpdateWithoutArticleInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  date_released: DateTimeFieldUpdateOperationsInput
  favored: BoolFieldUpdateOperationsInput
  has_seen: BoolFieldUpdateOperationsInput
  tags: JSON
  data: JSON
  type: StringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutArticleRefsInput
  stream: StreamUpdateOneRequiredWithoutArticleRefsInput
}

input UserUpdateOneRequiredWithoutArticleRefsInput {
  create: UserCreateWithoutArticleRefsInput
  connectOrCreate: UserCreateOrConnectWithoutArticleRefsInput
  upsert: UserUpsertWithoutArticleRefsInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutArticleRefsInput
}

input UserUpsertWithoutArticleRefsInput {
  update: UserUpdateWithoutArticleRefsInput!
  create: UserCreateWithoutArticleRefsInput!
}

input UserUpdateWithoutArticleRefsInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  date_format: NullableStringFieldUpdateOperationsInput
  time_format: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  buckets: BucketUpdateManyWithoutOwnerInput
  notebooks: NotebookUpdateManyWithoutOwnerInput
  subscription: SubscriptionUpdateManyWithoutOwnerInput
  feeds: FeedUpdateManyWithoutOwnerInput
  eventHooks: EventHookUpdateManyWithoutOwnerInput
  plugins: PluginUpdateManyWithoutOwnerInput
}

input BucketUpdateManyWithoutOwnerInput {
  create: [BucketCreateWithoutOwnerInput!]
  connectOrCreate: [BucketCreateOrConnectWithoutOwnerInput!]
  upsert: [BucketUpsertWithWhereUniqueWithoutOwnerInput!]
  createMany: BucketCreateManyOwnerInputEnvelope
  set: [BucketWhereUniqueInput!]
  disconnect: [BucketWhereUniqueInput!]
  delete: [BucketWhereUniqueInput!]
  connect: [BucketWhereUniqueInput!]
  update: [BucketUpdateWithWhereUniqueWithoutOwnerInput!]
  updateMany: [BucketUpdateManyWithWhereWithoutOwnerInput!]
  deleteMany: [BucketScalarWhereInput!]
}

input BucketUpsertWithWhereUniqueWithoutOwnerInput {
  where: BucketWhereUniqueInput!
  update: BucketUpdateWithoutOwnerInput!
  create: BucketCreateWithoutOwnerInput!
}

input BucketUpdateWithoutOwnerInput {
  id: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  is_public: BoolFieldUpdateOperationsInput
  tags: JSON
  in_focus: BoolFieldUpdateOperationsInput
  type: IntFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  subscriptions: SubscriptionUpdateManyWithoutBucketInput
  postProcessors: ArticlePostProcessorUpdateManyWithoutBucketsInput
  exporters: ArticleExporterUpdateManyWithoutBucketInput
  stream: StreamUpdateOneRequiredWithoutBucketsInput
}

input IntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input SubscriptionUpdateManyWithoutBucketInput {
  create: [SubscriptionCreateWithoutBucketInput!]
  connectOrCreate: [SubscriptionCreateOrConnectWithoutBucketInput!]
  upsert: [SubscriptionUpsertWithWhereUniqueWithoutBucketInput!]
  createMany: SubscriptionCreateManyBucketInputEnvelope
  set: [SubscriptionWhereUniqueInput!]
  disconnect: [SubscriptionWhereUniqueInput!]
  delete: [SubscriptionWhereUniqueInput!]
  connect: [SubscriptionWhereUniqueInput!]
  update: [SubscriptionUpdateWithWhereUniqueWithoutBucketInput!]
  updateMany: [SubscriptionUpdateManyWithWhereWithoutBucketInput!]
  deleteMany: [SubscriptionScalarWhereInput!]
}

input SubscriptionUpsertWithWhereUniqueWithoutBucketInput {
  where: SubscriptionWhereUniqueInput!
  update: SubscriptionUpdateWithoutBucketInput!
  create: SubscriptionCreateWithoutBucketInput!
}

input SubscriptionUpdateWithoutBucketInput {
  id: StringFieldUpdateOperationsInput
  inactive: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  tags: JSON
  feed: FeedUpdateOneRequiredWithoutSubscriptionsInput
  owner: UserUpdateOneRequiredWithoutSubscriptionInput
}

input FeedUpdateOneRequiredWithoutSubscriptionsInput {
  create: FeedCreateWithoutSubscriptionsInput
  connectOrCreate: FeedCreateOrConnectWithoutSubscriptionsInput
  upsert: FeedUpsertWithoutSubscriptionsInput
  connect: FeedWhereUniqueInput
  update: FeedUpdateWithoutSubscriptionsInput
}

input FeedUpsertWithoutSubscriptionsInput {
  update: FeedUpdateWithoutSubscriptionsInput!
  create: FeedCreateWithoutSubscriptionsInput!
}

input FeedUpdateWithoutSubscriptionsInput {
  id: StringFieldUpdateOperationsInput
  feed_url: StringFieldUpdateOperationsInput
  feed_url_auth_header: NullableStringFieldUpdateOperationsInput
  home_page_url: NullableStringFieldUpdateOperationsInput
  domain: StringFieldUpdateOperationsInput
  op_secret: StringFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  tags: JSON
  author: NullableStringFieldUpdateOperationsInput
  failed_attempt_count: IntFieldUpdateOperationsInput
  is_private: BoolFieldUpdateOperationsInput
  expired: BoolFieldUpdateOperationsInput
  broken: BoolFieldUpdateOperationsInput
  inactive: BoolFieldUpdateOperationsInput
  managed: BoolFieldUpdateOperationsInput
  filter: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  status: StringFieldUpdateOperationsInput
  lastStatusChangeAt: NullableDateTimeFieldUpdateOperationsInput
  harvestIntervalMinutes: NullableIntFieldUpdateOperationsInput
  nextHarvestAt: NullableDateTimeFieldUpdateOperationsInput
  retention_size: NullableIntFieldUpdateOperationsInput
  harvest_site: BoolFieldUpdateOperationsInput
  allowHarvestFailure: BoolFieldUpdateOperationsInput
  harvest_prerender: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutFeedsInput
  managed_by_plugin: PluginUpdateOneWithoutFeedsInput
  stream: StreamUpdateOneRequiredWithoutFeedsInput
}

input UserUpdateOneRequiredWithoutFeedsInput {
  create: UserCreateWithoutFeedsInput
  connectOrCreate: UserCreateOrConnectWithoutFeedsInput
  upsert: UserUpsertWithoutFeedsInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutFeedsInput
}

input UserUpsertWithoutFeedsInput {
  update: UserUpdateWithoutFeedsInput!
  create: UserCreateWithoutFeedsInput!
}

input UserUpdateWithoutFeedsInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  date_format: NullableStringFieldUpdateOperationsInput
  time_format: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  buckets: BucketUpdateManyWithoutOwnerInput
  articleRefs: ArticleRefUpdateManyWithoutOwnerInput
  notebooks: NotebookUpdateManyWithoutOwnerInput
  subscription: SubscriptionUpdateManyWithoutOwnerInput
  eventHooks: EventHookUpdateManyWithoutOwnerInput
  plugins: PluginUpdateManyWithoutOwnerInput
}

input ArticleRefUpdateManyWithoutOwnerInput {
  create: [ArticleRefCreateWithoutOwnerInput!]
  connectOrCreate: [ArticleRefCreateOrConnectWithoutOwnerInput!]
  upsert: [ArticleRefUpsertWithWhereUniqueWithoutOwnerInput!]
  createMany: ArticleRefCreateManyOwnerInputEnvelope
  set: [ArticleRefWhereUniqueInput!]
  disconnect: [ArticleRefWhereUniqueInput!]
  delete: [ArticleRefWhereUniqueInput!]
  connect: [ArticleRefWhereUniqueInput!]
  update: [ArticleRefUpdateWithWhereUniqueWithoutOwnerInput!]
  updateMany: [ArticleRefUpdateManyWithWhereWithoutOwnerInput!]
  deleteMany: [ArticleRefScalarWhereInput!]
}

input ArticleRefUpsertWithWhereUniqueWithoutOwnerInput {
  where: ArticleRefWhereUniqueInput!
  update: ArticleRefUpdateWithoutOwnerInput!
  create: ArticleRefCreateWithoutOwnerInput!
}

input ArticleRefUpdateWithoutOwnerInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  date_released: DateTimeFieldUpdateOperationsInput
  favored: BoolFieldUpdateOperationsInput
  has_seen: BoolFieldUpdateOperationsInput
  tags: JSON
  data: JSON
  type: StringFieldUpdateOperationsInput
  article: ArticleUpdateOneRequiredWithoutArticleRefInput
  stream: StreamUpdateOneRequiredWithoutArticleRefsInput
}

input ArticleUpdateOneRequiredWithoutArticleRefInput {
  create: ArticleCreateWithoutArticleRefInput
  connectOrCreate: ArticleCreateOrConnectWithoutArticleRefInput
  upsert: ArticleUpsertWithoutArticleRefInput
  connect: ArticleWhereUniqueInput
  update: ArticleUpdateWithoutArticleRefInput
}

input ArticleUpsertWithoutArticleRefInput {
  update: ArticleUpdateWithoutArticleRefInput!
  create: ArticleCreateWithoutArticleRefInput!
}

input ArticleUpdateWithoutArticleRefInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  released: BoolFieldUpdateOperationsInput
  date_published: DateTimeFieldUpdateOperationsInput
  date_modified: NullableDateTimeFieldUpdateOperationsInput
  comment_feed_url: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  author: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  tags: JSON
  content_raw_mime: NullableStringFieldUpdateOperationsInput
  content_raw: NullableStringFieldUpdateOperationsInput
  content_text: NullableStringFieldUpdateOperationsInput
  main_image_url: NullableStringFieldUpdateOperationsInput
  source_used: NullableStringFieldUpdateOperationsInput
  has_harvest: NullableBoolFieldUpdateOperationsInput
  has_readability: NullableBoolFieldUpdateOperationsInput
  has_video: BoolFieldUpdateOperationsInput
  has_audio: BoolFieldUpdateOperationsInput
  length_video: NullableIntFieldUpdateOperationsInput
  length_audio: NullableIntFieldUpdateOperationsInput
  word_count_text: NullableIntFieldUpdateOperationsInput
  score: NullableFloatFieldUpdateOperationsInput
  lastScoredAt: DateTimeFieldUpdateOperationsInput
  enclosure: JSON
  data_json_map: JSON
}

input StreamUpdateOneRequiredWithoutArticleRefsInput {
  create: StreamCreateWithoutArticleRefsInput
  connectOrCreate: StreamCreateOrConnectWithoutArticleRefsInput
  upsert: StreamUpsertWithoutArticleRefsInput
  connect: StreamWhereUniqueInput
  update: StreamUpdateWithoutArticleRefsInput
}

input StreamUpsertWithoutArticleRefsInput {
  update: StreamUpdateWithoutArticleRefsInput!
  create: StreamCreateWithoutArticleRefsInput!
}

input StreamUpdateWithoutArticleRefsInput {
  id: StringFieldUpdateOperationsInput
  feeds: FeedUpdateManyWithoutStreamInput
  buckets: BucketUpdateManyWithoutStreamInput
  notebooks: NotebookUpdateManyWithoutStreamInput
}

input FeedUpdateManyWithoutStreamInput {
  create: [FeedCreateWithoutStreamInput!]
  connectOrCreate: [FeedCreateOrConnectWithoutStreamInput!]
  upsert: [FeedUpsertWithWhereUniqueWithoutStreamInput!]
  createMany: FeedCreateManyStreamInputEnvelope
  set: [FeedWhereUniqueInput!]
  disconnect: [FeedWhereUniqueInput!]
  delete: [FeedWhereUniqueInput!]
  connect: [FeedWhereUniqueInput!]
  update: [FeedUpdateWithWhereUniqueWithoutStreamInput!]
  updateMany: [FeedUpdateManyWithWhereWithoutStreamInput!]
  deleteMany: [FeedScalarWhereInput!]
}

input FeedUpsertWithWhereUniqueWithoutStreamInput {
  where: FeedWhereUniqueInput!
  update: FeedUpdateWithoutStreamInput!
  create: FeedCreateWithoutStreamInput!
}

input FeedUpdateWithoutStreamInput {
  id: StringFieldUpdateOperationsInput
  feed_url: StringFieldUpdateOperationsInput
  feed_url_auth_header: NullableStringFieldUpdateOperationsInput
  home_page_url: NullableStringFieldUpdateOperationsInput
  domain: StringFieldUpdateOperationsInput
  op_secret: StringFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  tags: JSON
  author: NullableStringFieldUpdateOperationsInput
  failed_attempt_count: IntFieldUpdateOperationsInput
  is_private: BoolFieldUpdateOperationsInput
  expired: BoolFieldUpdateOperationsInput
  broken: BoolFieldUpdateOperationsInput
  inactive: BoolFieldUpdateOperationsInput
  managed: BoolFieldUpdateOperationsInput
  filter: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  status: StringFieldUpdateOperationsInput
  lastStatusChangeAt: NullableDateTimeFieldUpdateOperationsInput
  harvestIntervalMinutes: NullableIntFieldUpdateOperationsInput
  nextHarvestAt: NullableDateTimeFieldUpdateOperationsInput
  retention_size: NullableIntFieldUpdateOperationsInput
  harvest_site: BoolFieldUpdateOperationsInput
  allowHarvestFailure: BoolFieldUpdateOperationsInput
  harvest_prerender: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutFeedsInput
  managed_by_plugin: PluginUpdateOneWithoutFeedsInput
  subscriptions: SubscriptionUpdateManyWithoutFeedInput
}

input PluginUpdateOneWithoutFeedsInput {
  create: PluginCreateWithoutFeedsInput
  connectOrCreate: PluginCreateOrConnectWithoutFeedsInput
  upsert: PluginUpsertWithoutFeedsInput
  disconnect: Boolean
  delete: Boolean
  connect: PluginWhereUniqueInput
  update: PluginUpdateWithoutFeedsInput
}

input PluginUpsertWithoutFeedsInput {
  update: PluginUpdateWithoutFeedsInput!
  create: PluginCreateWithoutFeedsInput!
}

input PluginUpdateWithoutFeedsInput {
  id: StringFieldUpdateOperationsInput
  source_url: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  user_params: JSON
  source: JSON
  source_sha1: NullableStringFieldUpdateOperationsInput
  lastUpdatedAt: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutPluginsInput
}

input UserUpdateOneRequiredWithoutPluginsInput {
  create: UserCreateWithoutPluginsInput
  connectOrCreate: UserCreateOrConnectWithoutPluginsInput
  upsert: UserUpsertWithoutPluginsInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutPluginsInput
}

input UserUpsertWithoutPluginsInput {
  update: UserUpdateWithoutPluginsInput!
  create: UserCreateWithoutPluginsInput!
}

input UserUpdateWithoutPluginsInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  date_format: NullableStringFieldUpdateOperationsInput
  time_format: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  buckets: BucketUpdateManyWithoutOwnerInput
  articleRefs: ArticleRefUpdateManyWithoutOwnerInput
  notebooks: NotebookUpdateManyWithoutOwnerInput
  subscription: SubscriptionUpdateManyWithoutOwnerInput
  feeds: FeedUpdateManyWithoutOwnerInput
  eventHooks: EventHookUpdateManyWithoutOwnerInput
}

input NotebookUpdateManyWithoutOwnerInput {
  create: [NotebookCreateWithoutOwnerInput!]
  connectOrCreate: [NotebookCreateOrConnectWithoutOwnerInput!]
  upsert: [NotebookUpsertWithWhereUniqueWithoutOwnerInput!]
  createMany: NotebookCreateManyOwnerInputEnvelope
  set: [NotebookWhereUniqueInput!]
  disconnect: [NotebookWhereUniqueInput!]
  delete: [NotebookWhereUniqueInput!]
  connect: [NotebookWhereUniqueInput!]
  update: [NotebookUpdateWithWhereUniqueWithoutOwnerInput!]
  updateMany: [NotebookUpdateManyWithWhereWithoutOwnerInput!]
  deleteMany: [NotebookScalarWhereInput!]
}

input NotebookUpsertWithWhereUniqueWithoutOwnerInput {
  where: NotebookWhereUniqueInput!
  update: NotebookUpdateWithoutOwnerInput!
  create: NotebookCreateWithoutOwnerInput!
}

input NotebookUpdateWithoutOwnerInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  readonly: BoolFieldUpdateOperationsInput
  listed: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  stream: StreamUpdateOneRequiredWithoutNotebooksInput
}

input StreamUpdateOneRequiredWithoutNotebooksInput {
  create: StreamCreateWithoutNotebooksInput
  connectOrCreate: StreamCreateOrConnectWithoutNotebooksInput
  upsert: StreamUpsertWithoutNotebooksInput
  connect: StreamWhereUniqueInput
  update: StreamUpdateWithoutNotebooksInput
}

input StreamUpsertWithoutNotebooksInput {
  update: StreamUpdateWithoutNotebooksInput!
  create: StreamCreateWithoutNotebooksInput!
}

input StreamUpdateWithoutNotebooksInput {
  id: StringFieldUpdateOperationsInput
  articleRefs: ArticleRefUpdateManyWithoutStreamInput
  feeds: FeedUpdateManyWithoutStreamInput
  buckets: BucketUpdateManyWithoutStreamInput
}

input ArticleRefUpdateManyWithoutStreamInput {
  create: [ArticleRefCreateWithoutStreamInput!]
  connectOrCreate: [ArticleRefCreateOrConnectWithoutStreamInput!]
  upsert: [ArticleRefUpsertWithWhereUniqueWithoutStreamInput!]
  createMany: ArticleRefCreateManyStreamInputEnvelope
  set: [ArticleRefWhereUniqueInput!]
  disconnect: [ArticleRefWhereUniqueInput!]
  delete: [ArticleRefWhereUniqueInput!]
  connect: [ArticleRefWhereUniqueInput!]
  update: [ArticleRefUpdateWithWhereUniqueWithoutStreamInput!]
  updateMany: [ArticleRefUpdateManyWithWhereWithoutStreamInput!]
  deleteMany: [ArticleRefScalarWhereInput!]
}

input ArticleRefUpsertWithWhereUniqueWithoutStreamInput {
  where: ArticleRefWhereUniqueInput!
  update: ArticleRefUpdateWithoutStreamInput!
  create: ArticleRefCreateWithoutStreamInput!
}

input ArticleRefUpdateWithoutStreamInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  date_released: DateTimeFieldUpdateOperationsInput
  favored: BoolFieldUpdateOperationsInput
  has_seen: BoolFieldUpdateOperationsInput
  tags: JSON
  data: JSON
  type: StringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutArticleRefsInput
  article: ArticleUpdateOneRequiredWithoutArticleRefInput
}

input ArticleRefUpdateWithWhereUniqueWithoutStreamInput {
  where: ArticleRefWhereUniqueInput!
  data: ArticleRefUpdateWithoutStreamInput!
}

input ArticleRefUpdateManyWithWhereWithoutStreamInput {
  where: ArticleRefScalarWhereInput!
  data: ArticleRefUpdateManyMutationInput!
}

input ArticleRefScalarWhereInput {
  AND: [ArticleRefScalarWhereInput!]
  OR: [ArticleRefScalarWhereInput!]
  NOT: [ArticleRefScalarWhereInput!]
  id: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  date_released: DateTimeFilter
  ownerId: StringFilter
  favored: BoolFilter
  has_seen: BoolFilter
  tags: JsonNullableFilter
  data: JsonNullableFilter
  articleId: StringFilter
  type: StringFilter
  streamId: StringFilter
}

input ArticleRefUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  date_released: DateTimeFieldUpdateOperationsInput
  favored: BoolFieldUpdateOperationsInput
  has_seen: BoolFieldUpdateOperationsInput
  tags: JSON
  data: JSON
  type: StringFieldUpdateOperationsInput
}

input BucketUpdateManyWithoutStreamInput {
  create: [BucketCreateWithoutStreamInput!]
  connectOrCreate: [BucketCreateOrConnectWithoutStreamInput!]
  upsert: [BucketUpsertWithWhereUniqueWithoutStreamInput!]
  createMany: BucketCreateManyStreamInputEnvelope
  set: [BucketWhereUniqueInput!]
  disconnect: [BucketWhereUniqueInput!]
  delete: [BucketWhereUniqueInput!]
  connect: [BucketWhereUniqueInput!]
  update: [BucketUpdateWithWhereUniqueWithoutStreamInput!]
  updateMany: [BucketUpdateManyWithWhereWithoutStreamInput!]
  deleteMany: [BucketScalarWhereInput!]
}

input BucketUpsertWithWhereUniqueWithoutStreamInput {
  where: BucketWhereUniqueInput!
  update: BucketUpdateWithoutStreamInput!
  create: BucketCreateWithoutStreamInput!
}

input BucketUpdateWithoutStreamInput {
  id: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  is_public: BoolFieldUpdateOperationsInput
  tags: JSON
  in_focus: BoolFieldUpdateOperationsInput
  type: IntFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutBucketsInput
  subscriptions: SubscriptionUpdateManyWithoutBucketInput
  postProcessors: ArticlePostProcessorUpdateManyWithoutBucketsInput
  exporters: ArticleExporterUpdateManyWithoutBucketInput
}

input UserUpdateOneRequiredWithoutBucketsInput {
  create: UserCreateWithoutBucketsInput
  connectOrCreate: UserCreateOrConnectWithoutBucketsInput
  upsert: UserUpsertWithoutBucketsInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutBucketsInput
}

input UserUpsertWithoutBucketsInput {
  update: UserUpdateWithoutBucketsInput!
  create: UserCreateWithoutBucketsInput!
}

input UserUpdateWithoutBucketsInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  date_format: NullableStringFieldUpdateOperationsInput
  time_format: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  articleRefs: ArticleRefUpdateManyWithoutOwnerInput
  notebooks: NotebookUpdateManyWithoutOwnerInput
  subscription: SubscriptionUpdateManyWithoutOwnerInput
  feeds: FeedUpdateManyWithoutOwnerInput
  eventHooks: EventHookUpdateManyWithoutOwnerInput
  plugins: PluginUpdateManyWithoutOwnerInput
}

input SubscriptionUpdateManyWithoutOwnerInput {
  create: [SubscriptionCreateWithoutOwnerInput!]
  connectOrCreate: [SubscriptionCreateOrConnectWithoutOwnerInput!]
  upsert: [SubscriptionUpsertWithWhereUniqueWithoutOwnerInput!]
  createMany: SubscriptionCreateManyOwnerInputEnvelope
  set: [SubscriptionWhereUniqueInput!]
  disconnect: [SubscriptionWhereUniqueInput!]
  delete: [SubscriptionWhereUniqueInput!]
  connect: [SubscriptionWhereUniqueInput!]
  update: [SubscriptionUpdateWithWhereUniqueWithoutOwnerInput!]
  updateMany: [SubscriptionUpdateManyWithWhereWithoutOwnerInput!]
  deleteMany: [SubscriptionScalarWhereInput!]
}

input SubscriptionUpsertWithWhereUniqueWithoutOwnerInput {
  where: SubscriptionWhereUniqueInput!
  update: SubscriptionUpdateWithoutOwnerInput!
  create: SubscriptionCreateWithoutOwnerInput!
}

input SubscriptionUpdateWithoutOwnerInput {
  id: StringFieldUpdateOperationsInput
  inactive: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  tags: JSON
  feed: FeedUpdateOneRequiredWithoutSubscriptionsInput
  bucket: BucketUpdateOneRequiredWithoutSubscriptionsInput
}

input BucketUpdateOneRequiredWithoutSubscriptionsInput {
  create: BucketCreateWithoutSubscriptionsInput
  connectOrCreate: BucketCreateOrConnectWithoutSubscriptionsInput
  upsert: BucketUpsertWithoutSubscriptionsInput
  connect: BucketWhereUniqueInput
  update: BucketUpdateWithoutSubscriptionsInput
}

input BucketUpsertWithoutSubscriptionsInput {
  update: BucketUpdateWithoutSubscriptionsInput!
  create: BucketCreateWithoutSubscriptionsInput!
}

input BucketUpdateWithoutSubscriptionsInput {
  id: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  is_public: BoolFieldUpdateOperationsInput
  tags: JSON
  in_focus: BoolFieldUpdateOperationsInput
  type: IntFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutBucketsInput
  postProcessors: ArticlePostProcessorUpdateManyWithoutBucketsInput
  exporters: ArticleExporterUpdateManyWithoutBucketInput
  stream: StreamUpdateOneRequiredWithoutBucketsInput
}

input ArticlePostProcessorUpdateManyWithoutBucketsInput {
  create: [ArticlePostProcessorCreateWithoutBucketsInput!]
  connectOrCreate: [ArticlePostProcessorCreateOrConnectWithoutBucketsInput!]
  upsert: [ArticlePostProcessorUpsertWithWhereUniqueWithoutBucketsInput!]
  set: [ArticlePostProcessorWhereUniqueInput!]
  disconnect: [ArticlePostProcessorWhereUniqueInput!]
  delete: [ArticlePostProcessorWhereUniqueInput!]
  connect: [ArticlePostProcessorWhereUniqueInput!]
  update: [ArticlePostProcessorUpdateWithWhereUniqueWithoutBucketsInput!]
  updateMany: [ArticlePostProcessorUpdateManyWithWhereWithoutBucketsInput!]
  deleteMany: [ArticlePostProcessorScalarWhereInput!]
}

input ArticlePostProcessorUpsertWithWhereUniqueWithoutBucketsInput {
  where: ArticlePostProcessorWhereUniqueInput!
  update: ArticlePostProcessorUpdateWithoutBucketsInput!
  create: ArticlePostProcessorCreateWithoutBucketsInput!
}

input ArticlePostProcessorUpdateWithoutBucketsInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  context: NullableStringFieldUpdateOperationsInput
}

input ArticlePostProcessorUpdateWithWhereUniqueWithoutBucketsInput {
  where: ArticlePostProcessorWhereUniqueInput!
  data: ArticlePostProcessorUpdateWithoutBucketsInput!
}

input ArticlePostProcessorUpdateManyWithWhereWithoutBucketsInput {
  where: ArticlePostProcessorScalarWhereInput!
  data: ArticlePostProcessorUpdateManyMutationInput!
}

input ArticlePostProcessorScalarWhereInput {
  AND: [ArticlePostProcessorScalarWhereInput!]
  OR: [ArticlePostProcessorScalarWhereInput!]
  NOT: [ArticlePostProcessorScalarWhereInput!]
  id: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  type: StringFilter
  context: StringNullableFilter
}

input ArticlePostProcessorUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  context: NullableStringFieldUpdateOperationsInput
}

input ArticleExporterUpdateManyWithoutBucketInput {
  create: [ArticleExporterCreateWithoutBucketInput!]
  connectOrCreate: [ArticleExporterCreateOrConnectWithoutBucketInput!]
  upsert: [ArticleExporterUpsertWithWhereUniqueWithoutBucketInput!]
  createMany: ArticleExporterCreateManyBucketInputEnvelope
  set: [ArticleExporterWhereUniqueInput!]
  disconnect: [ArticleExporterWhereUniqueInput!]
  delete: [ArticleExporterWhereUniqueInput!]
  connect: [ArticleExporterWhereUniqueInput!]
  update: [ArticleExporterUpdateWithWhereUniqueWithoutBucketInput!]
  updateMany: [ArticleExporterUpdateManyWithWhereWithoutBucketInput!]
  deleteMany: [ArticleExporterScalarWhereInput!]
}

input ArticleExporterUpsertWithWhereUniqueWithoutBucketInput {
  where: ArticleExporterWhereUniqueInput!
  update: ArticleExporterUpdateWithoutBucketInput!
  create: ArticleExporterCreateWithoutBucketInput!
}

input ArticleExporterUpdateWithoutBucketInput {
  id: StringFieldUpdateOperationsInput
  segment: BoolFieldUpdateOperationsInput
  segment_sort_field: NullableStringFieldUpdateOperationsInput
  segment_sort_asc: BoolFieldUpdateOperationsInput
  segment_size: NullableIntFieldUpdateOperationsInput
  segment_digest: BoolFieldUpdateOperationsInput
  segment_look_ahead_min: NullableIntFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  trigger_refresh_on: StringFieldUpdateOperationsInput
  trigger_scheduled_last_at: NullableDateTimeFieldUpdateOperationsInput
  trigger_scheduled_next_at: NullableDateTimeFieldUpdateOperationsInput
  trigger_scheduled: NullableStringFieldUpdateOperationsInput
  targets: ArticleExporterTargetUpdateManyWithoutExporterInput
}

input ArticleExporterTargetUpdateManyWithoutExporterInput {
  create: [ArticleExporterTargetCreateWithoutExporterInput!]
  connectOrCreate: [ArticleExporterTargetCreateOrConnectWithoutExporterInput!]
  upsert: [ArticleExporterTargetUpsertWithWhereUniqueWithoutExporterInput!]
  createMany: ArticleExporterTargetCreateManyExporterInputEnvelope
  set: [ArticleExporterTargetWhereUniqueInput!]
  disconnect: [ArticleExporterTargetWhereUniqueInput!]
  delete: [ArticleExporterTargetWhereUniqueInput!]
  connect: [ArticleExporterTargetWhereUniqueInput!]
  update: [ArticleExporterTargetUpdateWithWhereUniqueWithoutExporterInput!]
  updateMany: [ArticleExporterTargetUpdateManyWithWhereWithoutExporterInput!]
  deleteMany: [ArticleExporterTargetScalarWhereInput!]
}

input ArticleExporterTargetUpsertWithWhereUniqueWithoutExporterInput {
  where: ArticleExporterTargetWhereUniqueInput!
  update: ArticleExporterTargetUpdateWithoutExporterInput!
  create: ArticleExporterTargetCreateWithoutExporterInput!
}

input ArticleExporterTargetUpdateWithoutExporterInput {
  id: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  context: NullableStringFieldUpdateOperationsInput
}

input ArticleExporterTargetUpdateWithWhereUniqueWithoutExporterInput {
  where: ArticleExporterTargetWhereUniqueInput!
  data: ArticleExporterTargetUpdateWithoutExporterInput!
}

input ArticleExporterTargetUpdateManyWithWhereWithoutExporterInput {
  where: ArticleExporterTargetScalarWhereInput!
  data: ArticleExporterTargetUpdateManyMutationInput!
}

input ArticleExporterTargetScalarWhereInput {
  AND: [ArticleExporterTargetScalarWhereInput!]
  OR: [ArticleExporterTargetScalarWhereInput!]
  NOT: [ArticleExporterTargetScalarWhereInput!]
  id: StringFilter
  type: StringFilter
  context: StringNullableFilter
  exporterId: StringFilter
}

input ArticleExporterTargetUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  context: NullableStringFieldUpdateOperationsInput
}

input ArticleExporterUpdateWithWhereUniqueWithoutBucketInput {
  where: ArticleExporterWhereUniqueInput!
  data: ArticleExporterUpdateWithoutBucketInput!
}

input ArticleExporterUpdateManyWithWhereWithoutBucketInput {
  where: ArticleExporterScalarWhereInput!
  data: ArticleExporterUpdateManyMutationInput!
}

input ArticleExporterScalarWhereInput {
  AND: [ArticleExporterScalarWhereInput!]
  OR: [ArticleExporterScalarWhereInput!]
  NOT: [ArticleExporterScalarWhereInput!]
  id: StringFilter
  segment: BoolFilter
  segment_sort_field: StringNullableFilter
  segment_sort_asc: BoolFilter
  segment_size: IntNullableFilter
  segment_digest: BoolFilter
  segment_look_ahead_min: IntNullableFilter
  lastUpdatedAt: DateTimeNullableFilter
  trigger_refresh_on: StringFilter
  trigger_scheduled_last_at: DateTimeNullableFilter
  trigger_scheduled_next_at: DateTimeNullableFilter
  trigger_scheduled: StringNullableFilter
  bucketId: StringFilter
}

input ArticleExporterUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  segment: BoolFieldUpdateOperationsInput
  segment_sort_field: NullableStringFieldUpdateOperationsInput
  segment_sort_asc: BoolFieldUpdateOperationsInput
  segment_size: NullableIntFieldUpdateOperationsInput
  segment_digest: BoolFieldUpdateOperationsInput
  segment_look_ahead_min: NullableIntFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  trigger_refresh_on: StringFieldUpdateOperationsInput
  trigger_scheduled_last_at: NullableDateTimeFieldUpdateOperationsInput
  trigger_scheduled_next_at: NullableDateTimeFieldUpdateOperationsInput
  trigger_scheduled: NullableStringFieldUpdateOperationsInput
}

input StreamUpdateOneRequiredWithoutBucketsInput {
  create: StreamCreateWithoutBucketsInput
  connectOrCreate: StreamCreateOrConnectWithoutBucketsInput
  upsert: StreamUpsertWithoutBucketsInput
  connect: StreamWhereUniqueInput
  update: StreamUpdateWithoutBucketsInput
}

input StreamUpsertWithoutBucketsInput {
  update: StreamUpdateWithoutBucketsInput!
  create: StreamCreateWithoutBucketsInput!
}

input StreamUpdateWithoutBucketsInput {
  id: StringFieldUpdateOperationsInput
  articleRefs: ArticleRefUpdateManyWithoutStreamInput
  feeds: FeedUpdateManyWithoutStreamInput
  notebooks: NotebookUpdateManyWithoutStreamInput
}

input NotebookUpdateManyWithoutStreamInput {
  create: [NotebookCreateWithoutStreamInput!]
  connectOrCreate: [NotebookCreateOrConnectWithoutStreamInput!]
  upsert: [NotebookUpsertWithWhereUniqueWithoutStreamInput!]
  createMany: NotebookCreateManyStreamInputEnvelope
  set: [NotebookWhereUniqueInput!]
  disconnect: [NotebookWhereUniqueInput!]
  delete: [NotebookWhereUniqueInput!]
  connect: [NotebookWhereUniqueInput!]
  update: [NotebookUpdateWithWhereUniqueWithoutStreamInput!]
  updateMany: [NotebookUpdateManyWithWhereWithoutStreamInput!]
  deleteMany: [NotebookScalarWhereInput!]
}

input NotebookUpsertWithWhereUniqueWithoutStreamInput {
  where: NotebookWhereUniqueInput!
  update: NotebookUpdateWithoutStreamInput!
  create: NotebookCreateWithoutStreamInput!
}

input NotebookUpdateWithoutStreamInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  readonly: BoolFieldUpdateOperationsInput
  listed: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutNotebooksInput
}

input UserUpdateOneRequiredWithoutNotebooksInput {
  create: UserCreateWithoutNotebooksInput
  connectOrCreate: UserCreateOrConnectWithoutNotebooksInput
  upsert: UserUpsertWithoutNotebooksInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutNotebooksInput
}

input UserUpsertWithoutNotebooksInput {
  update: UserUpdateWithoutNotebooksInput!
  create: UserCreateWithoutNotebooksInput!
}

input UserUpdateWithoutNotebooksInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  date_format: NullableStringFieldUpdateOperationsInput
  time_format: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  buckets: BucketUpdateManyWithoutOwnerInput
  articleRefs: ArticleRefUpdateManyWithoutOwnerInput
  subscription: SubscriptionUpdateManyWithoutOwnerInput
  feeds: FeedUpdateManyWithoutOwnerInput
  eventHooks: EventHookUpdateManyWithoutOwnerInput
  plugins: PluginUpdateManyWithoutOwnerInput
}

input FeedUpdateManyWithoutOwnerInput {
  create: [FeedCreateWithoutOwnerInput!]
  connectOrCreate: [FeedCreateOrConnectWithoutOwnerInput!]
  upsert: [FeedUpsertWithWhereUniqueWithoutOwnerInput!]
  createMany: FeedCreateManyOwnerInputEnvelope
  set: [FeedWhereUniqueInput!]
  disconnect: [FeedWhereUniqueInput!]
  delete: [FeedWhereUniqueInput!]
  connect: [FeedWhereUniqueInput!]
  update: [FeedUpdateWithWhereUniqueWithoutOwnerInput!]
  updateMany: [FeedUpdateManyWithWhereWithoutOwnerInput!]
  deleteMany: [FeedScalarWhereInput!]
}

input FeedUpsertWithWhereUniqueWithoutOwnerInput {
  where: FeedWhereUniqueInput!
  update: FeedUpdateWithoutOwnerInput!
  create: FeedCreateWithoutOwnerInput!
}

input FeedUpdateWithoutOwnerInput {
  id: StringFieldUpdateOperationsInput
  feed_url: StringFieldUpdateOperationsInput
  feed_url_auth_header: NullableStringFieldUpdateOperationsInput
  home_page_url: NullableStringFieldUpdateOperationsInput
  domain: StringFieldUpdateOperationsInput
  op_secret: StringFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  tags: JSON
  author: NullableStringFieldUpdateOperationsInput
  failed_attempt_count: IntFieldUpdateOperationsInput
  is_private: BoolFieldUpdateOperationsInput
  expired: BoolFieldUpdateOperationsInput
  broken: BoolFieldUpdateOperationsInput
  inactive: BoolFieldUpdateOperationsInput
  managed: BoolFieldUpdateOperationsInput
  filter: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  status: StringFieldUpdateOperationsInput
  lastStatusChangeAt: NullableDateTimeFieldUpdateOperationsInput
  harvestIntervalMinutes: NullableIntFieldUpdateOperationsInput
  nextHarvestAt: NullableDateTimeFieldUpdateOperationsInput
  retention_size: NullableIntFieldUpdateOperationsInput
  harvest_site: BoolFieldUpdateOperationsInput
  allowHarvestFailure: BoolFieldUpdateOperationsInput
  harvest_prerender: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  managed_by_plugin: PluginUpdateOneWithoutFeedsInput
  stream: StreamUpdateOneRequiredWithoutFeedsInput
  subscriptions: SubscriptionUpdateManyWithoutFeedInput
}

input StreamUpdateOneRequiredWithoutFeedsInput {
  create: StreamCreateWithoutFeedsInput
  connectOrCreate: StreamCreateOrConnectWithoutFeedsInput
  upsert: StreamUpsertWithoutFeedsInput
  connect: StreamWhereUniqueInput
  update: StreamUpdateWithoutFeedsInput
}

input StreamUpsertWithoutFeedsInput {
  update: StreamUpdateWithoutFeedsInput!
  create: StreamCreateWithoutFeedsInput!
}

input StreamUpdateWithoutFeedsInput {
  id: StringFieldUpdateOperationsInput
  articleRefs: ArticleRefUpdateManyWithoutStreamInput
  buckets: BucketUpdateManyWithoutStreamInput
  notebooks: NotebookUpdateManyWithoutStreamInput
}

input SubscriptionUpdateManyWithoutFeedInput {
  create: [SubscriptionCreateWithoutFeedInput!]
  connectOrCreate: [SubscriptionCreateOrConnectWithoutFeedInput!]
  upsert: [SubscriptionUpsertWithWhereUniqueWithoutFeedInput!]
  createMany: SubscriptionCreateManyFeedInputEnvelope
  set: [SubscriptionWhereUniqueInput!]
  disconnect: [SubscriptionWhereUniqueInput!]
  delete: [SubscriptionWhereUniqueInput!]
  connect: [SubscriptionWhereUniqueInput!]
  update: [SubscriptionUpdateWithWhereUniqueWithoutFeedInput!]
  updateMany: [SubscriptionUpdateManyWithWhereWithoutFeedInput!]
  deleteMany: [SubscriptionScalarWhereInput!]
}

input SubscriptionUpsertWithWhereUniqueWithoutFeedInput {
  where: SubscriptionWhereUniqueInput!
  update: SubscriptionUpdateWithoutFeedInput!
  create: SubscriptionCreateWithoutFeedInput!
}

input SubscriptionUpdateWithoutFeedInput {
  id: StringFieldUpdateOperationsInput
  inactive: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  tags: JSON
  owner: UserUpdateOneRequiredWithoutSubscriptionInput
  bucket: BucketUpdateOneRequiredWithoutSubscriptionsInput
}

input UserUpdateOneRequiredWithoutSubscriptionInput {
  create: UserCreateWithoutSubscriptionInput
  connectOrCreate: UserCreateOrConnectWithoutSubscriptionInput
  upsert: UserUpsertWithoutSubscriptionInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutSubscriptionInput
}

input UserUpsertWithoutSubscriptionInput {
  update: UserUpdateWithoutSubscriptionInput!
  create: UserCreateWithoutSubscriptionInput!
}

input UserUpdateWithoutSubscriptionInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  date_format: NullableStringFieldUpdateOperationsInput
  time_format: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  buckets: BucketUpdateManyWithoutOwnerInput
  articleRefs: ArticleRefUpdateManyWithoutOwnerInput
  notebooks: NotebookUpdateManyWithoutOwnerInput
  feeds: FeedUpdateManyWithoutOwnerInput
  eventHooks: EventHookUpdateManyWithoutOwnerInput
  plugins: PluginUpdateManyWithoutOwnerInput
}

input EventHookUpdateManyWithoutOwnerInput {
  create: [EventHookCreateWithoutOwnerInput!]
  connectOrCreate: [EventHookCreateOrConnectWithoutOwnerInput!]
  upsert: [EventHookUpsertWithWhereUniqueWithoutOwnerInput!]
  createMany: EventHookCreateManyOwnerInputEnvelope
  set: [EventHookWhereUniqueInput!]
  disconnect: [EventHookWhereUniqueInput!]
  delete: [EventHookWhereUniqueInput!]
  connect: [EventHookWhereUniqueInput!]
  update: [EventHookUpdateWithWhereUniqueWithoutOwnerInput!]
  updateMany: [EventHookUpdateManyWithWhereWithoutOwnerInput!]
  deleteMany: [EventHookScalarWhereInput!]
}

input EventHookUpsertWithWhereUniqueWithoutOwnerInput {
  where: EventHookWhereUniqueInput!
  update: EventHookUpdateWithoutOwnerInput!
  create: EventHookCreateWithoutOwnerInput!
}

input EventHookUpdateWithoutOwnerInput {
  id: StringFieldUpdateOperationsInput
  event: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  script_or_url: StringFieldUpdateOperationsInput
  script_source_url: NullableStringFieldUpdateOperationsInput
}

input EventHookUpdateWithWhereUniqueWithoutOwnerInput {
  where: EventHookWhereUniqueInput!
  data: EventHookUpdateWithoutOwnerInput!
}

input EventHookUpdateManyWithWhereWithoutOwnerInput {
  where: EventHookScalarWhereInput!
  data: EventHookUpdateManyMutationInput!
}

input EventHookScalarWhereInput {
  AND: [EventHookScalarWhereInput!]
  OR: [EventHookScalarWhereInput!]
  NOT: [EventHookScalarWhereInput!]
  id: StringFilter
  ownerId: StringFilter
  event: StringFilter
  type: StringFilter
  script_or_url: StringFilter
  script_source_url: StringNullableFilter
}

input EventHookUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  event: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  script_or_url: StringFieldUpdateOperationsInput
  script_source_url: NullableStringFieldUpdateOperationsInput
}

input PluginUpdateManyWithoutOwnerInput {
  create: [PluginCreateWithoutOwnerInput!]
  connectOrCreate: [PluginCreateOrConnectWithoutOwnerInput!]
  upsert: [PluginUpsertWithWhereUniqueWithoutOwnerInput!]
  createMany: PluginCreateManyOwnerInputEnvelope
  set: [PluginWhereUniqueInput!]
  disconnect: [PluginWhereUniqueInput!]
  delete: [PluginWhereUniqueInput!]
  connect: [PluginWhereUniqueInput!]
  update: [PluginUpdateWithWhereUniqueWithoutOwnerInput!]
  updateMany: [PluginUpdateManyWithWhereWithoutOwnerInput!]
  deleteMany: [PluginScalarWhereInput!]
}

input PluginUpsertWithWhereUniqueWithoutOwnerInput {
  where: PluginWhereUniqueInput!
  update: PluginUpdateWithoutOwnerInput!
  create: PluginCreateWithoutOwnerInput!
}

input PluginUpdateWithoutOwnerInput {
  id: StringFieldUpdateOperationsInput
  source_url: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  user_params: JSON
  source: JSON
  source_sha1: NullableStringFieldUpdateOperationsInput
  lastUpdatedAt: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  feeds: FeedUpdateManyWithoutManaged_by_pluginInput
}

input FeedUpdateManyWithoutManaged_by_pluginInput {
  create: [FeedCreateWithoutManaged_by_pluginInput!]
  connectOrCreate: [FeedCreateOrConnectWithoutManaged_by_pluginInput!]
  upsert: [FeedUpsertWithWhereUniqueWithoutManaged_by_pluginInput!]
  createMany: FeedCreateManyManaged_by_pluginInputEnvelope
  set: [FeedWhereUniqueInput!]
  disconnect: [FeedWhereUniqueInput!]
  delete: [FeedWhereUniqueInput!]
  connect: [FeedWhereUniqueInput!]
  update: [FeedUpdateWithWhereUniqueWithoutManaged_by_pluginInput!]
  updateMany: [FeedUpdateManyWithWhereWithoutManaged_by_pluginInput!]
  deleteMany: [FeedScalarWhereInput!]
}

input FeedUpsertWithWhereUniqueWithoutManaged_by_pluginInput {
  where: FeedWhereUniqueInput!
  update: FeedUpdateWithoutManaged_by_pluginInput!
  create: FeedCreateWithoutManaged_by_pluginInput!
}

input FeedUpdateWithoutManaged_by_pluginInput {
  id: StringFieldUpdateOperationsInput
  feed_url: StringFieldUpdateOperationsInput
  feed_url_auth_header: NullableStringFieldUpdateOperationsInput
  home_page_url: NullableStringFieldUpdateOperationsInput
  domain: StringFieldUpdateOperationsInput
  op_secret: StringFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  tags: JSON
  author: NullableStringFieldUpdateOperationsInput
  failed_attempt_count: IntFieldUpdateOperationsInput
  is_private: BoolFieldUpdateOperationsInput
  expired: BoolFieldUpdateOperationsInput
  broken: BoolFieldUpdateOperationsInput
  inactive: BoolFieldUpdateOperationsInput
  managed: BoolFieldUpdateOperationsInput
  filter: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  status: StringFieldUpdateOperationsInput
  lastStatusChangeAt: NullableDateTimeFieldUpdateOperationsInput
  harvestIntervalMinutes: NullableIntFieldUpdateOperationsInput
  nextHarvestAt: NullableDateTimeFieldUpdateOperationsInput
  retention_size: NullableIntFieldUpdateOperationsInput
  harvest_site: BoolFieldUpdateOperationsInput
  allowHarvestFailure: BoolFieldUpdateOperationsInput
  harvest_prerender: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutFeedsInput
  stream: StreamUpdateOneRequiredWithoutFeedsInput
  subscriptions: SubscriptionUpdateManyWithoutFeedInput
}

input FeedUpdateWithWhereUniqueWithoutManaged_by_pluginInput {
  where: FeedWhereUniqueInput!
  data: FeedUpdateWithoutManaged_by_pluginInput!
}

input FeedUpdateManyWithWhereWithoutManaged_by_pluginInput {
  where: FeedScalarWhereInput!
  data: FeedUpdateManyMutationInput!
}

input FeedScalarWhereInput {
  AND: [FeedScalarWhereInput!]
  OR: [FeedScalarWhereInput!]
  NOT: [FeedScalarWhereInput!]
  id: StringFilter
  feed_url: StringFilter
  feed_url_auth_header: StringNullableFilter
  home_page_url: StringNullableFilter
  domain: StringFilter
  op_secret: StringFilter
  title: StringNullableFilter
  tags: JsonNullableFilter
  author: StringNullableFilter
  ownerId: StringFilter
  failed_attempt_count: IntFilter
  is_private: BoolFilter
  expired: BoolFilter
  broken: BoolFilter
  inactive: BoolFilter
  managed: BoolFilter
  managed_by_plugin_id: StringNullableFilter
  filter: StringNullableFilter
  description: StringNullableFilter
  status: StringFilter
  lastStatusChangeAt: DateTimeNullableFilter
  harvestIntervalMinutes: IntNullableFilter
  nextHarvestAt: DateTimeNullableFilter
  retention_size: IntNullableFilter
  harvest_site: BoolFilter
  allowHarvestFailure: BoolFilter
  harvest_prerender: BoolFilter
  streamId: StringFilter
  createdAt: DateTimeFilter
  lastUpdatedAt: DateTimeNullableFilter
}

input FeedUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  feed_url: StringFieldUpdateOperationsInput
  feed_url_auth_header: NullableStringFieldUpdateOperationsInput
  home_page_url: NullableStringFieldUpdateOperationsInput
  domain: StringFieldUpdateOperationsInput
  op_secret: StringFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  tags: JSON
  author: NullableStringFieldUpdateOperationsInput
  failed_attempt_count: IntFieldUpdateOperationsInput
  is_private: BoolFieldUpdateOperationsInput
  expired: BoolFieldUpdateOperationsInput
  broken: BoolFieldUpdateOperationsInput
  inactive: BoolFieldUpdateOperationsInput
  managed: BoolFieldUpdateOperationsInput
  filter: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  status: StringFieldUpdateOperationsInput
  lastStatusChangeAt: NullableDateTimeFieldUpdateOperationsInput
  harvestIntervalMinutes: NullableIntFieldUpdateOperationsInput
  nextHarvestAt: NullableDateTimeFieldUpdateOperationsInput
  retention_size: NullableIntFieldUpdateOperationsInput
  harvest_site: BoolFieldUpdateOperationsInput
  allowHarvestFailure: BoolFieldUpdateOperationsInput
  harvest_prerender: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input PluginUpdateWithWhereUniqueWithoutOwnerInput {
  where: PluginWhereUniqueInput!
  data: PluginUpdateWithoutOwnerInput!
}

input PluginUpdateManyWithWhereWithoutOwnerInput {
  where: PluginScalarWhereInput!
  data: PluginUpdateManyMutationInput!
}

input PluginScalarWhereInput {
  AND: [PluginScalarWhereInput!]
  OR: [PluginScalarWhereInput!]
  NOT: [PluginScalarWhereInput!]
  id: StringFilter
  source_url: StringFilter
  type: StringFilter
  user_params: JsonFilter
  ownerId: StringFilter
  source: JsonNullableFilter
  source_sha1: StringNullableFilter
  lastUpdatedAt: DateTimeFilter
  createdAt: DateTimeFilter
}

input PluginUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  source_url: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  user_params: JSON
  source: JSON
  source_sha1: NullableStringFieldUpdateOperationsInput
  lastUpdatedAt: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}

input SubscriptionUpdateWithWhereUniqueWithoutFeedInput {
  where: SubscriptionWhereUniqueInput!
  data: SubscriptionUpdateWithoutFeedInput!
}

input SubscriptionUpdateManyWithWhereWithoutFeedInput {
  where: SubscriptionScalarWhereInput!
  data: SubscriptionUpdateManyMutationInput!
}

input SubscriptionScalarWhereInput {
  AND: [SubscriptionScalarWhereInput!]
  OR: [SubscriptionScalarWhereInput!]
  NOT: [SubscriptionScalarWhereInput!]
  id: StringFilter
  inactive: BoolFilter
  createdAt: DateTimeFilter
  lastUpdatedAt: DateTimeNullableFilter
  title: StringFilter
  tags: JsonNullableFilter
  feedId: StringFilter
  ownerId: StringFilter
  bucketId: StringFilter
}

input SubscriptionUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  inactive: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  tags: JSON
}

input FeedUpdateWithWhereUniqueWithoutOwnerInput {
  where: FeedWhereUniqueInput!
  data: FeedUpdateWithoutOwnerInput!
}

input FeedUpdateManyWithWhereWithoutOwnerInput {
  where: FeedScalarWhereInput!
  data: FeedUpdateManyMutationInput!
}

input NotebookUpdateWithWhereUniqueWithoutStreamInput {
  where: NotebookWhereUniqueInput!
  data: NotebookUpdateWithoutStreamInput!
}

input NotebookUpdateManyWithWhereWithoutStreamInput {
  where: NotebookScalarWhereInput!
  data: NotebookUpdateManyMutationInput!
}

input NotebookScalarWhereInput {
  AND: [NotebookScalarWhereInput!]
  OR: [NotebookScalarWhereInput!]
  NOT: [NotebookScalarWhereInput!]
  id: StringFilter
  name: StringFilter
  description: StringFilter
  readonly: BoolFilter
  listed: BoolFilter
  streamId: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  ownerId: StringFilter
}

input NotebookUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  readonly: BoolFieldUpdateOperationsInput
  listed: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SubscriptionUpdateWithWhereUniqueWithoutOwnerInput {
  where: SubscriptionWhereUniqueInput!
  data: SubscriptionUpdateWithoutOwnerInput!
}

input SubscriptionUpdateManyWithWhereWithoutOwnerInput {
  where: SubscriptionScalarWhereInput!
  data: SubscriptionUpdateManyMutationInput!
}

input BucketUpdateWithWhereUniqueWithoutStreamInput {
  where: BucketWhereUniqueInput!
  data: BucketUpdateWithoutStreamInput!
}

input BucketUpdateManyWithWhereWithoutStreamInput {
  where: BucketScalarWhereInput!
  data: BucketUpdateManyMutationInput!
}

input BucketScalarWhereInput {
  AND: [BucketScalarWhereInput!]
  OR: [BucketScalarWhereInput!]
  NOT: [BucketScalarWhereInput!]
  id: StringFilter
  title: StringFilter
  description: StringNullableFilter
  is_public: BoolFilter
  tags: JsonNullableFilter
  in_focus: BoolFilter
  type: IntFilter
  ownerId: StringFilter
  lastUpdatedAt: DateTimeNullableFilter
  createdAt: DateTimeFilter
  streamId: StringFilter
}

input BucketUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  is_public: BoolFieldUpdateOperationsInput
  tags: JSON
  in_focus: BoolFieldUpdateOperationsInput
  type: IntFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}

input NotebookUpdateWithWhereUniqueWithoutOwnerInput {
  where: NotebookWhereUniqueInput!
  data: NotebookUpdateWithoutOwnerInput!
}

input NotebookUpdateManyWithWhereWithoutOwnerInput {
  where: NotebookScalarWhereInput!
  data: NotebookUpdateManyMutationInput!
}

input FeedUpdateWithWhereUniqueWithoutStreamInput {
  where: FeedWhereUniqueInput!
  data: FeedUpdateWithoutStreamInput!
}

input FeedUpdateManyWithWhereWithoutStreamInput {
  where: FeedScalarWhereInput!
  data: FeedUpdateManyMutationInput!
}

input ArticleRefUpdateWithWhereUniqueWithoutOwnerInput {
  where: ArticleRefWhereUniqueInput!
  data: ArticleRefUpdateWithoutOwnerInput!
}

input ArticleRefUpdateManyWithWhereWithoutOwnerInput {
  where: ArticleRefScalarWhereInput!
  data: ArticleRefUpdateManyMutationInput!
}

input SubscriptionUpdateWithWhereUniqueWithoutBucketInput {
  where: SubscriptionWhereUniqueInput!
  data: SubscriptionUpdateWithoutBucketInput!
}

input SubscriptionUpdateManyWithWhereWithoutBucketInput {
  where: SubscriptionScalarWhereInput!
  data: SubscriptionUpdateManyMutationInput!
}

input BucketUpdateWithWhereUniqueWithoutOwnerInput {
  where: BucketWhereUniqueInput!
  data: BucketUpdateWithoutOwnerInput!
}

input BucketUpdateManyWithWhereWithoutOwnerInput {
  where: BucketScalarWhereInput!
  data: BucketUpdateManyMutationInput!
}

input ArticleRefUpdateWithWhereUniqueWithoutArticleInput {
  where: ArticleRefWhereUniqueInput!
  data: ArticleRefUpdateWithoutArticleInput!
}

input ArticleRefUpdateManyWithWhereWithoutArticleInput {
  where: ArticleRefScalarWhereInput!
  data: ArticleRefUpdateManyMutationInput!
}

input ArticleUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  released: BoolFieldUpdateOperationsInput
  date_published: DateTimeFieldUpdateOperationsInput
  date_modified: NullableDateTimeFieldUpdateOperationsInput
  comment_feed_url: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  author: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  tags: JSON
  content_raw_mime: NullableStringFieldUpdateOperationsInput
  content_raw: NullableStringFieldUpdateOperationsInput
  content_text: NullableStringFieldUpdateOperationsInput
  main_image_url: NullableStringFieldUpdateOperationsInput
  source_used: NullableStringFieldUpdateOperationsInput
  has_harvest: NullableBoolFieldUpdateOperationsInput
  has_readability: NullableBoolFieldUpdateOperationsInput
  has_video: BoolFieldUpdateOperationsInput
  has_audio: BoolFieldUpdateOperationsInput
  length_video: NullableIntFieldUpdateOperationsInput
  length_audio: NullableIntFieldUpdateOperationsInput
  word_count_text: NullableIntFieldUpdateOperationsInput
  score: NullableFloatFieldUpdateOperationsInput
  lastScoredAt: DateTimeFieldUpdateOperationsInput
  enclosure: JSON
  data_json_map: JSON
}

input ArticleExporterCreateInput {
  id: String
  segment: Boolean
  segment_sort_field: String
  segment_sort_asc: Boolean
  segment_size: Int
  segment_digest: Boolean
  segment_look_ahead_min: Int
  lastUpdatedAt: DateTime
  trigger_refresh_on: String
  trigger_scheduled_last_at: DateTime
  trigger_scheduled_next_at: DateTime
  trigger_scheduled: String
  targets: ArticleExporterTargetCreateNestedManyWithoutExporterInput
  bucket: BucketCreateNestedOneWithoutExportersInput!
}

input BucketCreateNestedOneWithoutExportersInput {
  create: BucketCreateWithoutExportersInput
  connectOrCreate: BucketCreateOrConnectWithoutExportersInput
  connect: BucketWhereUniqueInput
}

input BucketCreateWithoutExportersInput {
  id: String
  title: String!
  description: String
  is_public: Boolean
  tags: JSON
  in_focus: Boolean
  type: Int
  lastUpdatedAt: DateTime
  createdAt: DateTime
  owner: UserCreateNestedOneWithoutBucketsInput!
  subscriptions: SubscriptionCreateNestedManyWithoutBucketInput
  postProcessors: ArticlePostProcessorCreateNestedManyWithoutBucketsInput
  stream: StreamCreateNestedOneWithoutBucketsInput!
}

input BucketCreateOrConnectWithoutExportersInput {
  where: BucketWhereUniqueInput!
  create: BucketCreateWithoutExportersInput!
}

input ArticleExporterCreateManyInput {
  id: String
  segment: Boolean
  segment_sort_field: String
  segment_sort_asc: Boolean
  segment_size: Int
  segment_digest: Boolean
  segment_look_ahead_min: Int
  lastUpdatedAt: DateTime
  trigger_refresh_on: String
  trigger_scheduled_last_at: DateTime
  trigger_scheduled_next_at: DateTime
  trigger_scheduled: String
  bucketId: String!
}

input ArticleExporterUpdateInput {
  id: StringFieldUpdateOperationsInput
  segment: BoolFieldUpdateOperationsInput
  segment_sort_field: NullableStringFieldUpdateOperationsInput
  segment_sort_asc: BoolFieldUpdateOperationsInput
  segment_size: NullableIntFieldUpdateOperationsInput
  segment_digest: BoolFieldUpdateOperationsInput
  segment_look_ahead_min: NullableIntFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  trigger_refresh_on: StringFieldUpdateOperationsInput
  trigger_scheduled_last_at: NullableDateTimeFieldUpdateOperationsInput
  trigger_scheduled_next_at: NullableDateTimeFieldUpdateOperationsInput
  trigger_scheduled: NullableStringFieldUpdateOperationsInput
  targets: ArticleExporterTargetUpdateManyWithoutExporterInput
  bucket: BucketUpdateOneRequiredWithoutExportersInput
}

input BucketUpdateOneRequiredWithoutExportersInput {
  create: BucketCreateWithoutExportersInput
  connectOrCreate: BucketCreateOrConnectWithoutExportersInput
  upsert: BucketUpsertWithoutExportersInput
  connect: BucketWhereUniqueInput
  update: BucketUpdateWithoutExportersInput
}

input BucketUpsertWithoutExportersInput {
  update: BucketUpdateWithoutExportersInput!
  create: BucketCreateWithoutExportersInput!
}

input BucketUpdateWithoutExportersInput {
  id: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  is_public: BoolFieldUpdateOperationsInput
  tags: JSON
  in_focus: BoolFieldUpdateOperationsInput
  type: IntFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutBucketsInput
  subscriptions: SubscriptionUpdateManyWithoutBucketInput
  postProcessors: ArticlePostProcessorUpdateManyWithoutBucketsInput
  stream: StreamUpdateOneRequiredWithoutBucketsInput
}

input ArticleExporterTargetCreateInput {
  id: String
  type: String!
  context: String
  exporter: ArticleExporterCreateNestedOneWithoutTargetsInput!
}

input ArticleExporterCreateNestedOneWithoutTargetsInput {
  create: ArticleExporterCreateWithoutTargetsInput
  connectOrCreate: ArticleExporterCreateOrConnectWithoutTargetsInput
  connect: ArticleExporterWhereUniqueInput
}

input ArticleExporterCreateWithoutTargetsInput {
  id: String
  segment: Boolean
  segment_sort_field: String
  segment_sort_asc: Boolean
  segment_size: Int
  segment_digest: Boolean
  segment_look_ahead_min: Int
  lastUpdatedAt: DateTime
  trigger_refresh_on: String
  trigger_scheduled_last_at: DateTime
  trigger_scheduled_next_at: DateTime
  trigger_scheduled: String
  bucket: BucketCreateNestedOneWithoutExportersInput!
}

input ArticleExporterCreateOrConnectWithoutTargetsInput {
  where: ArticleExporterWhereUniqueInput!
  create: ArticleExporterCreateWithoutTargetsInput!
}

input ArticleExporterTargetCreateManyInput {
  id: String
  type: String!
  context: String
  exporterId: String!
}

input ArticleExporterTargetUpdateInput {
  id: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  context: NullableStringFieldUpdateOperationsInput
  exporter: ArticleExporterUpdateOneRequiredWithoutTargetsInput
}

input ArticleExporterUpdateOneRequiredWithoutTargetsInput {
  create: ArticleExporterCreateWithoutTargetsInput
  connectOrCreate: ArticleExporterCreateOrConnectWithoutTargetsInput
  upsert: ArticleExporterUpsertWithoutTargetsInput
  connect: ArticleExporterWhereUniqueInput
  update: ArticleExporterUpdateWithoutTargetsInput
}

input ArticleExporterUpsertWithoutTargetsInput {
  update: ArticleExporterUpdateWithoutTargetsInput!
  create: ArticleExporterCreateWithoutTargetsInput!
}

input ArticleExporterUpdateWithoutTargetsInput {
  id: StringFieldUpdateOperationsInput
  segment: BoolFieldUpdateOperationsInput
  segment_sort_field: NullableStringFieldUpdateOperationsInput
  segment_sort_asc: BoolFieldUpdateOperationsInput
  segment_size: NullableIntFieldUpdateOperationsInput
  segment_digest: BoolFieldUpdateOperationsInput
  segment_look_ahead_min: NullableIntFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  trigger_refresh_on: StringFieldUpdateOperationsInput
  trigger_scheduled_last_at: NullableDateTimeFieldUpdateOperationsInput
  trigger_scheduled_next_at: NullableDateTimeFieldUpdateOperationsInput
  trigger_scheduled: NullableStringFieldUpdateOperationsInput
  bucket: BucketUpdateOneRequiredWithoutExportersInput
}

input ArticlePostProcessorCreateInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  type: String!
  context: String
  buckets: BucketCreateNestedManyWithoutPostProcessorsInput
}

input BucketCreateNestedManyWithoutPostProcessorsInput {
  create: [BucketCreateWithoutPostProcessorsInput!]
  connectOrCreate: [BucketCreateOrConnectWithoutPostProcessorsInput!]
  connect: [BucketWhereUniqueInput!]
}

input BucketCreateWithoutPostProcessorsInput {
  id: String
  title: String!
  description: String
  is_public: Boolean
  tags: JSON
  in_focus: Boolean
  type: Int
  lastUpdatedAt: DateTime
  createdAt: DateTime
  owner: UserCreateNestedOneWithoutBucketsInput!
  subscriptions: SubscriptionCreateNestedManyWithoutBucketInput
  exporters: ArticleExporterCreateNestedManyWithoutBucketInput
  stream: StreamCreateNestedOneWithoutBucketsInput!
}

input BucketCreateOrConnectWithoutPostProcessorsInput {
  where: BucketWhereUniqueInput!
  create: BucketCreateWithoutPostProcessorsInput!
}

input ArticlePostProcessorCreateManyInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  type: String!
  context: String
}

input ArticlePostProcessorUpdateInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  context: NullableStringFieldUpdateOperationsInput
  buckets: BucketUpdateManyWithoutPostProcessorsInput
}

input BucketUpdateManyWithoutPostProcessorsInput {
  create: [BucketCreateWithoutPostProcessorsInput!]
  connectOrCreate: [BucketCreateOrConnectWithoutPostProcessorsInput!]
  upsert: [BucketUpsertWithWhereUniqueWithoutPostProcessorsInput!]
  set: [BucketWhereUniqueInput!]
  disconnect: [BucketWhereUniqueInput!]
  delete: [BucketWhereUniqueInput!]
  connect: [BucketWhereUniqueInput!]
  update: [BucketUpdateWithWhereUniqueWithoutPostProcessorsInput!]
  updateMany: [BucketUpdateManyWithWhereWithoutPostProcessorsInput!]
  deleteMany: [BucketScalarWhereInput!]
}

input BucketUpsertWithWhereUniqueWithoutPostProcessorsInput {
  where: BucketWhereUniqueInput!
  update: BucketUpdateWithoutPostProcessorsInput!
  create: BucketCreateWithoutPostProcessorsInput!
}

input BucketUpdateWithoutPostProcessorsInput {
  id: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  is_public: BoolFieldUpdateOperationsInput
  tags: JSON
  in_focus: BoolFieldUpdateOperationsInput
  type: IntFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutBucketsInput
  subscriptions: SubscriptionUpdateManyWithoutBucketInput
  exporters: ArticleExporterUpdateManyWithoutBucketInput
  stream: StreamUpdateOneRequiredWithoutBucketsInput
}

input BucketUpdateWithWhereUniqueWithoutPostProcessorsInput {
  where: BucketWhereUniqueInput!
  data: BucketUpdateWithoutPostProcessorsInput!
}

input BucketUpdateManyWithWhereWithoutPostProcessorsInput {
  where: BucketScalarWhereInput!
  data: BucketUpdateManyMutationInput!
}

input ArticleRefCreateInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  date_released: DateTime
  favored: Boolean
  has_seen: Boolean
  tags: JSON
  data: JSON
  type: String
  owner: UserCreateNestedOneWithoutArticleRefsInput
  article: ArticleCreateNestedOneWithoutArticleRefInput!
  stream: StreamCreateNestedOneWithoutArticleRefsInput!
}

input ArticleRefCreateManyInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  date_released: DateTime
  ownerId: String
  favored: Boolean
  has_seen: Boolean
  tags: JSON
  data: JSON
  articleId: String!
  type: String
  streamId: String!
}

input ArticleRefUpdateInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  date_released: DateTimeFieldUpdateOperationsInput
  favored: BoolFieldUpdateOperationsInput
  has_seen: BoolFieldUpdateOperationsInput
  tags: JSON
  data: JSON
  type: StringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutArticleRefsInput
  article: ArticleUpdateOneRequiredWithoutArticleRefInput
  stream: StreamUpdateOneRequiredWithoutArticleRefsInput
}

input BucketCreateInput {
  id: String
  title: String!
  description: String
  is_public: Boolean
  tags: JSON
  in_focus: Boolean
  type: Int
  lastUpdatedAt: DateTime
  createdAt: DateTime
  owner: UserCreateNestedOneWithoutBucketsInput!
  subscriptions: SubscriptionCreateNestedManyWithoutBucketInput
  postProcessors: ArticlePostProcessorCreateNestedManyWithoutBucketsInput
  exporters: ArticleExporterCreateNestedManyWithoutBucketInput
  stream: StreamCreateNestedOneWithoutBucketsInput!
}

input BucketCreateManyInput {
  id: String
  title: String!
  description: String
  is_public: Boolean
  tags: JSON
  in_focus: Boolean
  type: Int
  ownerId: String!
  lastUpdatedAt: DateTime
  createdAt: DateTime
  streamId: String!
}

input BucketUpdateInput {
  id: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  is_public: BoolFieldUpdateOperationsInput
  tags: JSON
  in_focus: BoolFieldUpdateOperationsInput
  type: IntFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutBucketsInput
  subscriptions: SubscriptionUpdateManyWithoutBucketInput
  postProcessors: ArticlePostProcessorUpdateManyWithoutBucketsInput
  exporters: ArticleExporterUpdateManyWithoutBucketInput
  stream: StreamUpdateOneRequiredWithoutBucketsInput
}

input EventHookCreateInput {
  id: String
  event: String!
  type: String!
  script_or_url: String!
  script_source_url: String
  owner: UserCreateNestedOneWithoutEventHooksInput!
}

input UserCreateNestedOneWithoutEventHooksInput {
  create: UserCreateWithoutEventHooksInput
  connectOrCreate: UserCreateOrConnectWithoutEventHooksInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutEventHooksInput {
  id: String
  email: String!
  name: String!
  date_format: String
  time_format: String
  createdAt: DateTime
  buckets: BucketCreateNestedManyWithoutOwnerInput
  articleRefs: ArticleRefCreateNestedManyWithoutOwnerInput
  notebooks: NotebookCreateNestedManyWithoutOwnerInput
  subscription: SubscriptionCreateNestedManyWithoutOwnerInput
  feeds: FeedCreateNestedManyWithoutOwnerInput
  plugins: PluginCreateNestedManyWithoutOwnerInput
}

input UserCreateOrConnectWithoutEventHooksInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutEventHooksInput!
}

input EventHookCreateManyInput {
  id: String
  ownerId: String!
  event: String!
  type: String!
  script_or_url: String!
  script_source_url: String
}

input EventHookUpdateInput {
  id: StringFieldUpdateOperationsInput
  event: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  script_or_url: StringFieldUpdateOperationsInput
  script_source_url: NullableStringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutEventHooksInput
}

input UserUpdateOneRequiredWithoutEventHooksInput {
  create: UserCreateWithoutEventHooksInput
  connectOrCreate: UserCreateOrConnectWithoutEventHooksInput
  upsert: UserUpsertWithoutEventHooksInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutEventHooksInput
}

input UserUpsertWithoutEventHooksInput {
  update: UserUpdateWithoutEventHooksInput!
  create: UserCreateWithoutEventHooksInput!
}

input UserUpdateWithoutEventHooksInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  date_format: NullableStringFieldUpdateOperationsInput
  time_format: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  buckets: BucketUpdateManyWithoutOwnerInput
  articleRefs: ArticleRefUpdateManyWithoutOwnerInput
  notebooks: NotebookUpdateManyWithoutOwnerInput
  subscription: SubscriptionUpdateManyWithoutOwnerInput
  feeds: FeedUpdateManyWithoutOwnerInput
  plugins: PluginUpdateManyWithoutOwnerInput
}

input FeedCreateInput {
  id: String
  feed_url: String!
  feed_url_auth_header: String
  home_page_url: String
  domain: String!
  op_secret: String
  title: String
  tags: JSON
  author: String
  failed_attempt_count: Int
  is_private: Boolean
  expired: Boolean
  broken: Boolean
  inactive: Boolean
  managed: Boolean
  filter: String
  description: String
  status: String
  lastStatusChangeAt: DateTime
  harvestIntervalMinutes: Int
  nextHarvestAt: DateTime
  retention_size: Int
  harvest_site: Boolean
  allowHarvestFailure: Boolean
  harvest_prerender: Boolean
  createdAt: DateTime
  lastUpdatedAt: DateTime
  owner: UserCreateNestedOneWithoutFeedsInput!
  managed_by_plugin: PluginCreateNestedOneWithoutFeedsInput
  stream: StreamCreateNestedOneWithoutFeedsInput!
  subscriptions: SubscriptionCreateNestedManyWithoutFeedInput
}

input FeedCreateManyInput {
  id: String
  feed_url: String!
  feed_url_auth_header: String
  home_page_url: String
  domain: String!
  op_secret: String
  title: String
  tags: JSON
  author: String
  ownerId: String!
  failed_attempt_count: Int
  is_private: Boolean
  expired: Boolean
  broken: Boolean
  inactive: Boolean
  managed: Boolean
  managed_by_plugin_id: String
  filter: String
  description: String
  status: String
  lastStatusChangeAt: DateTime
  harvestIntervalMinutes: Int
  nextHarvestAt: DateTime
  retention_size: Int
  harvest_site: Boolean
  allowHarvestFailure: Boolean
  harvest_prerender: Boolean
  streamId: String!
  createdAt: DateTime
  lastUpdatedAt: DateTime
}

input FeedUpdateInput {
  id: StringFieldUpdateOperationsInput
  feed_url: StringFieldUpdateOperationsInput
  feed_url_auth_header: NullableStringFieldUpdateOperationsInput
  home_page_url: NullableStringFieldUpdateOperationsInput
  domain: StringFieldUpdateOperationsInput
  op_secret: StringFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  tags: JSON
  author: NullableStringFieldUpdateOperationsInput
  failed_attempt_count: IntFieldUpdateOperationsInput
  is_private: BoolFieldUpdateOperationsInput
  expired: BoolFieldUpdateOperationsInput
  broken: BoolFieldUpdateOperationsInput
  inactive: BoolFieldUpdateOperationsInput
  managed: BoolFieldUpdateOperationsInput
  filter: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  status: StringFieldUpdateOperationsInput
  lastStatusChangeAt: NullableDateTimeFieldUpdateOperationsInput
  harvestIntervalMinutes: NullableIntFieldUpdateOperationsInput
  nextHarvestAt: NullableDateTimeFieldUpdateOperationsInput
  retention_size: NullableIntFieldUpdateOperationsInput
  harvest_site: BoolFieldUpdateOperationsInput
  allowHarvestFailure: BoolFieldUpdateOperationsInput
  harvest_prerender: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutFeedsInput
  managed_by_plugin: PluginUpdateOneWithoutFeedsInput
  stream: StreamUpdateOneRequiredWithoutFeedsInput
  subscriptions: SubscriptionUpdateManyWithoutFeedInput
}

input NoFollowUrlCreateInput {
  id: String
  url_prefix: String!
}

input NoFollowUrlCreateManyInput {
  id: String
  url_prefix: String!
}

input NoFollowUrlUpdateInput {
  id: StringFieldUpdateOperationsInput
  url_prefix: StringFieldUpdateOperationsInput
}

input NoFollowUrlUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  url_prefix: StringFieldUpdateOperationsInput
}

input NotebookCreateInput {
  id: String
  name: String!
  description: String
  readonly: Boolean
  listed: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  stream: StreamCreateNestedOneWithoutNotebooksInput!
  owner: UserCreateNestedOneWithoutNotebooksInput!
}

input NotebookCreateManyInput {
  id: String
  name: String!
  description: String
  readonly: Boolean
  listed: Boolean
  streamId: String!
  createdAt: DateTime
  updatedAt: DateTime
  ownerId: String!
}

input NotebookUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  readonly: BoolFieldUpdateOperationsInput
  listed: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  stream: StreamUpdateOneRequiredWithoutNotebooksInput
  owner: UserUpdateOneRequiredWithoutNotebooksInput
}

input PluginCreateInput {
  id: String
  source_url: String!
  type: String!
  user_params: JSON!
  source: JSON
  source_sha1: String
  lastUpdatedAt: DateTime!
  createdAt: DateTime
  owner: UserCreateNestedOneWithoutPluginsInput
  feeds: FeedCreateNestedManyWithoutManaged_by_pluginInput
}

input PluginCreateManyInput {
  id: String
  source_url: String!
  type: String!
  user_params: JSON!
  ownerId: String
  source: JSON
  source_sha1: String
  lastUpdatedAt: DateTime!
  createdAt: DateTime
}

input PluginUpdateInput {
  id: StringFieldUpdateOperationsInput
  source_url: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  user_params: JSON
  source: JSON
  source_sha1: NullableStringFieldUpdateOperationsInput
  lastUpdatedAt: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutPluginsInput
  feeds: FeedUpdateManyWithoutManaged_by_pluginInput
}

input StreamCreateInput {
  id: String
  articleRefs: ArticleRefCreateNestedManyWithoutStreamInput
  feeds: FeedCreateNestedManyWithoutStreamInput
  buckets: BucketCreateNestedManyWithoutStreamInput
  notebooks: NotebookCreateNestedManyWithoutStreamInput
}

input StreamCreateManyInput {
  id: String
}

input StreamUpdateInput {
  id: StringFieldUpdateOperationsInput
  articleRefs: ArticleRefUpdateManyWithoutStreamInput
  feeds: FeedUpdateManyWithoutStreamInput
  buckets: BucketUpdateManyWithoutStreamInput
  notebooks: NotebookUpdateManyWithoutStreamInput
}

input StreamUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input SubscriptionCreateInput {
  id: String
  inactive: Boolean
  createdAt: DateTime
  lastUpdatedAt: DateTime
  title: String!
  tags: JSON
  feed: FeedCreateNestedOneWithoutSubscriptionsInput!
  owner: UserCreateNestedOneWithoutSubscriptionInput!
  bucket: BucketCreateNestedOneWithoutSubscriptionsInput!
}

input SubscriptionCreateManyInput {
  id: String
  inactive: Boolean
  createdAt: DateTime
  lastUpdatedAt: DateTime
  title: String!
  tags: JSON
  feedId: String!
  ownerId: String!
  bucketId: String!
}

input SubscriptionUpdateInput {
  id: StringFieldUpdateOperationsInput
  inactive: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  lastUpdatedAt: NullableDateTimeFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  tags: JSON
  feed: FeedUpdateOneRequiredWithoutSubscriptionsInput
  owner: UserUpdateOneRequiredWithoutSubscriptionInput
  bucket: BucketUpdateOneRequiredWithoutSubscriptionsInput
}

input UserCreateInput {
  id: String
  email: String!
  name: String!
  date_format: String
  time_format: String
  createdAt: DateTime
  buckets: BucketCreateNestedManyWithoutOwnerInput
  articleRefs: ArticleRefCreateNestedManyWithoutOwnerInput
  notebooks: NotebookCreateNestedManyWithoutOwnerInput
  subscription: SubscriptionCreateNestedManyWithoutOwnerInput
  feeds: FeedCreateNestedManyWithoutOwnerInput
  eventHooks: EventHookCreateNestedManyWithoutOwnerInput
  plugins: PluginCreateNestedManyWithoutOwnerInput
}

input UserCreateManyInput {
  id: String
  email: String!
  name: String!
  date_format: String
  time_format: String
  createdAt: DateTime
}

input UserUpdateInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  date_format: NullableStringFieldUpdateOperationsInput
  time_format: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  buckets: BucketUpdateManyWithoutOwnerInput
  articleRefs: ArticleRefUpdateManyWithoutOwnerInput
  notebooks: NotebookUpdateManyWithoutOwnerInput
  subscription: SubscriptionUpdateManyWithoutOwnerInput
  feeds: FeedUpdateManyWithoutOwnerInput
  eventHooks: EventHookUpdateManyWithoutOwnerInput
  plugins: PluginUpdateManyWithoutOwnerInput
}

input UserUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  date_format: NullableStringFieldUpdateOperationsInput
  time_format: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}
